{
  "contractName": "IRevenueDistributionToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "freeAssets_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "issuanceRate_",
          "type": "uint256"
        }
      ],
      "name": "IssuanceParamsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner_",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "OwnershipAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pendingOwner_",
          "type": "address"
        }
      ],
      "name": "PendingOwnerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vestingPeriodFinish_",
          "type": "uint256"
        }
      ],
      "name": "VestingScheduleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "domainSeparator_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "permitTypehash_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender_",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "allowance_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "asset_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account_",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "name": "convertToAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "name": "convertToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedAmount_",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedAmount_",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        }
      ],
      "name": "maxDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        }
      ],
      "name": "maxMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "maxRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "maxWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline_",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v_",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r_",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s_",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "name": "previewDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "name": "previewMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "name": "previewRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "name": "previewWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalAssets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalSupply_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freeAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "freeAssets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issuanceRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "issuanceRate_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastUpdated_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "pendingOwner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "precision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "precision_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingPeriodFinish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vestingPeriodFinish_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pendingOwner_",
          "type": "address"
        }
      ],
      "name": "setPendingOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vestingPeriod_",
          "type": "uint256"
        }
      ],
      "name": "updateVestingSchedule",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "issuanceRate_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "freeAssets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline_",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v_",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r_",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s_",
          "type": "bytes32"
        }
      ],
      "name": "depositWithPermit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAssets_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline_",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v_",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r_",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s_",
          "type": "bytes32"
        }
      ],
      "name": "mintWithPermit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account_",
          "type": "address"
        }
      ],
      "name": "balanceOfAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"freeAssets_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"issuanceRate_\",\"type\":\"uint256\"}],\"name\":\"IssuanceParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"OwnershipAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner_\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingPeriodFinish_\",\"type\":\"uint256\"}],\"name\":\"VestingScheduleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"domainSeparator_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"permitTypehash_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender_\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"}],\"name\":\"balanceOfAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedAmount_\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline_\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v_\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s_\",\"type\":\"bytes32\"}],\"name\":\"depositWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"freeAssets_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedAmount_\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuanceRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"issuanceRate_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastUpdated_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAssets_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline_\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v_\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s_\",\"type\":\"bytes32\"}],\"name\":\"mintWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline_\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v_\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s_\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"precision_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner_\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAssets_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vestingPeriod_\",\"type\":\"uint256\"}],\"name\":\"updateVestingSchedule\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"issuanceRate_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"freeAssets_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingPeriodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vestingPeriodFinish_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"IssuanceParamsUpdated(uint256,uint256)\":{\"details\":\"Issuance parameters have been updated after a `_mint` or `_burn`.\",\"params\":{\"freeAssets_\":\"Resulting `freeAssets` (y-intercept) value after accounting update.\",\"issuanceRate_\":\"The new issuance rate of `asset` until `vestingPeriodFinish_`.\"}},\"OwnershipAccepted(address,address)\":{\"details\":\"`newOwner_` has accepted the transferral of RDT ownership from `previousOwner_`.\",\"params\":{\"newOwner_\":\"The new RDT owner.\",\"previousOwner_\":\"The previous RDT owner.\"}},\"PendingOwnerSet(address,address)\":{\"details\":\"`owner_` has set the new pending owner of RDT to `pendingOwner_`.\",\"params\":{\"owner_\":\"The current RDT owner.\",\"pendingOwner_\":\"The new pending RDT owner.\"}},\"VestingScheduleUpdated(address,uint256)\":{\"details\":\"`owner_` has updated the RDT vesting schedule to end at `vestingPeriodFinish_`.\",\"params\":{\"owner_\":\"The current RDT owner.\",\"vestingPeriodFinish_\":\"When the unvested balance will finish vesting.\"}}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the signature domain separator.\",\"returns\":{\"domainSeparator_\":\"The signature domain separator.\"}},\"PERMIT_TYPEHASH()\":{\"details\":\"Returns the permit type hash.\",\"returns\":{\"permitTypehash_\":\"The permit type hash.\"}},\"acceptOwnership()\":{\"details\":\"Sets the pending owner as the new owner.       Can be called only by the pending owner, and only after their nomination by the current owner.\"},\"allowance(address,address)\":{\"details\":\"Returns the allowance that one account has given another over their tokens.\",\"params\":{\"owner_\":\"Account that tokens are approved from.\",\"spender_\":\"Account that tokens are approved for.\"},\"returns\":{\"allowance_\":\"Allowance that one account has given another over their tokens.\"}},\"approve(address,uint256)\":{\"details\":\"Function that allows one account to set the allowance of another account over their tokens.          Emits an {Approval} event.\",\"params\":{\"amount_\":\"Amount of tokens that have been approved.\",\"spender_\":\"Account that tokens are approved for.\"},\"returns\":{\"success_\":\"Boolean indicating whether the operation succeeded.\"}},\"asset()\":{\"details\":\"The address of the underlying asset used by the Vault.          MUST be a contract that implements the ERC-20 standard.          MUST NOT revert.\",\"returns\":{\"asset_\":\"The address of the underlying asset.\"}},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by a given account.\",\"params\":{\"account_\":\"Account that owns the tokens.\"},\"returns\":{\"balance_\":\"Amount of tokens owned by a given account.\"}},\"balanceOfAssets(address)\":{\"details\":\"Returns the amount of underlying assets owned by the specified account.\",\"params\":{\"account_\":\"Address of the account.\"},\"returns\":{\"assets_\":\" Amount of assets owned.\"}},\"convertToAssets(uint256)\":{\"details\":\"The amount of `assets_` the `shares_` are currently equivalent to.          MUST NOT be inclusive of any fees that are charged against assets in the Vault.          MUST NOT reflect slippage or other on-chain conditions when performing the actual exchange.          MUST NOT show any variations depending on the caller.          MUST NOT revert.\",\"params\":{\"shares_\":\"The amount of shares to convert.\"},\"returns\":{\"assets_\":\"The amount of equivalent assets.\"}},\"convertToShares(uint256)\":{\"details\":\"The amount of `shares_` the `assets_` are currently equivalent to.          MUST NOT be inclusive of any fees that are charged against assets in the Vault.          MUST NOT reflect slippage or other on-chain conditions when performing the actual exchange.          MUST NOT show any variations depending on the caller.          MUST NOT revert.\",\"params\":{\"assets_\":\"The amount of assets to convert.\"},\"returns\":{\"shares_\":\"The amount of equivalent shares.\"}},\"decimals()\":{\"details\":\"Returns the decimal precision used by the token.\",\"returns\":{\"decimals_\":\"The decimal precision used by the token.\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Function that allows one account to decrease the allowance of another account over their tokens.          Emits an {Approval} event.\",\"params\":{\"spender_\":\"Account that tokens are approved for.\",\"subtractedAmount_\":\"Amount to decrease approval by.\"},\"returns\":{\"success_\":\"         Boolean indicating whether the operation succeeded.\"}},\"deposit(uint256,address)\":{\"details\":\"Mints `shares_` to `receiver_` by depositing `assets_` into the Vault.          MUST emit the {Deposit} event.          MUST revert if all of the assets cannot be deposited (due to insufficient approval, deposit limits, slippage, etc).\",\"params\":{\"assets_\":\"The amount of assets to deposit.\",\"receiver_\":\"The receiver of the shares.\"},\"returns\":{\"shares_\":\"  The amount of shares minted.\"}},\"depositWithPermit(uint256,address,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Does a ERC4626 `deposit` with a ERC-2612 `permit`.\",\"params\":{\"assets_\":\"The amount of `asset` to deposit.\",\"deadline_\":\"The timestamp after which the `permit` signature is no longer valid.\",\"r_\":\"ECDSA signature r component.\",\"receiver_\":\"The receiver of the shares.\",\"s_\":\"ECDSA signature s component.\",\"v_\":\"ECDSA signature v component.\"},\"returns\":{\"shares_\":\"  The amount of shares minted.\"}},\"freeAssets()\":{\"details\":\"The total amount of the underlying asset that is currently unlocked and is not time-dependent.       Analogous to the y-intercept in a linear function.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Function that allows one account to increase the allowance of another account over their tokens.          Emits an {Approval} event.\",\"params\":{\"addedAmount_\":\"Amount to increase approval by.\",\"spender_\":\"Account that tokens are approved for.\"},\"returns\":{\"success_\":\"    Boolean indicating whether the operation succeeded.\"}},\"issuanceRate()\":{\"details\":\"The rate of issuance of the vesting schedule that is currently active.       Denominated as the amount of underlying assets vesting per second.\"},\"lastUpdated()\":{\"details\":\"The timestamp of when the linear function was last recalculated.       Analogous to t0 in a linear function.\"},\"maxDeposit(address)\":{\"details\":\"Maximum amount of `assets_` that can be deposited on behalf of the `receiver_` through a `deposit` call.          MUST return a limited value if the receiver is subject to any limits, or the maximum value otherwise.          MUST NOT revert.\",\"params\":{\"receiver_\":\"The receiver of the assets.\"},\"returns\":{\"assets_\":\"  The maximum amount of assets that can be deposited.\"}},\"maxMint(address)\":{\"details\":\"Maximum amount of `shares_` that can be minted on behalf of the `receiver_` through a `mint` call.          MUST return a limited value if the receiver is subject to any limits, or the maximum value otherwise.          MUST NOT revert.\",\"params\":{\"receiver_\":\"The receiver of the shares.\"},\"returns\":{\"shares_\":\"  The maximum amount of shares that can be minted.\"}},\"maxRedeem(address)\":{\"details\":\"Maximum amount of `shares_` that can be redeemed from the\\u00a0`owner_` through a\\u00a0`redeem`\\u00a0call.          MUST return a limited value if\\u00a0the owner\\u00a0is subject to any limits, or the total amount of owned shares otherwise.          MUST\\u00a0NOT\\u00a0revert.\",\"params\":{\"owner_\":\"The owner of the shares.\"},\"returns\":{\"shares_\":\"The maximum amount of shares that can be redeemed.\"}},\"maxWithdraw(address)\":{\"details\":\"Maximum amount of `assets_` that can be withdrawn from the `owner_` through a `withdraw` call.          MUST return a limited value if the owner is subject to any limits, or the total amount of owned assets otherwise.          MUST NOT revert.\",\"params\":{\"owner_\":\"The owner of the assets.\"},\"returns\":{\"assets_\":\"The maximum amount of assets that can be withdrawn.\"}},\"mint(uint256,address)\":{\"details\":\"Mints `shares_` to `receiver_` by depositing `assets_` into the Vault.          MUST emit the {Deposit} event.          MUST revert if all of shares cannot be minted (due to insufficient approval, deposit limits, slippage, etc).\",\"params\":{\"receiver_\":\"The receiver of the shares.\",\"shares_\":\"The amount of shares to mint.\"},\"returns\":{\"assets_\":\"  The amount of assets deposited.\"}},\"mintWithPermit(uint256,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Does a ERC4626 `mint` with a ERC-2612 `permit`.\",\"params\":{\"deadline_\":\"The timestamp after which the `permit` signature is no longer valid.\",\"maxAssets_\":\"The maximum amount of assets that can be taken, as per the permit.\",\"r_\":\"ECDSA signature r component.\",\"receiver_\":\"The receiver of the shares.\",\"s_\":\"ECDSA signature s component.\",\"shares_\":\"The amount of `shares` to mint.\",\"v_\":\"ECDSA signature v component.\"},\"returns\":{\"assets_\":\"   The amount of shares deposited.\"}},\"name()\":{\"details\":\"Returns the name of the token.\",\"returns\":{\"name_\":\"The name of the token.\"}},\"nonces(address)\":{\"details\":\"Returns the nonce for the given owner.\",\"params\":{\"owner_\":\"The address of the owner account.\"},\"returns\":{\"nonce_\":\"The nonce for the given owner.\"}},\"owner()\":{\"details\":\"The address of the account that is allowed to update the vesting schedule.\"},\"pendingOwner()\":{\"details\":\"The next owner, nominated by the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Approve by signature.\",\"params\":{\"amount_\":\"Permit approval spend limit.\",\"deadline_\":\"Deadline after which the permit is invalid.\",\"owner_\":\"Owner address that signed the permit.\",\"r_\":\"ECDSA signature r component.\",\"s_\":\"ECDSA signature s component.\",\"spender_\":\"Spender of the permit.\",\"v_\":\"ECDSA signature v component.\"}},\"precision()\":{\"details\":\"The precision at which the issuance rate is measured.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions.          MUST return as close to and no more than the exact amount of shares that would be minted in a `deposit` call in the same transaction.          MUST NOT account for deposit limits like those returned from `maxDeposit` and should always act as though the deposit would be accepted.          MUST NOT revert.\",\"params\":{\"assets_\":\"The amount of assets to deposit.\"},\"returns\":{\"shares_\":\"The amount of shares that would be minted.\"}},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions.          MUST return as close to and no fewer than the exact amount of assets that would be deposited in a `mint` call in the same transaction.          MUST NOT account for mint limits like those returned from `maxMint` and should always act as though the minting would be accepted.          MUST NOT revert.\",\"params\":{\"shares_\":\"The amount of shares to mint.\"},\"returns\":{\"assets_\":\"The amount of assets that would be deposited.\"}},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redemption at the current block, given current on-chain conditions.          MUST return as close to and no more than the exact amount of assets that would be withdrawn in a\\u00a0`redeem`\\u00a0call in the same transaction.          MUST NOT account for redemption limits like those returned from `maxRedeem` and should always act as though the redemption would be accepted.          MUST NOT revert.\",\"params\":{\"shares_\":\"The amount of shares to redeem.\"},\"returns\":{\"assets_\":\"The amount of assets that would be withdrawn.\"}},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions.          MUST return as close to and no fewer than the exact amount of shares that would be burned in a\\u00a0`withdraw`\\u00a0call in the same transaction.          MUST NOT account for withdrawal limits like those returned from `maxWithdraw` and should always act as though the withdrawal would be accepted.          MUST NOT revert.\",\"params\":{\"assets_\":\"The amount of assets to withdraw.\"},\"returns\":{\"shares_\":\"The amount of shares that would be redeemed.\"}},\"redeem(uint256,address,address)\":{\"details\":\"Burns\\u00a0`shares_`\\u00a0from\\u00a0`owner_`\\u00a0and sends\\u00a0`assets_` to\\u00a0`receiver_`.          MUST emit the\\u00a0{Withdraw}\\u00a0event.          MUST revert if all of\\u00a0the shares\\u00a0cannot be redeemed (due to insufficient shares, withdrawal limits, slippage, etc).\",\"params\":{\"owner_\":\"The owner of the shares.\",\"receiver_\":\"The receiver of the assets.\",\"shares_\":\"The amount of shares to redeem.\"},\"returns\":{\"assets_\":\"  The amount of assets sent to the receiver.\"}},\"setPendingOwner(address)\":{\"details\":\"Sets a new address as the pending owner.\",\"params\":{\"pendingOwner_\":\"The address of the next potential owner.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token.\",\"returns\":{\"symbol_\":\"The symbol of the token.\"}},\"totalAssets()\":{\"details\":\"Total amount of the underlying asset that is managed by the Vault.          SHOULD include compounding that occurs from any yields.          MUST NOT revert.\",\"returns\":{\"totalAssets_\":\"The total amount of assets the Vault manages.\"}},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens in existence.\",\"returns\":{\"totalSupply_\":\"The total amount of tokens in existence.\"}},\"transfer(address,uint256)\":{\"details\":\"Moves an amount of tokens from `msg.sender` to a specified account.          Emits a {Transfer} event.\",\"params\":{\"amount_\":\"Amount of tokens that are transferred.\",\"recipient_\":\"Account that receives tokens.\"},\"returns\":{\"success_\":\"  Boolean indicating whether the operation succeeded.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a pre-approved amount of tokens from a sender to a specified account.          Emits a {Transfer} event.          Emits an {Approval} event.\",\"params\":{\"amount_\":\"Amount of tokens that are transferred.\",\"owner_\":\"Account that tokens are moving from.\",\"recipient_\":\"Account that receives tokens.\"},\"returns\":{\"success_\":\"  Boolean indicating whether the operation succeeded.\"}},\"updateVestingSchedule(uint256)\":{\"details\":\"Updates the current vesting formula based on the amount of total unvested funds in the contract and the new `vestingPeriod_`.\",\"params\":{\"vestingPeriod_\":\"The amount of time over which all currently unaccounted underlying assets will be vested over.\"},\"returns\":{\"freeAssets_\":\"   The new amount of underlying assets that are unlocked.\",\"issuanceRate_\":\" The new issuance rate.\"}},\"vestingPeriodFinish()\":{\"details\":\"The end of the current vesting schedule.\"},\"withdraw(uint256,address,address)\":{\"details\":\"Burns\\u00a0`shares_`\\u00a0from\\u00a0`owner_`\\u00a0and sends `assets_`\\u00a0to `receiver_`.          MUST emit the\\u00a0{Withdraw}\\u00a0event.          MUST revert if all of\\u00a0the assets\\u00a0cannot be withdrawn (due to insufficient assets, withdrawal limits, slippage, etc).\",\"params\":{\"assets_\":\"The amount of assets to withdraw.\",\"owner_\":\"The owner of the assets.\",\"receiver_\":\"The receiver of the assets.\"},\"returns\":{\"shares_\":\"  The amount of shares burned from the owner.\"}}},\"title\":\"A token that represents ownership of future revenues distributed linearly over time.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IRevenueDistributionToken.sol\":\"IRevenueDistributionToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0xda8327c5dacee8c853be870f3fc90c67e7351b242ca7317073d83032f034d8ed\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fac8e65a2c903fe0e5f5b137166535d7908b81978c05457149c6bfbbb10a2120\",\"dweb:/ipfs/QmSzcsy5PvbjNSzi6npx5vSXWwhvne2vZVgYZLmhcBWq4v\"]},\"project:/contracts/interfaces/IRevenueDistributionToken.sol\":{\"keccak256\":\"0xb837508aa35d103b2714432bc24da9414f0ce45dd72c2bda7d4d3b75cc297e74\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c83cb1e2cbef57088047f2bac83f009ad9df6374ddd20006c21634b06bedecf9\",\"dweb:/ipfs/QmZmCMe4VhURM9aQxj86HrU28bckAtgk5MiJ3qh6dyaahi\"]},\"project:/modules/erc20/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x3467fb0980a24c1a3ea54093029a9321e316ae22e5d70d6bd961fe6c44f15161\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://47d2e51f1b88b432d1372b2c36fc3dcadcc74f9854bcf1b5bf4f52e0f6418c21\",\"dweb:/ipfs/QmVjadyhNCrEiSpZLQwJefPBwtweaFMZCLp9fDS56QprbP\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.4.22 <0.9.0;\n\nimport { IERC20 } from \"../../modules/erc20/contracts/interfaces/IERC20.sol\";\n\nimport { IERC4626 } from \"./IERC4626.sol\";\n\n/// @title A token that represents ownership of future revenues distributed linearly over time.\ninterface IRevenueDistributionToken is IERC20, IERC4626 {\n\n    /**************/\n    /*** Events ***/\n    /**************/\n\n    /**\n     *  @dev   Issuance parameters have been updated after a `_mint` or `_burn`.\n     *  @param freeAssets_   Resulting `freeAssets` (y-intercept) value after accounting update.\n     *  @param issuanceRate_ The new issuance rate of `asset` until `vestingPeriodFinish_`.\n     */\n    event IssuanceParamsUpdated(uint256 freeAssets_, uint256 issuanceRate_);\n\n    /**\n     *  @dev   `newOwner_` has accepted the transferral of RDT ownership from `previousOwner_`.\n     *  @param previousOwner_ The previous RDT owner.\n     *  @param newOwner_      The new RDT owner.\n     */\n    event OwnershipAccepted(address indexed previousOwner_, address indexed newOwner_);\n\n    /**\n     *  @dev   `owner_` has set the new pending owner of RDT to `pendingOwner_`.\n     *  @param owner_        The current RDT owner.\n     *  @param pendingOwner_ The new pending RDT owner.\n     */\n    event PendingOwnerSet(address indexed owner_, address indexed pendingOwner_);\n\n    /**\n     *  @dev   `owner_` has updated the RDT vesting schedule to end at `vestingPeriodFinish_`.\n     *  @param owner_               The current RDT owner.\n     *  @param vestingPeriodFinish_ When the unvested balance will finish vesting.\n     */\n    event VestingScheduleUpdated(address indexed owner_, uint256 vestingPeriodFinish_);\n\n    /***********************/\n    /*** State Variables ***/\n    /***********************/\n\n    /**\n     *  @dev The total amount of the underlying asset that is currently unlocked and is not time-dependent.\n     *       Analogous to the y-intercept in a linear function.\n     */\n    function freeAssets() external view returns (uint256 freeAssets_);\n\n    /**\n     *  @dev The rate of issuance of the vesting schedule that is currently active.\n     *       Denominated as the amount of underlying assets vesting per second.\n     */\n    function issuanceRate() external view returns (uint256 issuanceRate_);\n\n    /**\n     *  @dev The timestamp of when the linear function was last recalculated.\n     *       Analogous to t0 in a linear function.\n     */\n    function lastUpdated() external view returns (uint256 lastUpdated_);\n\n    /**\n     *  @dev The address of the account that is allowed to update the vesting schedule.\n     */\n    function owner() external view returns (address owner_);\n\n    /**\n     *  @dev The next owner, nominated by the current owner.\n     */\n    function pendingOwner() external view returns (address pendingOwner_);\n\n    /**\n     *  @dev The precision at which the issuance rate is measured.\n     */\n    function precision() external view returns (uint256 precision_);\n\n    /**\n     *  @dev The end of the current vesting schedule.\n     */\n    function vestingPeriodFinish() external view returns (uint256 vestingPeriodFinish_);\n\n    /********************************/\n    /*** Administrative Functions ***/\n    /********************************/\n\n    /**\n     *  @dev Sets the pending owner as the new owner.\n     *       Can be called only by the pending owner, and only after their nomination by the current owner.\n     */\n    function acceptOwnership() external;\n\n    /**\n     *  @dev   Sets a new address as the pending owner.\n     *  @param pendingOwner_ The address of the next potential owner.\n     */\n    function setPendingOwner(address pendingOwner_) external;\n\n    /**\n     *  @dev    Updates the current vesting formula based on the amount of total unvested funds in the contract and the new `vestingPeriod_`.\n     *  @param  vestingPeriod_ The amount of time over which all currently unaccounted underlying assets will be vested over.\n     *  @return issuanceRate_  The new issuance rate.\n     *  @return freeAssets_    The new amount of underlying assets that are unlocked.\n     */\n    function updateVestingSchedule(uint256 vestingPeriod_) external returns (uint256 issuanceRate_, uint256 freeAssets_);\n\n    /************************/\n    /*** Staker Functions ***/\n    /************************/\n\n    /**\n     *  @dev    Does a ERC4626 `deposit` with a ERC-2612 `permit`.\n     *  @param  assets_   The amount of `asset` to deposit.\n     *  @param  receiver_ The receiver of the shares.\n     *  @param  deadline_ The timestamp after which the `permit` signature is no longer valid.\n     *  @param  v_        ECDSA signature v component.\n     *  @param  r_        ECDSA signature r component.\n     *  @param  s_        ECDSA signature s component.\n     *  @return shares_   The amount of shares minted.\n     */\n    function depositWithPermit(uint256 assets_, address receiver_, uint256 deadline_, uint8 v_, bytes32 r_, bytes32 s_) external returns (uint256 shares_);\n\n    /**\n     *  @dev    Does a ERC4626 `mint` with a ERC-2612 `permit`.\n     *  @param  shares_    The amount of `shares` to mint.\n     *  @param  receiver_  The receiver of the shares.\n     *  @param  maxAssets_ The maximum amount of assets that can be taken, as per the permit.\n     *  @param  deadline_  The timestamp after which the `permit` signature is no longer valid.\n     *  @param  v_         ECDSA signature v component.\n     *  @param  r_         ECDSA signature r component.\n     *  @param  s_         ECDSA signature s component.\n     *  @return assets_    The amount of shares deposited.\n     */\n    function mintWithPermit(uint256 shares_, address receiver_, uint256 maxAssets_, uint256 deadline_, uint8 v_, bytes32 r_, bytes32 s_) external returns (uint256 assets_);\n\n\n    /**********************/\n    /*** View Functions ***/\n    /**********************/\n\n    /**\n     *  @dev    Returns the amount of underlying assets owned by the specified account.\n     *  @param  account_ Address of the account.\n     *  @return assets_  Amount of assets owned.\n     */\n    function balanceOfAssets(address account_) external view returns (uint256 assets_);\n\n}\n",
  "sourcePath": "/Users/mdoshi/wyta/contracts/interfaces/IRevenueDistributionToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IRevenueDistributionToken.sol",
    "exportedSymbols": {
      "IERC20": [
        34938
      ],
      "IERC4626": [
        1125
      ],
      "IRevenueDistributionToken": [
        1273
      ]
    },
    "id": 1274,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1127,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:32:4"
      },
      {
        "absolutePath": "project:/modules/erc20/contracts/interfaces/IERC20.sol",
        "file": "../../modules/erc20/contracts/interfaces/IERC20.sol",
        "id": 1129,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 34939,
        "src": "76:77:4",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1128,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34938,
              "src": "85:6:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERC4626.sol",
        "file": "./IERC4626.sol",
        "id": 1131,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 1126,
        "src": "155:42:4",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1130,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1125,
              "src": "164:8:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1133,
              "name": "IERC20",
              "nameLocations": [
                "334:6:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34938,
              "src": "334:6:4"
            },
            "id": 1134,
            "nodeType": "InheritanceSpecifier",
            "src": "334:6:4"
          },
          {
            "baseName": {
              "id": 1135,
              "name": "IERC4626",
              "nameLocations": [
                "342:8:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1125,
              "src": "342:8:4"
            },
            "id": 1136,
            "nodeType": "InheritanceSpecifier",
            "src": "342:8:4"
          }
        ],
        "canonicalName": "IRevenueDistributionToken",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1132,
          "nodeType": "StructuredDocumentation",
          "src": "199:96:4",
          "text": "@title A token that represents ownership of future revenues distributed linearly over time."
        },
        "fullyImplemented": false,
        "id": 1273,
        "linearizedBaseContracts": [
          1273,
          1125,
          34938
        ],
        "name": "IRevenueDistributionToken",
        "nameLocation": "305:25:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 1137,
              "nodeType": "StructuredDocumentation",
              "src": "422:281:4",
              "text": "  @dev   Issuance parameters have been updated after a `_mint` or `_burn`.\n  @param freeAssets_   Resulting `freeAssets` (y-intercept) value after accounting update.\n  @param issuanceRate_ The new issuance rate of `asset` until `vestingPeriodFinish_`."
            },
            "eventSelector": "68b521a89bf844ff03e484d89fd64ce292a698ec522170f0dad7ecd11c2dc8fa",
            "id": 1143,
            "name": "IssuanceParamsUpdated",
            "nameLocation": "714:21:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "freeAssets_",
                  "nameLocation": "744:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1143,
                  "src": "736:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1141,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "issuanceRate_",
                  "nameLocation": "765:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1143,
                  "src": "757:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "735:44:4"
            },
            "src": "708:72:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1144,
              "nodeType": "StructuredDocumentation",
              "src": "786:210:4",
              "text": "  @dev   `newOwner_` has accepted the transferral of RDT ownership from `previousOwner_`.\n  @param previousOwner_ The previous RDT owner.\n  @param newOwner_      The new RDT owner."
            },
            "eventSelector": "357bdeb5828fa83945f38a88510ce5cd7d628dafb346d767efbc693149fdd97c",
            "id": 1150,
            "name": "OwnershipAccepted",
            "nameLocation": "1007:17:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner_",
                  "nameLocation": "1041:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "1025:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1148,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner_",
                  "nameLocation": "1073:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "1057:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1024:59:4"
            },
            "src": "1001:83:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1151,
              "nodeType": "StructuredDocumentation",
              "src": "1090:200:4",
              "text": "  @dev   `owner_` has set the new pending owner of RDT to `pendingOwner_`.\n  @param owner_        The current RDT owner.\n  @param pendingOwner_ The new pending RDT owner."
            },
            "eventSelector": "a86864fa6b65f969d5ac8391ddaac6a0eba3f41386cbf6e78c3e4d6c59eb115f",
            "id": 1157,
            "name": "PendingOwnerSet",
            "nameLocation": "1301:15:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1153,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "1333:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1157,
                  "src": "1317:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1155,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pendingOwner_",
                  "nameLocation": "1357:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1157,
                  "src": "1341:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:55:4"
            },
            "src": "1295:77:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1158,
              "nodeType": "StructuredDocumentation",
              "src": "1378:248:4",
              "text": "  @dev   `owner_` has updated the RDT vesting schedule to end at `vestingPeriodFinish_`.\n  @param owner_               The current RDT owner.\n  @param vestingPeriodFinish_ When the unvested balance will finish vesting."
            },
            "eventSelector": "8c84e3b4df93f5b7c8d4ab6647708f5b14cacc124e22908187e30695ec54bab3",
            "id": 1164,
            "name": "VestingScheduleUpdated",
            "nameLocation": "1637:22:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "1676:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "1660:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1660:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vestingPeriodFinish_",
                  "nameLocation": "1692:20:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "1684:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1659:54:4"
            },
            "src": "1631:83:4"
          },
          {
            "documentation": {
              "id": 1165,
              "nodeType": "StructuredDocumentation",
              "src": "1811:183:4",
              "text": "  @dev The total amount of the underlying asset that is currently unlocked and is not time-dependent.\n       Analogous to the y-intercept in a linear function."
            },
            "functionSelector": "11f240ac",
            "id": 1170,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freeAssets",
            "nameLocation": "2008:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2018:2:4"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "freeAssets_",
                  "nameLocation": "2052:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1170,
                  "src": "2044:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2044:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2043:21:4"
            },
            "scope": 1273,
            "src": "1999:66:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1171,
              "nodeType": "StructuredDocumentation",
              "src": "2071:175:4",
              "text": "  @dev The rate of issuance of the vesting schedule that is currently active.\n       Denominated as the amount of underlying assets vesting per second."
            },
            "functionSelector": "3c9ae2ba",
            "id": 1176,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "issuanceRate",
            "nameLocation": "2260:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2272:2:4"
            },
            "returnParameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "issuanceRate_",
                  "nameLocation": "2306:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "2298:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2298:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2297:23:4"
            },
            "scope": 1273,
            "src": "2251:70:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1177,
              "nodeType": "StructuredDocumentation",
              "src": "2327:140:4",
              "text": "  @dev The timestamp of when the linear function was last recalculated.\n       Analogous to t0 in a linear function."
            },
            "functionSelector": "d0b06f5d",
            "id": 1182,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lastUpdated",
            "nameLocation": "2481:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2492:2:4"
            },
            "returnParameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1180,
                  "mutability": "mutable",
                  "name": "lastUpdated_",
                  "nameLocation": "2526:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "2518:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2517:22:4"
            },
            "scope": 1273,
            "src": "2472:68:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1183,
              "nodeType": "StructuredDocumentation",
              "src": "2546:99:4",
              "text": "  @dev The address of the account that is allowed to update the vesting schedule."
            },
            "functionSelector": "8da5cb5b",
            "id": 1188,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "2659:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2664:2:4"
            },
            "returnParameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1186,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2698:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "2690:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2690:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2689:16:4"
            },
            "scope": 1273,
            "src": "2650:56:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1189,
              "nodeType": "StructuredDocumentation",
              "src": "2712:72:4",
              "text": "  @dev The next owner, nominated by the current owner."
            },
            "functionSelector": "e30c3978",
            "id": 1194,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pendingOwner",
            "nameLocation": "2798:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2810:2:4"
            },
            "returnParameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "pendingOwner_",
                  "nameLocation": "2844:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "2836:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2835:23:4"
            },
            "scope": 1273,
            "src": "2789:70:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1195,
              "nodeType": "StructuredDocumentation",
              "src": "2865:78:4",
              "text": "  @dev The precision at which the issuance rate is measured."
            },
            "functionSelector": "d3b5dc3b",
            "id": 1200,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "precision",
            "nameLocation": "2957:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2966:2:4"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "precision_",
                  "nameLocation": "3000:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "2992:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2992:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2991:20:4"
            },
            "scope": 1273,
            "src": "2948:64:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1201,
              "nodeType": "StructuredDocumentation",
              "src": "3018:65:4",
              "text": "  @dev The end of the current vesting schedule."
            },
            "functionSelector": "3c2f7773",
            "id": 1206,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingPeriodFinish",
            "nameLocation": "3097:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3116:2:4"
            },
            "returnParameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1204,
                  "mutability": "mutable",
                  "name": "vestingPeriodFinish_",
                  "nameLocation": "3150:20:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "3142:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3141:30:4"
            },
            "scope": 1273,
            "src": "3088:84:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1207,
              "nodeType": "StructuredDocumentation",
              "src": "3296:173:4",
              "text": "  @dev Sets the pending owner as the new owner.\n       Can be called only by the pending owner, and only after their nomination by the current owner."
            },
            "functionSelector": "79ba5097",
            "id": 1210,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptOwnership",
            "nameLocation": "3483:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3498:2:4"
            },
            "returnParameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3509:0:4"
            },
            "scope": 1273,
            "src": "3474:36:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1211,
              "nodeType": "StructuredDocumentation",
              "src": "3516:137:4",
              "text": "  @dev   Sets a new address as the pending owner.\n  @param pendingOwner_ The address of the next potential owner."
            },
            "functionSelector": "c42069ec",
            "id": 1216,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPendingOwner",
            "nameLocation": "3667:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "pendingOwner_",
                  "nameLocation": "3691:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "3683:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3683:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3682:23:4"
            },
            "returnParameters": {
              "id": 1215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3714:0:4"
            },
            "scope": 1273,
            "src": "3658:57:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1217,
              "nodeType": "StructuredDocumentation",
              "src": "3721:419:4",
              "text": "  @dev    Updates the current vesting formula based on the amount of total unvested funds in the contract and the new `vestingPeriod_`.\n  @param  vestingPeriod_ The amount of time over which all currently unaccounted underlying assets will be vested over.\n  @return issuanceRate_  The new issuance rate.\n  @return freeAssets_    The new amount of underlying assets that are unlocked."
            },
            "functionSelector": "e13aa990",
            "id": 1226,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateVestingSchedule",
            "nameLocation": "4154:21:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "vestingPeriod_",
                  "nameLocation": "4184:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "4176:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4176:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4175:24:4"
            },
            "returnParameters": {
              "id": 1225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1222,
                  "mutability": "mutable",
                  "name": "issuanceRate_",
                  "nameLocation": "4226:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "4218:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4218:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1224,
                  "mutability": "mutable",
                  "name": "freeAssets_",
                  "nameLocation": "4249:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "4241:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4241:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4217:44:4"
            },
            "scope": 1273,
            "src": "4145:117:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1227,
              "nodeType": "StructuredDocumentation",
              "src": "4362:507:4",
              "text": "  @dev    Does a ERC4626 `deposit` with a ERC-2612 `permit`.\n  @param  assets_   The amount of `asset` to deposit.\n  @param  receiver_ The receiver of the shares.\n  @param  deadline_ The timestamp after which the `permit` signature is no longer valid.\n  @param  v_        ECDSA signature v component.\n  @param  r_        ECDSA signature r component.\n  @param  s_        ECDSA signature s component.\n  @return shares_   The amount of shares minted."
            },
            "functionSelector": "50921b23",
            "id": 1244,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositWithPermit",
            "nameLocation": "4883:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "assets_",
                  "nameLocation": "4909:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "4901:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4901:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1231,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "4926:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "4918:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4918:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1233,
                  "mutability": "mutable",
                  "name": "deadline_",
                  "nameLocation": "4945:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "4937:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4937:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "v_",
                  "nameLocation": "4962:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "4956:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4956:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1237,
                  "mutability": "mutable",
                  "name": "r_",
                  "nameLocation": "4974:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "4966:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1236,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4966:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1239,
                  "mutability": "mutable",
                  "name": "s_",
                  "nameLocation": "4986:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "4978:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1238,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4978:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4900:89:4"
            },
            "returnParameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1242,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "5016:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "5008:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5008:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5007:17:4"
            },
            "scope": 1273,
            "src": "4874:151:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1245,
              "nodeType": "StructuredDocumentation",
              "src": "5031:606:4",
              "text": "  @dev    Does a ERC4626 `mint` with a ERC-2612 `permit`.\n  @param  shares_    The amount of `shares` to mint.\n  @param  receiver_  The receiver of the shares.\n  @param  maxAssets_ The maximum amount of assets that can be taken, as per the permit.\n  @param  deadline_  The timestamp after which the `permit` signature is no longer valid.\n  @param  v_         ECDSA signature v component.\n  @param  r_         ECDSA signature r component.\n  @param  s_         ECDSA signature s component.\n  @return assets_    The amount of shares deposited."
            },
            "functionSelector": "60dd37d9",
            "id": 1264,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithPermit",
            "nameLocation": "5651:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "5674:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5666:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5666:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "5691:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5683:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5683:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "maxAssets_",
                  "nameLocation": "5710:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5702:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5702:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "deadline_",
                  "nameLocation": "5730:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5722:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5722:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "v_",
                  "nameLocation": "5747:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5741:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5741:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1257,
                  "mutability": "mutable",
                  "name": "r_",
                  "nameLocation": "5759:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5751:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5751:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1259,
                  "mutability": "mutable",
                  "name": "s_",
                  "nameLocation": "5771:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5763:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5763:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5665:109:4"
            },
            "returnParameters": {
              "id": 1263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1262,
                  "mutability": "mutable",
                  "name": "assets_",
                  "nameLocation": "5801:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5793:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5793:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5792:17:4"
            },
            "scope": 1273,
            "src": "5642:168:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1265,
              "nodeType": "StructuredDocumentation",
              "src": "5905:197:4",
              "text": "  @dev    Returns the amount of underlying assets owned by the specified account.\n  @param  account_ Address of the account.\n  @return assets_  Amount of assets owned."
            },
            "functionSelector": "9159b206",
            "id": 1272,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfAssets",
            "nameLocation": "6116:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "mutability": "mutable",
                  "name": "account_",
                  "nameLocation": "6140:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "6132:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6132:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6131:18:4"
            },
            "returnParameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "assets_",
                  "nameLocation": "6181:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "6173:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6173:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6172:17:4"
            },
            "scope": 1273,
            "src": "6107:83:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1274,
        "src": "295:5898:4",
        "usedErrors": []
      }
    ],
    "src": "42:6152:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-01-15T01:59:51.721Z",
  "devdoc": {
    "events": {
      "IssuanceParamsUpdated(uint256,uint256)": {
        "details": "Issuance parameters have been updated after a `_mint` or `_burn`.",
        "params": {
          "freeAssets_": "Resulting `freeAssets` (y-intercept) value after accounting update.",
          "issuanceRate_": "The new issuance rate of `asset` until `vestingPeriodFinish_`."
        }
      },
      "OwnershipAccepted(address,address)": {
        "details": "`newOwner_` has accepted the transferral of RDT ownership from `previousOwner_`.",
        "params": {
          "newOwner_": "The new RDT owner.",
          "previousOwner_": "The previous RDT owner."
        }
      },
      "PendingOwnerSet(address,address)": {
        "details": "`owner_` has set the new pending owner of RDT to `pendingOwner_`.",
        "params": {
          "owner_": "The current RDT owner.",
          "pendingOwner_": "The new pending RDT owner."
        }
      },
      "VestingScheduleUpdated(address,uint256)": {
        "details": "`owner_` has updated the RDT vesting schedule to end at `vestingPeriodFinish_`.",
        "params": {
          "owner_": "The current RDT owner.",
          "vestingPeriodFinish_": "When the unvested balance will finish vesting."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "Returns the signature domain separator.",
        "returns": {
          "domainSeparator_": "The signature domain separator."
        }
      },
      "PERMIT_TYPEHASH()": {
        "details": "Returns the permit type hash.",
        "returns": {
          "permitTypehash_": "The permit type hash."
        }
      },
      "acceptOwnership()": {
        "details": "Sets the pending owner as the new owner.       Can be called only by the pending owner, and only after their nomination by the current owner."
      },
      "allowance(address,address)": {
        "details": "Returns the allowance that one account has given another over their tokens.",
        "params": {
          "owner_": "Account that tokens are approved from.",
          "spender_": "Account that tokens are approved for."
        },
        "returns": {
          "allowance_": "Allowance that one account has given another over their tokens."
        }
      },
      "approve(address,uint256)": {
        "details": "Function that allows one account to set the allowance of another account over their tokens.          Emits an {Approval} event.",
        "params": {
          "amount_": "Amount of tokens that have been approved.",
          "spender_": "Account that tokens are approved for."
        },
        "returns": {
          "success_": "Boolean indicating whether the operation succeeded."
        }
      },
      "asset()": {
        "details": "The address of the underlying asset used by the Vault.          MUST be a contract that implements the ERC-20 standard.          MUST NOT revert.",
        "returns": {
          "asset_": "The address of the underlying asset."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by a given account.",
        "params": {
          "account_": "Account that owns the tokens."
        },
        "returns": {
          "balance_": "Amount of tokens owned by a given account."
        }
      },
      "balanceOfAssets(address)": {
        "details": "Returns the amount of underlying assets owned by the specified account.",
        "params": {
          "account_": "Address of the account."
        },
        "returns": {
          "assets_": " Amount of assets owned."
        }
      },
      "convertToAssets(uint256)": {
        "details": "The amount of `assets_` the `shares_` are currently equivalent to.          MUST NOT be inclusive of any fees that are charged against assets in the Vault.          MUST NOT reflect slippage or other on-chain conditions when performing the actual exchange.          MUST NOT show any variations depending on the caller.          MUST NOT revert.",
        "params": {
          "shares_": "The amount of shares to convert."
        },
        "returns": {
          "assets_": "The amount of equivalent assets."
        }
      },
      "convertToShares(uint256)": {
        "details": "The amount of `shares_` the `assets_` are currently equivalent to.          MUST NOT be inclusive of any fees that are charged against assets in the Vault.          MUST NOT reflect slippage or other on-chain conditions when performing the actual exchange.          MUST NOT show any variations depending on the caller.          MUST NOT revert.",
        "params": {
          "assets_": "The amount of assets to convert."
        },
        "returns": {
          "shares_": "The amount of equivalent shares."
        }
      },
      "decimals()": {
        "details": "Returns the decimal precision used by the token.",
        "returns": {
          "decimals_": "The decimal precision used by the token."
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Function that allows one account to decrease the allowance of another account over their tokens.          Emits an {Approval} event.",
        "params": {
          "spender_": "Account that tokens are approved for.",
          "subtractedAmount_": "Amount to decrease approval by."
        },
        "returns": {
          "success_": "         Boolean indicating whether the operation succeeded."
        }
      },
      "deposit(uint256,address)": {
        "details": "Mints `shares_` to `receiver_` by depositing `assets_` into the Vault.          MUST emit the {Deposit} event.          MUST revert if all of the assets cannot be deposited (due to insufficient approval, deposit limits, slippage, etc).",
        "params": {
          "assets_": "The amount of assets to deposit.",
          "receiver_": "The receiver of the shares."
        },
        "returns": {
          "shares_": "  The amount of shares minted."
        }
      },
      "depositWithPermit(uint256,address,uint256,uint8,bytes32,bytes32)": {
        "details": "Does a ERC4626 `deposit` with a ERC-2612 `permit`.",
        "params": {
          "assets_": "The amount of `asset` to deposit.",
          "deadline_": "The timestamp after which the `permit` signature is no longer valid.",
          "r_": "ECDSA signature r component.",
          "receiver_": "The receiver of the shares.",
          "s_": "ECDSA signature s component.",
          "v_": "ECDSA signature v component."
        },
        "returns": {
          "shares_": "  The amount of shares minted."
        }
      },
      "freeAssets()": {
        "details": "The total amount of the underlying asset that is currently unlocked and is not time-dependent.       Analogous to the y-intercept in a linear function."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Function that allows one account to increase the allowance of another account over their tokens.          Emits an {Approval} event.",
        "params": {
          "addedAmount_": "Amount to increase approval by.",
          "spender_": "Account that tokens are approved for."
        },
        "returns": {
          "success_": "    Boolean indicating whether the operation succeeded."
        }
      },
      "issuanceRate()": {
        "details": "The rate of issuance of the vesting schedule that is currently active.       Denominated as the amount of underlying assets vesting per second."
      },
      "lastUpdated()": {
        "details": "The timestamp of when the linear function was last recalculated.       Analogous to t0 in a linear function."
      },
      "maxDeposit(address)": {
        "details": "Maximum amount of `assets_` that can be deposited on behalf of the `receiver_` through a `deposit` call.          MUST return a limited value if the receiver is subject to any limits, or the maximum value otherwise.          MUST NOT revert.",
        "params": {
          "receiver_": "The receiver of the assets."
        },
        "returns": {
          "assets_": "  The maximum amount of assets that can be deposited."
        }
      },
      "maxMint(address)": {
        "details": "Maximum amount of `shares_` that can be minted on behalf of the `receiver_` through a `mint` call.          MUST return a limited value if the receiver is subject to any limits, or the maximum value otherwise.          MUST NOT revert.",
        "params": {
          "receiver_": "The receiver of the shares."
        },
        "returns": {
          "shares_": "  The maximum amount of shares that can be minted."
        }
      },
      "maxRedeem(address)": {
        "details": "Maximum amount of `shares_` that can be redeemed from the `owner_` through a `redeem` call.          MUST return a limited value if the owner is subject to any limits, or the total amount of owned shares otherwise.          MUST NOT revert.",
        "params": {
          "owner_": "The owner of the shares."
        },
        "returns": {
          "shares_": "The maximum amount of shares that can be redeemed."
        }
      },
      "maxWithdraw(address)": {
        "details": "Maximum amount of `assets_` that can be withdrawn from the `owner_` through a `withdraw` call.          MUST return a limited value if the owner is subject to any limits, or the total amount of owned assets otherwise.          MUST NOT revert.",
        "params": {
          "owner_": "The owner of the assets."
        },
        "returns": {
          "assets_": "The maximum amount of assets that can be withdrawn."
        }
      },
      "mint(uint256,address)": {
        "details": "Mints `shares_` to `receiver_` by depositing `assets_` into the Vault.          MUST emit the {Deposit} event.          MUST revert if all of shares cannot be minted (due to insufficient approval, deposit limits, slippage, etc).",
        "params": {
          "receiver_": "The receiver of the shares.",
          "shares_": "The amount of shares to mint."
        },
        "returns": {
          "assets_": "  The amount of assets deposited."
        }
      },
      "mintWithPermit(uint256,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Does a ERC4626 `mint` with a ERC-2612 `permit`.",
        "params": {
          "deadline_": "The timestamp after which the `permit` signature is no longer valid.",
          "maxAssets_": "The maximum amount of assets that can be taken, as per the permit.",
          "r_": "ECDSA signature r component.",
          "receiver_": "The receiver of the shares.",
          "s_": "ECDSA signature s component.",
          "shares_": "The amount of `shares` to mint.",
          "v_": "ECDSA signature v component."
        },
        "returns": {
          "assets_": "   The amount of shares deposited."
        }
      },
      "name()": {
        "details": "Returns the name of the token.",
        "returns": {
          "name_": "The name of the token."
        }
      },
      "nonces(address)": {
        "details": "Returns the nonce for the given owner.",
        "params": {
          "owner_": "The address of the owner account."
        },
        "returns": {
          "nonce_": "The nonce for the given owner."
        }
      },
      "owner()": {
        "details": "The address of the account that is allowed to update the vesting schedule."
      },
      "pendingOwner()": {
        "details": "The next owner, nominated by the current owner."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Approve by signature.",
        "params": {
          "amount_": "Permit approval spend limit.",
          "deadline_": "Deadline after which the permit is invalid.",
          "owner_": "Owner address that signed the permit.",
          "r_": "ECDSA signature r component.",
          "s_": "ECDSA signature s component.",
          "spender_": "Spender of the permit.",
          "v_": "ECDSA signature v component."
        }
      },
      "precision()": {
        "details": "The precision at which the issuance rate is measured."
      },
      "previewDeposit(uint256)": {
        "details": "Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions.          MUST return as close to and no more than the exact amount of shares that would be minted in a `deposit` call in the same transaction.          MUST NOT account for deposit limits like those returned from `maxDeposit` and should always act as though the deposit would be accepted.          MUST NOT revert.",
        "params": {
          "assets_": "The amount of assets to deposit."
        },
        "returns": {
          "shares_": "The amount of shares that would be minted."
        }
      },
      "previewMint(uint256)": {
        "details": "Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions.          MUST return as close to and no fewer than the exact amount of assets that would be deposited in a `mint` call in the same transaction.          MUST NOT account for mint limits like those returned from `maxMint` and should always act as though the minting would be accepted.          MUST NOT revert.",
        "params": {
          "shares_": "The amount of shares to mint."
        },
        "returns": {
          "assets_": "The amount of assets that would be deposited."
        }
      },
      "previewRedeem(uint256)": {
        "details": "Allows an on-chain or off-chain user to simulate the effects of their redemption at the current block, given current on-chain conditions.          MUST return as close to and no more than the exact amount of assets that would be withdrawn in a `redeem` call in the same transaction.          MUST NOT account for redemption limits like those returned from `maxRedeem` and should always act as though the redemption would be accepted.          MUST NOT revert.",
        "params": {
          "shares_": "The amount of shares to redeem."
        },
        "returns": {
          "assets_": "The amount of assets that would be withdrawn."
        }
      },
      "previewWithdraw(uint256)": {
        "details": "Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions.          MUST return as close to and no fewer than the exact amount of shares that would be burned in a `withdraw` call in the same transaction.          MUST NOT account for withdrawal limits like those returned from `maxWithdraw` and should always act as though the withdrawal would be accepted.          MUST NOT revert.",
        "params": {
          "assets_": "The amount of assets to withdraw."
        },
        "returns": {
          "shares_": "The amount of shares that would be redeemed."
        }
      },
      "redeem(uint256,address,address)": {
        "details": "Burns `shares_` from `owner_` and sends `assets_` to `receiver_`.          MUST emit the {Withdraw} event.          MUST revert if all of the shares cannot be redeemed (due to insufficient shares, withdrawal limits, slippage, etc).",
        "params": {
          "owner_": "The owner of the shares.",
          "receiver_": "The receiver of the assets.",
          "shares_": "The amount of shares to redeem."
        },
        "returns": {
          "assets_": "  The amount of assets sent to the receiver."
        }
      },
      "setPendingOwner(address)": {
        "details": "Sets a new address as the pending owner.",
        "params": {
          "pendingOwner_": "The address of the next potential owner."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token.",
        "returns": {
          "symbol_": "The symbol of the token."
        }
      },
      "totalAssets()": {
        "details": "Total amount of the underlying asset that is managed by the Vault.          SHOULD include compounding that occurs from any yields.          MUST NOT revert.",
        "returns": {
          "totalAssets_": "The total amount of assets the Vault manages."
        }
      },
      "totalSupply()": {
        "details": "Returns the total amount of tokens in existence.",
        "returns": {
          "totalSupply_": "The total amount of tokens in existence."
        }
      },
      "transfer(address,uint256)": {
        "details": "Moves an amount of tokens from `msg.sender` to a specified account.          Emits a {Transfer} event.",
        "params": {
          "amount_": "Amount of tokens that are transferred.",
          "recipient_": "Account that receives tokens."
        },
        "returns": {
          "success_": "  Boolean indicating whether the operation succeeded."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves a pre-approved amount of tokens from a sender to a specified account.          Emits a {Transfer} event.          Emits an {Approval} event.",
        "params": {
          "amount_": "Amount of tokens that are transferred.",
          "owner_": "Account that tokens are moving from.",
          "recipient_": "Account that receives tokens."
        },
        "returns": {
          "success_": "  Boolean indicating whether the operation succeeded."
        }
      },
      "updateVestingSchedule(uint256)": {
        "details": "Updates the current vesting formula based on the amount of total unvested funds in the contract and the new `vestingPeriod_`.",
        "params": {
          "vestingPeriod_": "The amount of time over which all currently unaccounted underlying assets will be vested over."
        },
        "returns": {
          "freeAssets_": "   The new amount of underlying assets that are unlocked.",
          "issuanceRate_": " The new issuance rate."
        }
      },
      "vestingPeriodFinish()": {
        "details": "The end of the current vesting schedule."
      },
      "withdraw(uint256,address,address)": {
        "details": "Burns `shares_` from `owner_` and sends `assets_` to `receiver_`.          MUST emit the {Withdraw} event.          MUST revert if all of the assets cannot be withdrawn (due to insufficient assets, withdrawal limits, slippage, etc).",
        "params": {
          "assets_": "The amount of assets to withdraw.",
          "owner_": "The owner of the assets.",
          "receiver_": "The receiver of the assets."
        },
        "returns": {
          "shares_": "  The amount of shares burned from the owner."
        }
      }
    },
    "title": "A token that represents ownership of future revenues distributed linearly over time.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}