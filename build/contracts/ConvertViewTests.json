{
  "contractName": "ConvertViewTests",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalAssets_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mintAmount_",
          "type": "uint256"
        }
      ],
      "name": "test_convertToShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalAssets_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mintAmount_",
          "type": "uint256"
        }
      ],
      "name": "test_convertToAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAssets_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintAmount_\",\"type\":\"uint256\"}],\"name\":\"test_convertToAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAssets_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintAmount_\",\"type\":\"uint256\"}],\"name\":\"test_convertToShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/test/RDTGetters.t.sol\":\"ConvertViewTests\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/RevenueDistributionToken.sol\":{\"keccak256\":\"0x3476742b2f45dfbad264e58b6c818b9f5057922e3434ff5efedddff6457e1ce0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3d1420e470949e9dbf5ffa552b4cfff21dcd10ad84bf2c138c9abe476923cd83\",\"dweb:/ipfs/QmaRec9DRwtuuN4qBxABmAu6ABPT3CLdy38gdpf1m5aG79\"]},\"project:/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0xda8327c5dacee8c853be870f3fc90c67e7351b242ca7317073d83032f034d8ed\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fac8e65a2c903fe0e5f5b137166535d7908b81978c05457149c6bfbbb10a2120\",\"dweb:/ipfs/QmSzcsy5PvbjNSzi6npx5vSXWwhvne2vZVgYZLmhcBWq4v\"]},\"project:/contracts/interfaces/IRevenueDistributionToken.sol\":{\"keccak256\":\"0xb837508aa35d103b2714432bc24da9414f0ce45dd72c2bda7d4d3b75cc297e74\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c83cb1e2cbef57088047f2bac83f009ad9df6374ddd20006c21634b06bedecf9\",\"dweb:/ipfs/QmZmCMe4VhURM9aQxj86HrU28bckAtgk5MiJ3qh6dyaahi\"]},\"project:/contracts/test/RDTGetters.t.sol\":{\"keccak256\":\"0x5d2038a0bb81cf0af3551d752ed96c268148789eebc3611f7f7d00101f5121d2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0c4e2a9ce03e31b3fcebab5ab95a273e3544f4ab01ba9a25fa6a9b6b4c812237\",\"dweb:/ipfs/QmVKUCYUHXEwDiJJBXziggNsVwxcsaCFZdHEfuESuyseDk\"]},\"project:/contracts/test/accounts/Owner.sol\":{\"keccak256\":\"0xf945c2d36644acf29a4ce0a4ded92dbefdd6afd29b6f9ac2c058b40256f901e7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ddba381623edf0f816b3cbcd5b1d440207566b18727352e41a86706e0d9e9250\",\"dweb:/ipfs/QmYZmLvvxVAK9MaVp1hvmPyrpEMPhWzMuv5HTWcJE1YvtH\"]},\"project:/contracts/test/accounts/Staker.sol\":{\"keccak256\":\"0x15e81861790ed02aadf2a1260cafc0b0f6e7f83929c3b2d240a3d6d7bd383498\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7b40d736d77525cb4c0f28b97b0bea4c8438224ad60eb1d6900b81f6209022fb\",\"dweb:/ipfs/QmWciuTav48FHFU88CEmB6zrmWeKnhcBqsxHMtvAgRnTBX\"]},\"project:/contracts/test/mocks/MockRDT.sol\":{\"keccak256\":\"0x4ba1293d07d8320785cc38b0b1d4219ad6126cfd2a41bc047904a086ac6963fa\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b8c5128bf15aff20d55151f1645408db92024f6e534e5ef612f8fd83c152f496\",\"dweb:/ipfs/Qmec6W4zP4wrQt8zDdNDgTzNbp6vXAwGcfjH624JcXiuEr\"]},\"project:/modules/contract-test-utils/contracts/DSTest.sol\":{\"keccak256\":\"0x0fb2487f8b91b17daaa7f5dd5732c8945e3a8cbcad5345010f1ffe33eec293f4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a4b319df1805c1e13d69656996b5f683e8f2da1007dc30367eaa8157e44e1175\",\"dweb:/ipfs/QmUSKMrJQ9vzU8nJ3WLSvWA89hWMgsKE8bfyqGMYi5PtWe\"]},\"project:/modules/contract-test-utils/contracts/interfaces.sol\":{\"keccak256\":\"0x761433d3b0b8f66cd8bb42eb4569938d2477b35443a32c3690c6fd28025419f0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6891341416acb3343479821675974ba852f4659feef062630e1c134a4006407c\",\"dweb:/ipfs/QmZ6YjJHhJM6CziSanabB5nL2Xm3NCPUVuuJyeV7yqoeHY\"]},\"project:/modules/contract-test-utils/contracts/log.sol\":{\"keccak256\":\"0xab6d058f97501c15ea42c3bf3064353272974540b2397807067bd764d8e251a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de901b8f3100370ab710c45b1530980088e8f5cb40819669c36172ec474ccd09\",\"dweb:/ipfs/QmYh54NS9UfJsH6zyXzqXriVeTAbASQq5aY4DRr65agUhM\"]},\"project:/modules/contract-test-utils/contracts/test.sol\":{\"keccak256\":\"0x1a407334919fdc3e1359cf006065d5571bf470913e6af126bdaca8f57c505f2f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c7bcb8cd219372235d4752d503eadb2a023079a4bed3cb58ce6306e0b3b0c3df\",\"dweb:/ipfs/QmWj4YJJumn4ZzczYBwSdf7NGxsArnZPx5VCs8wYpuqK82\"]},\"project:/modules/erc20-helper/src/ERC20Helper.sol\":{\"keccak256\":\"0x918391b8207bc62d665a1a9b961e9ee4e5c3407b8aafcb1fff4aa2d0b075934f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9f1ba6f499c85798c0fb0c4359ee2c13c27d708863ee9ccb80abe3aa59bbcadc\",\"dweb:/ipfs/QmT2ZHVSMuc5hEDZD7EEhu5m3dgF5cMuUBc6rwjWgHRteQ\"]},\"project:/modules/erc20-helper/src/interfaces/IERC20Like.sol\":{\"keccak256\":\"0xde8c26d922034e67479add16d9d318e7779080d9b79edb249372690b3a24b01d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://993df2017058a75315160f27e1780a76ff631759deb1821b90f97e45e5ebf2f4\",\"dweb:/ipfs/QmWngnokG6A5UGztXTKwAXRHEWP1tKqmSCf7a4ZeWV4MSG\"]},\"project:/modules/erc20/contracts/ERC20.sol\":{\"keccak256\":\"0x9b14c4282c4207212ff141c1731673eea3d050928a19bfe665c42ebbb1acd8f0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://da1df63858e59298e4f882b963e2d54d9886762edfd3c11122748cfc4cc23c09\",\"dweb:/ipfs/QmU3Tys5sB6wa9FmDnY72qgBuMdGD2hkoSxuTCvnifPgYy\"]},\"project:/modules/erc20/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x3467fb0980a24c1a3ea54093029a9321e316ae22e5d70d6bd961fe6c44f15161\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://47d2e51f1b88b432d1372b2c36fc3dcadcc74f9854bcf1b5bf4f52e0f6418c21\",\"dweb:/ipfs/QmVjadyhNCrEiSpZLQwJefPBwtweaFMZCLp9fDS56QprbP\"]},\"project:/modules/erc20/contracts/test/accounts/ERC20User.sol\":{\"keccak256\":\"0x1b6668ce9cca38cfddb837266f3ce76120604abd7d39515104d56b1f4213789a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a904f8e89186538844fc4bc9b8089cd1e5e032297ccfd3b04bc4d773195eb95a\",\"dweb:/ipfs/QmV1qoTm6oCor5VAnoEpR3DinJfsdX8rc93xDxHcEZdS9a\"]},\"project:/modules/erc20/contracts/test/mocks/MockERC20.sol\":{\"keccak256\":\"0xee5ed3279bf87e786914c6256b0b6410a96514ddf676df5ba3184dbebfd9788a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6682a04abec5aea92e04c4ad9be889ecd39277573f596c74ad25c02374257a27\",\"dweb:/ipfs/QmbmPBbtfPcKFLjVMNPV45LheWT3gxAb9AjQBfJnw32oge\"]}},\"version\":1}",
  "bytecode": "0x608060405260016000806101000a81548160ff021916908315150217905550737109709ecfa91a80626ff3989d68f67f5b1dd12d600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561007f57600080fd5b5061867c8061008f6000396000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80630a9254e41462000063578063108201c2146200006f57806378e2cab4146200008f578063ba414fa614620000af578063fa7626d414620000d1575b600080fd5b6200006d620000f3565b005b6200008d600480360381019062000087919062000d06565b6200031b565b005b620000ad6004803603810190620000a7919062000d06565b620006df565b005b620000b962000aa3565b604051620000c8919062000d6a565b60405180910390f35b620000db62000ab6565b604051620000ea919062000d6a565b60405180910390f35b6012604051620001039062000c9c565b6200010f919062000e92565b604051809103906000f0801580156200012c573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555030600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166c0c9f2c9cd04674edea40000000604051620001ad9062000caa565b620001bb9392919062001001565b604051809103906000f080158015620001d8573d6000803e3d6000fd5b50600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620002279062000cb8565b604051809103906000f08015801562000244573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5d6bf02629896806040518263ffffffff1660e01b8152600401620002e59190620010ab565b600060405180830381600087803b1580156200030057600080fd5b505af115801562000315573d6000803e3d6000fd5b50505050565b620003368160016c01431e0fae6d7217caa000000062000ac7565b9150620003468160018462000ac7565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401620003c9929190620010d9565b600060405180830381600087803b158015620003e457600080fd5b505af1158015620003f9573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cf23b1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401620004a29392919062001106565b600060405180830381600087803b158015620004bd57600080fd5b505af1158015620004d2573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314ab180d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040162000557929190620010d9565b6020604051808303816000875af115801562000577573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200059d91906200115a565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632cee10fb836040518263ffffffff1660e01b8152600401620005fb91906200118c565b600060405180830381600087803b1580156200061657600080fd5b505af11580156200062b573d6000803e3d6000fd5b50505050620006db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a2d13a836040518263ffffffff1660e01b81526004016200069091906200118c565b602060405180830381865afa158015620006ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006d491906200115a565b8362000bbf565b5050565b620006fa8160016c01431e0fae6d7217caa000000062000ac7565b91506200070a8160018462000ac7565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016200078d929190620010d9565b600060405180830381600087803b158015620007a857600080fd5b505af1158015620007bd573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cf23b1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401620008669392919062001106565b600060405180830381600087803b1580156200088157600080fd5b505af115801562000896573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314ab180d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016200091b929190620010d9565b6020604051808303816000875af11580156200093b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200096191906200115a565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632cee10fb836040518263ffffffff1660e01b8152600401620009bf91906200118c565b600060405180830381600087803b158015620009da57600080fd5b505af1158015620009ef573d6000803e3d6000fd5b5050505062000a9f600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c6e6f592846040518263ffffffff1660e01b815260040162000a5491906200118c565b602060405180830381865afa15801562000a72573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a9891906200115a565b8262000bbf565b5050565b600060019054906101000a900460ff1681565b60008054906101000a900460ff1681565b60008282101562000b0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000b0690620011f9565b60405180910390fd5b81830362000b205782905062000bb8565b82841015801562000b315750818411155b1562000b405783905062000bb8565b60008314801562000b7057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82145b1562000b7f5783905062000bb8565b826001848462000b9091906200124a565b62000b9c919062001285565b8562000ba99190620012ef565b62000bb5919062001285565b90505b9392505050565b80821462000c7b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000bf6906200139d565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162000c2f91906200140f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000c68919062001491565b60405180910390a162000c7a62000c7f565b5b5050565b6001600060016101000a81548160ff021916908315150217905550565b611d4c80620014c483390190565b6144df806200321083390190565b610f5880620076ef83390190565b600080fd5b6000819050919050565b62000ce08162000ccb565b811462000cec57600080fd5b50565b60008135905062000d008162000cd5565b92915050565b6000806040838503121562000d205762000d1f62000cc6565b5b600062000d308582860162000cef565b925050602062000d438582860162000cef565b9150509250929050565b60008115159050919050565b62000d648162000d4d565b82525050565b600060208201905062000d81600083018462000d59565b92915050565b600082825260208201905092915050565b7f4d6f636b546f6b656e0000000000000000000000000000000000000000000000600082015250565b600062000dd060098362000d87565b915062000ddd8262000d98565b602082019050919050565b7f4d54000000000000000000000000000000000000000000000000000000000000600082015250565b600062000e2060028362000d87565b915062000e2d8262000de8565b602082019050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600062000e7a62000e7462000e6e8462000e38565b62000e4f565b62000e42565b9050919050565b62000e8c8162000e59565b82525050565b6000606082019050818103600083015262000ead8162000dc1565b9050818103602083015262000ec28162000e11565b905062000ed3604083018462000e81565b92915050565b7f526576656e756520446973747269627574696f6e20546f6b656e000000000000600082015250565b600062000f11601a8362000d87565b915062000f1e8262000ed9565b602082019050919050565b7f5244540000000000000000000000000000000000000000000000000000000000600082015250565b600062000f6160038362000d87565b915062000f6e8262000f29565b602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000fa68262000f79565b9050919050565b62000fb88162000f99565b82525050565b6000819050919050565b600062000fe962000fe362000fdd8462000fbe565b62000e4f565b62000ccb565b9050919050565b62000ffb8162000fc8565b82525050565b600060a08201905081810360008301526200101c8162000f02565b90508181036020830152620010318162000f52565b905062001042604083018662000fad565b62001051606083018562000fad565b62001060608083018462000ff0565b949350505050565b6000819050919050565b6000620010936200108d620010878462001068565b62000e4f565b62000ccb565b9050919050565b620010a58162001072565b82525050565b6000602082019050620010c260008301846200109a565b92915050565b620010d38162000ccb565b82525050565b6000604082019050620010f0600083018562000fad565b620010ff6020830184620010c8565b9392505050565b60006060820190506200111d600083018662000fad565b6200112c602083018562000fad565b6200113b6040830184620010c8565b949350505050565b600081519050620011548162000cd5565b92915050565b60006020828403121562001173576200117262000cc6565b5b6000620011838482850162001143565b91505092915050565b6000602082019050620011a36000830184620010c8565b92915050565b7f4d41585f4c4553535f5448414e5f4d494e000000000000000000000000000000600082015250565b6000620011e160118362000d87565b9150620011ee82620011a9565b602082019050919050565b600060208201905081810360008301526200121481620011d2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620012578262000ccb565b9150620012648362000ccb565b92508282039050818111156200127f576200127e6200121b565b5b92915050565b6000620012928262000ccb565b91506200129f8362000ccb565b9250828201905080821115620012ba57620012b96200121b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620012fc8262000ccb565b9150620013098362000ccb565b9250826200131c576200131b620012c0565b5b828206905092915050565b7f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60008201527f745d000000000000000000000000000000000000000000000000000000000000602082015250565b60006200138560228362000d87565b9150620013928262001327565b604082019050919050565b60006020820190508181036000830152620013b88162001376565b9050919050565b7f2020457870656374656400000000000000000000000000000000000000000000600082015250565b6000620013f7600a8362000d87565b91506200140482620013bf565b602082019050919050565b600060408201905081810360008301526200142a81620013e8565b90506200143b6020830184620010c8565b92915050565b7f2020202041637475616c00000000000000000000000000000000000000000000600082015250565b600062001479600a8362000d87565b9150620014868262001441565b602082019050919050565b60006040820190508181036000830152620014ac816200146a565b9050620014bd6020830184620010c8565b9291505056fe60a06040523480156200001157600080fd5b5060405162001d4c38038062001d4c833981810160405281019062000037919062000249565b82828282600090816200004b91906200052e565b5081600190816200005d91906200052e565b508060ff1660808160ff168152505050505050505062000615565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e18262000096565b810181811067ffffffffffffffff82111715620001035762000102620000a7565b5b80604052505050565b60006200011862000078565b9050620001268282620000d6565b919050565b600067ffffffffffffffff821115620001495762000148620000a7565b5b620001548262000096565b9050602081019050919050565b60005b838110156200018157808201518184015260208101905062000164565b60008484015250505050565b6000620001a46200019e846200012b565b6200010c565b905082815260208101848484011115620001c357620001c262000091565b5b620001d084828562000161565b509392505050565b600082601f830112620001f057620001ef6200008c565b5b8151620002028482602086016200018d565b91505092915050565b600060ff82169050919050565b62000223816200020b565b81146200022f57600080fd5b50565b600081519050620002438162000218565b92915050565b60008060006060848603121562000265576200026462000082565b5b600084015167ffffffffffffffff81111562000286576200028562000087565b5b6200029486828701620001d8565b935050602084015167ffffffffffffffff811115620002b857620002b762000087565b5b620002c686828701620001d8565b9250506040620002d98682870162000232565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200033657607f821691505b6020821081036200034c576200034b620002ee565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003b67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000377565b620003c2868362000377565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200040f620004096200040384620003da565b620003e4565b620003da565b9050919050565b6000819050919050565b6200042b83620003ee565b620004436200043a8262000416565b84845462000384565b825550505050565b600090565b6200045a6200044b565b6200046781848462000420565b505050565b5b818110156200048f576200048360008262000450565b6001810190506200046d565b5050565b601f821115620004de57620004a88162000352565b620004b38462000367565b81016020851015620004c3578190505b620004db620004d28562000367565b8301826200046c565b50505b505050565b600082821c905092915050565b60006200050360001984600802620004e3565b1980831691505092915050565b60006200051e8383620004f0565b9150826002028217905092915050565b6200053982620002e3565b67ffffffffffffffff811115620005555762000554620000a7565b5b6200056182546200031d565b6200056e82828562000493565b600060209050601f831160018114620005a6576000841562000591578287015190505b6200059d858262000510565b8655506200060d565b601f198416620005b68662000352565b60005b82811015620005e057848901518255600182019150602085019450602081019050620005b9565b86831015620006005784890151620005fc601f891682620004f0565b8355505b6001600288020188555050505b505050505050565b60805161171b62000631600039600061048f015261171b6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806340c10f19116100a25780639dc29fac116100715780639dc29fac146102d0578063a457c2d7146102ec578063a9059cbb1461031c578063d505accf1461034c578063dd62ed3e146103685761010b565b806340c10f191461023657806370a08231146102525780637ecebe001461028257806395d89b41146102b25761010b565b806330adf81f116100de57806330adf81f146101ac578063313ce567146101ca5780633644e515146101e857806339509351146102065761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b610118610398565b6040516101259190610eb9565b60405180910390f35b61014860048036038101906101439190610f74565b610426565b6040516101559190610fcf565b60405180910390f35b61016661043d565b6040516101739190610ff9565b60405180910390f35b61019660048036038101906101919190611014565b610443565b6040516101a39190610fcf565b60405180910390f35b6101b4610466565b6040516101c19190611080565b60405180910390f35b6101d261048d565b6040516101df91906110b7565b60405180910390f35b6101f06104b1565b6040516101fd9190611080565b60405180910390f35b610220600480360381019061021b9190610f74565b610559565b60405161022d9190610fcf565b60405180910390f35b610250600480360381019061024b9190610f74565b6105f7565b005b61026c600480360381019061026791906110d2565b610605565b6040516102799190610ff9565b60405180910390f35b61029c600480360381019061029791906110d2565b61061d565b6040516102a99190610ff9565b60405180910390f35b6102ba610635565b6040516102c79190610eb9565b60405180910390f35b6102ea60048036038101906102e59190610f74565b6106c3565b005b61030660048036038101906103019190610f74565b6106d1565b6040516103139190610fcf565b60405180910390f35b61033660048036038101906103319190610f74565b6106e8565b6040516103439190610fcf565b60405180910390f35b61036660048036038101906103619190611157565b6106ff565b005b610382600480360381019061037d91906111f9565b6109a9565b60405161038f9190610ff9565b60405180910390f35b600080546103a590611268565b80601f01602080910402602001604051908101604052809291908181526020018280546103d190611268565b801561041e5780601f106103f35761010080835404028352916020019161041e565b820191906000526020600020905b81548152906001019060200180831161040157829003601f168201915b505050505081565b60006104333384846109ce565b6001905092915050565b60025481565b6000610450843384610ab7565b61045b848484610b7c565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516104e3919061133c565b60405180910390206040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525080519060200120463060405160200161053e959493929190611362565b60405160208183030381529060405280519060200120905090565b60006105ed338484600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105e891906113e4565b6109ce565b6001905092915050565b6106018282610c89565b5050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461064290611268565b80601f016020809104026020016040519081016040528092919081815260200182805461066e90611268565b80156106bb5780601f10610690576101008083540402835291602001916106bb565b820191906000526020600020905b81548152906001019060200180831161069e57829003601f168201915b505050505081565b6106cd8282610d59565b5050565b60006106de338484610ab7565b6001905092915050565b60006106f5338484610b7c565b6001905092915050565b42841015610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990611464565b60405180910390fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08160001c111580156107865750601b8360ff1614806107855750601c8360ff16145b5b6107c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bc906114d0565b60405180910390fd5b60006107cf6104b1565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a60405160200161085a969594939291906114f0565b604051602081830303815290604052805190602001206040516020016108819291906115c9565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516108be9493929190611600565b6020604051602081039080840390855afa1580156108e0573d6000803e3d6000fd5b5050506020604051035190508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480156109545750600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a90611691565b60405180910390fd5b50506109a08787876109ce565b50505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055604051610aaa9190610ff9565b60405180910390a3505050565b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b7657610b7584848484610b7091906116b1565b6109ce565b5b50505050565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bcb91906116b1565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c7c9190610ff9565b60405180910390a3505050565b8060026000828254610c9b91906113e4565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d4d9190610ff9565b60405180910390a35050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610da891906116b1565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e1d9190610ff9565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e63578082015181840152602081019050610e48565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e8b82610e29565b610e958185610e34565b9350610ea5818560208601610e45565b610eae81610e6f565b840191505092915050565b60006020820190508181036000830152610ed38184610e80565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0b82610ee0565b9050919050565b610f1b81610f00565b8114610f2657600080fd5b50565b600081359050610f3881610f12565b92915050565b6000819050919050565b610f5181610f3e565b8114610f5c57600080fd5b50565b600081359050610f6e81610f48565b92915050565b60008060408385031215610f8b57610f8a610edb565b5b6000610f9985828601610f29565b9250506020610faa85828601610f5f565b9150509250929050565b60008115159050919050565b610fc981610fb4565b82525050565b6000602082019050610fe46000830184610fc0565b92915050565b610ff381610f3e565b82525050565b600060208201905061100e6000830184610fea565b92915050565b60008060006060848603121561102d5761102c610edb565b5b600061103b86828701610f29565b935050602061104c86828701610f29565b925050604061105d86828701610f5f565b9150509250925092565b6000819050919050565b61107a81611067565b82525050565b60006020820190506110956000830184611071565b92915050565b600060ff82169050919050565b6110b18161109b565b82525050565b60006020820190506110cc60008301846110a8565b92915050565b6000602082840312156110e8576110e7610edb565b5b60006110f684828501610f29565b91505092915050565b6111088161109b565b811461111357600080fd5b50565b600081359050611125816110ff565b92915050565b61113481611067565b811461113f57600080fd5b50565b6000813590506111518161112b565b92915050565b600080600080600080600060e0888a03121561117657611175610edb565b5b60006111848a828b01610f29565b97505060206111958a828b01610f29565b96505060406111a68a828b01610f5f565b95505060606111b78a828b01610f5f565b94505060806111c88a828b01611116565b93505060a06111d98a828b01611142565b92505060c06111ea8a828b01611142565b91505092959891949750929550565b600080604083850312156112105761120f610edb565b5b600061121e85828601610f29565b925050602061122f85828601610f29565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061128057607f821691505b60208210810361129357611292611239565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546112c681611268565b6112d08186611299565b945060018216600081146112eb576001811461130057611333565b60ff1983168652811515820286019350611333565b611309856112a4565b60005b8381101561132b5781548189015260018201915060208101905061130c565b838801955050505b50505092915050565b600061134882846112b9565b915081905092915050565b61135c81610f00565b82525050565b600060a0820190506113776000830188611071565b6113846020830187611071565b6113916040830186611071565b61139e6060830185610fea565b6113ab6080830184611353565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113ef82610f3e565b91506113fa83610f3e565b9250828201905080821115611412576114116113b5565b5b92915050565b7f45524332303a503a455850495245440000000000000000000000000000000000600082015250565b600061144e600f83610e34565b915061145982611418565b602082019050919050565b6000602082019050818103600083015261147d81611441565b9050919050565b7f45524332303a503a4d414c4c4541424c45000000000000000000000000000000600082015250565b60006114ba601183610e34565b91506114c582611484565b602082019050919050565b600060208201905081810360008301526114e9816114ad565b9050919050565b600060c0820190506115056000830189611071565b6115126020830188611353565b61151f6040830187611353565b61152c6060830186610fea565b6115396080830185610fea565b61154660a0830184610fea565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611592600283611551565b915061159d8261155c565b600282019050919050565b6000819050919050565b6115c36115be82611067565b6115a8565b82525050565b60006115d482611585565b91506115e082856115b2565b6020820191506115f082846115b2565b6020820191508190509392505050565b60006080820190506116156000830187611071565b61162260208301866110a8565b61162f6040830185611071565b61163c6060830184611071565b95945050505050565b7f45524332303a503a494e56414c49445f5349474e415455524500000000000000600082015250565b600061167b601983610e34565b915061168682611645565b602082019050919050565b600060208201905081810360008301526116aa8161166e565b9050919050565b60006116bc82610f3e565b91506116c783610f3e565b92508282039050818111156116df576116de6113b5565b5b9291505056fea264697066735822122085b6dbe4c01157f4a3c111dfe3c8ab60a041796876f1eb739372dbb79890049064736f6c6343000811003360c06040526001600d553480156200001657600080fd5b50604051620044df380380620044df83398181016040528101906200003c919062000427565b848484848484848373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200008f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b591906200052b565b8260009081620000c691906200079e565b508160019081620000d891906200079e565b508060ff1660808160ff1681525050505050600073ffffffffffffffffffffffffffffffffffffffff1683600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905573ffffffffffffffffffffffffffffffffffffffff16036200019b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019290620008e6565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060a081815250505050505050505050505062000908565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200025d8262000212565b810181811067ffffffffffffffff821117156200027f576200027e62000223565b5b80604052505050565b600062000294620001f4565b9050620002a2828262000252565b919050565b600067ffffffffffffffff821115620002c557620002c462000223565b5b620002d08262000212565b9050602081019050919050565b60005b83811015620002fd578082015181840152602081019050620002e0565b60008484015250505050565b6000620003206200031a84620002a7565b62000288565b9050828152602081018484840111156200033f576200033e6200020d565b5b6200034c848285620002dd565b509392505050565b600082601f8301126200036c576200036b62000208565b5b81516200037e84826020860162000309565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003b48262000387565b9050919050565b620003c681620003a7565b8114620003d257600080fd5b50565b600081519050620003e681620003bb565b92915050565b6000819050919050565b6200040181620003ec565b81146200040d57600080fd5b50565b6000815190506200042181620003f6565b92915050565b600080600080600060a08688031215620004465762000445620001fe565b5b600086015167ffffffffffffffff81111562000467576200046662000203565b5b620004758882890162000354565b955050602086015167ffffffffffffffff81111562000499576200049862000203565b5b620004a78882890162000354565b9450506040620004ba88828901620003d5565b9350506060620004cd88828901620003d5565b9250506080620004e08882890162000410565b9150509295509295909350565b600060ff82169050919050565b6200050581620004ed565b81146200051157600080fd5b50565b6000815190506200052581620004fa565b92915050565b600060208284031215620005445762000543620001fe565b5b6000620005548482850162000514565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005b057607f821691505b602082108103620005c657620005c562000568565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005f1565b6200063c8683620005f1565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200067f620006796200067384620003ec565b62000654565b620003ec565b9050919050565b6000819050919050565b6200069b836200065e565b620006b3620006aa8262000686565b848454620005fe565b825550505050565b600090565b620006ca620006bb565b620006d781848462000690565b505050565b5b81811015620006ff57620006f3600082620006c0565b600181019050620006dd565b5050565b601f8211156200074e576200071881620005cc565b6200072384620005e1565b8101602085101562000733578190505b6200074b6200074285620005e1565b830182620006dc565b50505b505050565b600082821c905092915050565b6000620007736000198460080262000753565b1980831691505092915050565b60006200078e838362000760565b9150826002028217905092915050565b620007a9826200055d565b67ffffffffffffffff811115620007c557620007c462000223565b5b620007d1825462000597565b620007de82828562000703565b600060209050601f83116001811462000816576000841562000801578287015190505b6200080d858262000780565b8655506200087d565b601f1984166200082686620005cc565b60005b82811015620008505784890151825560018201915060208501945060208101905062000829565b868310156200087057848901516200086c601f89168262000760565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f5244543a433a4f574e45525f5a45524f5f414444524553530000000000000000600082015250565b6000620008ce60188362000885565b9150620008db8262000896565b602082019050919050565b600060208201905081810360008301526200090181620008bf565b9050919050565b60805160a051613ba36200093c600039600081816109dc015281816116ae0152611ad201526000610bc00152613ba36000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c806379ba50971161015c578063c42069ec116100ce578063d505accf11610087578063d505accf1461088a578063d905777e146108a6578063dd62ed3e146108d6578063e13aa99014610906578063e30c397814610937578063ef8b30f7146109555761027f565b8063c42069ec146107a2578063c63d75b6146107be578063c6e6f592146107ee578063ce96cb771461081e578063d0b06f5d1461084e578063d3b5dc3b1461086c5761027f565b806395d89b411161012057806395d89b4114610694578063a457c2d7146106b2578063a9059cbb146106e2578063b3d7f6b914610712578063b460af9414610742578063ba087652146107725761027f565b806379ba5097146105dc5780637ecebe00146105e65780638da5cb5b146106165780639159b2061461063457806394bf804d146106645761027f565b80633644e515116101f5578063402d267d116101b9578063402d267d146104bc5780634cdad506146104ec57806350921b231461051c57806360dd37d91461054c5780636e553f651461057c57806370a08231146105ac5761027f565b80633644e5151461041457806338d52e0f1461043257806339509351146104505780633c2f7773146104805780633c9ae2ba1461049e5761027f565b806311f240ac1161024757806311f240ac1461035057806318160ddd1461036e57806323b872dd1461038c5780632cee10fb146103bc57806330adf81f146103d8578063313ce567146103f65761027f565b806301e1d1141461028457806306fdde03146102a257806307a2d13a146102c0578063095ea7b3146102f05780630a28a47714610320575b600080fd5b61028c610985565b604051610299919061281f565b60405180910390f35b6102aa610a25565b6040516102b791906128ca565b60405180910390f35b6102da60048036038101906102d5919061291d565b610ab3565b6040516102e7919061281f565b60405180910390f35b61030a600480360381019061030591906129a8565b610af0565b6040516103179190612a03565b60405180910390f35b61033a6004803603810190610335919061291d565b610b07565b604051610347919061281f565b60405180910390f35b610358610b42565b604051610365919061281f565b60405180910390f35b610376610b48565b604051610383919061281f565b60405180910390f35b6103a660048036038101906103a19190612a1e565b610b4e565b6040516103b39190612a03565b60405180910390f35b6103d660048036038101906103d1919061291d565b610b71565b005b6103e0610b97565b6040516103ed9190612a8a565b60405180910390f35b6103fe610bbe565b60405161040b9190612ac1565b60405180910390f35b61041c610be2565b6040516104299190612a8a565b60405180910390f35b61043a610c8a565b6040516104479190612aeb565b60405180910390f35b61046a600480360381019061046591906129a8565b610cb0565b6040516104779190612a03565b60405180910390f35b610488610d4e565b604051610495919061281f565b60405180910390f35b6104a6610d54565b6040516104b3919061281f565b60405180910390f35b6104d660048036038101906104d19190612b06565b610d5a565b6040516104e3919061281f565b60405180910390f35b6105066004803603810190610501919061291d565b610d84565b604051610513919061281f565b60405180910390f35b61053660048036038101906105319190612b8b565b610d96565b604051610543919061281f565b60405180910390f35b61056660048036038101906105619190612c18565b610ea7565b604051610573919061281f565b60405180910390f35b61059660048036038101906105919190612cba565b610ffc565b6040516105a3919061281f565b60405180910390f35b6105c660048036038101906105c19190612b06565b611070565b6040516105d3919061281f565b60405180910390f35b6105e4611088565b005b61060060048036038101906105fb9190612b06565b611219565b60405161060d919061281f565b60405180910390f35b61061e611231565b60405161062b9190612aeb565b60405180910390f35b61064e60048036038101906106499190612b06565b611257565b60405161065b919061281f565b60405180910390f35b61067e60048036038101906106799190612cba565b6112a8565b60405161068b919061281f565b60405180910390f35b61069c61131c565b6040516106a991906128ca565b60405180910390f35b6106cc60048036038101906106c791906129a8565b6113aa565b6040516106d99190612a03565b60405180910390f35b6106fc60048036038101906106f791906129a8565b6113c1565b6040516107099190612a03565b60405180910390f35b61072c6004803603810190610727919061291d565b6113d8565b604051610739919061281f565b60405180910390f35b61075c60048036038101906107579190612cfa565b611413565b604051610769919061281f565b60405180910390f35b61078c60048036038101906107879190612cfa565b611489565b604051610799919061281f565b60405180910390f35b6107bc60048036038101906107b79190612b06565b6114ff565b005b6107d860048036038101906107d39190612b06565b61162d565b6040516107e5919061281f565b60405180910390f35b6108086004803603810190610803919061291d565b611657565b604051610815919061281f565b60405180910390f35b61083860048036038101906108339190612b06565b611694565b604051610845919061281f565b60405180910390f35b6108566116a6565b604051610863919061281f565b60405180910390f35b6108746116ac565b604051610881919061281f565b60405180910390f35b6108a4600480360381019061089f9190612d4d565b6116d0565b005b6108c060048036038101906108bb9190612b06565b61197a565b6040516108cd919061281f565b60405180910390f35b6108f060048036038101906108eb9190612def565b6119c3565b6040516108fd919061281f565b60405180910390f35b610920600480360381019061091b919061291d565b6119e8565b60405161092e929190612e2f565b60405180910390f35b61093f611c58565b60405161094c9190612aeb565b60405180910390f35b61096f600480360381019061096a919061291d565b611c7e565b60405161097c919061281f565b60405180910390f35b600080600a549050600081036109a057600954915050610a22565b6000600c5490506000600b54905060008242116109c85781426109c39190612e87565b6109d5565b81836109d49190612e87565b5b90506009547f00000000000000000000000000000000000000000000000000000000000000008286610a079190612ebb565b610a119190612f2c565b610a1b9190612f5d565b9450505050505b90565b60008054610a3290612fc0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5e90612fc0565b8015610aab5780601f10610a8057610100808354040283529160200191610aab565b820191906000526020600020905b815481529060010190602001808311610a8e57829003601f168201915b505050505081565b600080600254905060008114610ae65780610acc610985565b84610ad79190612ebb565b610ae19190612f2c565b610ae8565b825b915050919050565b6000610afd338484611c90565b6001905092915050565b600080600254905060008114610b3857610b338184610b269190612ebb565b610b2e610985565b611d79565b610b3a565b825b915050919050565b60095481565b60025481565b6000610b5b843384611db8565b610b66848484611e7d565b600190509392505050565b80600981905550600142610b859190612e87565b600c81905550610b93611f8a565b5050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610c149190613094565b60405180910390206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001610c6f9594939291906130ab565b60405160208183030381529060405280519060200120905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d44338484600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d3f9190612f5d565b611c90565b6001905092915050565b600c5481565b600a5481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b6000610d8f82610ab3565b9050919050565b60006001600d5414610ddd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd49061314a565b60405180910390fd5b6002600d81905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf33308a898989896040518863ffffffff1660e01b8152600401610e4c979695949392919061316a565b600060405180830381600087803b158015610e6657600080fd5b505af1158015610e7a573d6000803e3d6000fd5b50505050610e95610e8a88611c7e565b915081888833611faf565b6001600d819055509695505050505050565b60006001600d5414610eee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee59061314a565b60405180910390fd5b6002600d8190555085610f00896113d8565b9150811115610f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3b90613225565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf333089898989896040518863ffffffff1660e01b8152600401610fab979695949392919061316a565b600060405180830381600087803b158015610fc557600080fd5b505af1158015610fd9573d6000803e3d6000fd5b50505050610fe988828933611faf565b6001600d81905550979650505050505050565b60006001600d5414611043576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103a9061314a565b60405180910390fd5b6002600d8190555061106261105784611c7e565b915081848433611faf565b6001600d8190555092915050565b60036020528060005260406000206000915090505481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110f90613291565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f357bdeb5828fa83945f38a88510ce5cd7d628dafb346d767efbc693149fdd97c60405160405180910390a333600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60056020528060005260406000206000915090505481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006112a1600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab3565b9050919050565b60006001600d54146112ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e69061314a565b60405180910390fd5b6002600d8190555061130e83611304856113d8565b9250828433611faf565b6001600d8190555092915050565b6001805461132990612fc0565b80601f016020809104026020016040519081016040528092919081815260200182805461135590612fc0565b80156113a25780601f10611377576101008083540402835291602001916113a2565b820191906000526020600020905b81548152906001019060200180831161138557829003601f168201915b505050505081565b60006113b7338484611db8565b6001905092915050565b60006113ce338484611e7d565b6001905092915050565b600080600254905060008114611409576114046113f3610985565b846113fe9190612ebb565b82611d79565b61140b565b825b915050919050565b60006001600d541461145a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114519061314a565b60405180910390fd5b6002600d8190555061147a61146e85610b07565b915081858585336121eb565b6001600d819055509392505050565b60006001600d54146114d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c79061314a565b60405180910390fd5b6002600d819055506114f0846114e586610d84565b9250828585336121eb565b6001600d819055509392505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461158f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611586906132fd565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa86864fa6b65f969d5ac8391ddaac6a0eba3f41386cbf6e78c3e4d6c59eb115f60405160405180910390a350565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b60008060025490506000811461168a5761166f610985565b818461167b9190612ebb565b6116859190612f2c565b61168c565b825b915050919050565b600061169f82611257565b9050919050565b600b5481565b7f000000000000000000000000000000000000000000000000000000000000000081565b42841015611713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170a90613369565b60405180910390fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08160001c111580156117575750601b8360ff1614806117565750601c8360ff16145b5b611796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178d906133d5565b60405180910390fd5b60006117a0610be2565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a60405160200161182b969594939291906133f5565b604051602081830303815290604052805190602001206040516020016118529291906134ce565b60405160208183030381529060405280519060200120905060006001828686866040516000815260200160405260405161188f9493929190613505565b6020604051602081039080840390855afa1580156118b1573d6000803e3d6000fd5b5050506020604051035190508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480156119255750600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b611964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195b90613596565b60405180910390fd5b5050611971878787611c90565b50505050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600080600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7290613602565b60405180910390fd5b600060025403611ac0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab79061366e565b60405180910390fd5b611ac8610985565b60098190559050827f000000000000000000000000000000000000000000000000000000000000000082600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b4d9190612aeb565b602060405180830381865afa158015611b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8e91906136a3565b611b989190612e87565b611ba29190612ebb565b611bac9190612f2c565b600a81905591508242600b819055611bc49190612f5d565b600c819055507f68b521a89bf844ff03e484d89fd64ce292a698ec522170f0dad7ecd11c2dc8fa8183604051611bfb929190612e2f565b60405180910390a13373ffffffffffffffffffffffffffffffffffffffff167f8c84e3b4df93f5b7c8d4ab6647708f5b14cacc124e22908187e30695ec54bab3600c54604051611c4b919061281f565b60405180910390a2915091565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611c8982611657565b9050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055604051611d6c919061281f565b60405180910390a3505050565b6000808284611d8891906136d0565b11611d94576000611d97565b60015b60ff168284611da69190612f2c565b611db09190612f5d565b905092915050565b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611e7757611e7684848484611e719190612e87565b611c90565b5b50505050565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ecc9190612e87565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f7d919061281f565b60405180910390a3505050565b6000600c5442600b81905511611fa257600a54611fa5565b60005b600a819055905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361201e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120159061374d565b60405180910390fd5b60008403612061576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612058906137b9565b60405180910390fd5b600083036120a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209b90613825565b60405180910390fd5b6120ae828561247d565b6000836120b9610985565b6120c39190612f5d565b6009819055905060006120d4611f8a565b90508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78789604051612135929190612e2f565b60405180910390a37f68b521a89bf844ff03e484d89fd64ce292a698ec522170f0dad7ecd11c2dc8fa828260405161216e929190612e2f565b60405180910390a16121a4600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684308861254d565b6121e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121da90613891565b60405180910390fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361225a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612251906138fd565b60405180910390fd5b6000850361229d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229490613969565b60405180910390fd5b600084036122e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d7906139d5565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461231f5761231e828287611db8565b5b61232982866125dc565b600084612334610985565b61233e9190612e87565b60098190559050600061234f611f8a565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db898b6040516123c7929190612e2f565b60405180910390a47f68b521a89bf844ff03e484d89fd64ce292a698ec522170f0dad7ecd11c2dc8fa8282604051612400929190612e2f565b60405180910390a1612435600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686886126ac565b612474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246b90613a41565b60405180910390fd5b50505050505050565b806002600082825461248f9190612f5d565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612541919061281f565b60405180910390a35050565b60006125d2856323b872dd60e01b86868660405160240161257093929190613a61565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612738565b9050949350505050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461262b9190612e87565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516126a0919061281f565b60405180910390a35050565b600061272f8463a9059cbb60e01b85856040516024016126cd929190613a98565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612738565b90509392505050565b6000808373ffffffffffffffffffffffffffffffffffffffff163b036127615760009050612800565b60608373ffffffffffffffffffffffffffffffffffffffff16836040516127889190613afd565b6000604051808303816000865af19150503d80600081146127c5576040519150601f19603f3d011682016040523d82523d6000602084013e6127ca565b606091505b5080925081935050508180156127fc57506000815114806127fb5750808060200190518101906127fa9190613b40565b5b5b9150505b92915050565b6000819050919050565b61281981612806565b82525050565b60006020820190506128346000830184612810565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612874578082015181840152602081019050612859565b60008484015250505050565b6000601f19601f8301169050919050565b600061289c8261283a565b6128a68185612845565b93506128b6818560208601612856565b6128bf81612880565b840191505092915050565b600060208201905081810360008301526128e48184612891565b905092915050565b600080fd5b6128fa81612806565b811461290557600080fd5b50565b600081359050612917816128f1565b92915050565b600060208284031215612933576129326128ec565b5b600061294184828501612908565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129758261294a565b9050919050565b6129858161296a565b811461299057600080fd5b50565b6000813590506129a28161297c565b92915050565b600080604083850312156129bf576129be6128ec565b5b60006129cd85828601612993565b92505060206129de85828601612908565b9150509250929050565b60008115159050919050565b6129fd816129e8565b82525050565b6000602082019050612a1860008301846129f4565b92915050565b600080600060608486031215612a3757612a366128ec565b5b6000612a4586828701612993565b9350506020612a5686828701612993565b9250506040612a6786828701612908565b9150509250925092565b6000819050919050565b612a8481612a71565b82525050565b6000602082019050612a9f6000830184612a7b565b92915050565b600060ff82169050919050565b612abb81612aa5565b82525050565b6000602082019050612ad66000830184612ab2565b92915050565b612ae58161296a565b82525050565b6000602082019050612b006000830184612adc565b92915050565b600060208284031215612b1c57612b1b6128ec565b5b6000612b2a84828501612993565b91505092915050565b612b3c81612aa5565b8114612b4757600080fd5b50565b600081359050612b5981612b33565b92915050565b612b6881612a71565b8114612b7357600080fd5b50565b600081359050612b8581612b5f565b92915050565b60008060008060008060c08789031215612ba857612ba76128ec565b5b6000612bb689828a01612908565b9650506020612bc789828a01612993565b9550506040612bd889828a01612908565b9450506060612be989828a01612b4a565b9350506080612bfa89828a01612b76565b92505060a0612c0b89828a01612b76565b9150509295509295509295565b600080600080600080600060e0888a031215612c3757612c366128ec565b5b6000612c458a828b01612908565b9750506020612c568a828b01612993565b9650506040612c678a828b01612908565b9550506060612c788a828b01612908565b9450506080612c898a828b01612b4a565b93505060a0612c9a8a828b01612b76565b92505060c0612cab8a828b01612b76565b91505092959891949750929550565b60008060408385031215612cd157612cd06128ec565b5b6000612cdf85828601612908565b9250506020612cf085828601612993565b9150509250929050565b600080600060608486031215612d1357612d126128ec565b5b6000612d2186828701612908565b9350506020612d3286828701612993565b9250506040612d4386828701612993565b9150509250925092565b600080600080600080600060e0888a031215612d6c57612d6b6128ec565b5b6000612d7a8a828b01612993565b9750506020612d8b8a828b01612993565b9650506040612d9c8a828b01612908565b9550506060612dad8a828b01612908565b9450506080612dbe8a828b01612b4a565b93505060a0612dcf8a828b01612b76565b92505060c0612de08a828b01612b76565b91505092959891949750929550565b60008060408385031215612e0657612e056128ec565b5b6000612e1485828601612993565b9250506020612e2585828601612993565b9150509250929050565b6000604082019050612e446000830185612810565b612e516020830184612810565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e9282612806565b9150612e9d83612806565b9250828203905081811115612eb557612eb4612e58565b5b92915050565b6000612ec682612806565b9150612ed183612806565b9250828202612edf81612806565b91508282048414831517612ef657612ef5612e58565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612f3782612806565b9150612f4283612806565b925082612f5257612f51612efd565b5b828204905092915050565b6000612f6882612806565b9150612f7383612806565b9250828201905080821115612f8b57612f8a612e58565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612fd857607f821691505b602082108103612feb57612fea612f91565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461301e81612fc0565b6130288186612ff1565b9450600182166000811461304357600181146130585761308b565b60ff198316865281151582028601935061308b565b61306185612ffc565b60005b8381101561308357815481890152600182019150602081019050613064565b838801955050505b50505092915050565b60006130a08284613011565b915081905092915050565b600060a0820190506130c06000830188612a7b565b6130cd6020830187612a7b565b6130da6040830186612a7b565b6130e76060830185612810565b6130f46080830184612adc565b9695505050505050565b7f5244543a4c4f434b454400000000000000000000000000000000000000000000600082015250565b6000613134600a83612845565b915061313f826130fe565b602082019050919050565b6000602082019050818103600083015261316381613127565b9050919050565b600060e08201905061317f600083018a612adc565b61318c6020830189612adc565b6131996040830188612810565b6131a66060830187612810565b6131b36080830186612ab2565b6131c060a0830185612a7b565b6131cd60c0830184612a7b565b98975050505050505050565b7f5244543a4d57503a494e53554646494349454e545f5045524d49540000000000600082015250565b600061320f601b83612845565b915061321a826131d9565b602082019050919050565b6000602082019050818103600083015261323e81613202565b9050919050565b7f5244543a414f3a4e4f545f504f00000000000000000000000000000000000000600082015250565b600061327b600d83612845565b915061328682613245565b602082019050919050565b600060208201905081810360008301526132aa8161326e565b9050919050565b7f5244543a53504f3a4e4f545f4f574e4552000000000000000000000000000000600082015250565b60006132e7601183612845565b91506132f2826132b1565b602082019050919050565b60006020820190508181036000830152613316816132da565b9050919050565b7f45524332303a503a455850495245440000000000000000000000000000000000600082015250565b6000613353600f83612845565b915061335e8261331d565b602082019050919050565b6000602082019050818103600083015261338281613346565b9050919050565b7f45524332303a503a4d414c4c4541424c45000000000000000000000000000000600082015250565b60006133bf601183612845565b91506133ca82613389565b602082019050919050565b600060208201905081810360008301526133ee816133b2565b9050919050565b600060c08201905061340a6000830189612a7b565b6134176020830188612adc565b6134246040830187612adc565b6134316060830186612810565b61343e6080830185612810565b61344b60a0830184612810565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000613497600283613456565b91506134a282613461565b600282019050919050565b6000819050919050565b6134c86134c382612a71565b6134ad565b82525050565b60006134d98261348a565b91506134e582856134b7565b6020820191506134f582846134b7565b6020820191508190509392505050565b600060808201905061351a6000830187612a7b565b6135276020830186612ab2565b6135346040830185612a7b565b6135416060830184612a7b565b95945050505050565b7f45524332303a503a494e56414c49445f5349474e415455524500000000000000600082015250565b6000613580601983612845565b915061358b8261354a565b602082019050919050565b600060208201905081810360008301526135af81613573565b9050919050565b7f5244543a5556533a4e4f545f4f574e4552000000000000000000000000000000600082015250565b60006135ec601183612845565b91506135f7826135b6565b602082019050919050565b6000602082019050818103600083015261361b816135df565b9050919050565b7f5244543a5556533a5a45524f5f535550504c5900000000000000000000000000600082015250565b6000613658601383612845565b915061366382613622565b602082019050919050565b600060208201905081810360008301526136878161364b565b9050919050565b60008151905061369d816128f1565b92915050565b6000602082840312156136b9576136b86128ec565b5b60006136c78482850161368e565b91505092915050565b60006136db82612806565b91506136e683612806565b9250826136f6576136f5612efd565b5b828206905092915050565b7f5244543a4d3a5a45524f5f524543454956455200000000000000000000000000600082015250565b6000613737601383612845565b915061374282613701565b602082019050919050565b600060208201905081810360008301526137668161372a565b9050919050565b7f5244543a4d3a5a45524f5f534841524553000000000000000000000000000000600082015250565b60006137a3601183612845565b91506137ae8261376d565b602082019050919050565b600060208201905081810360008301526137d281613796565b9050919050565b7f5244543a4d3a5a45524f5f415353455453000000000000000000000000000000600082015250565b600061380f601183612845565b915061381a826137d9565b602082019050919050565b6000602082019050818103600083015261383e81613802565b9050919050565b7f5244543a4d3a5452414e534645525f46524f4d00000000000000000000000000600082015250565b600061387b601383612845565b915061388682613845565b602082019050919050565b600060208201905081810360008301526138aa8161386e565b9050919050565b7f5244543a423a5a45524f5f524543454956455200000000000000000000000000600082015250565b60006138e7601383612845565b91506138f2826138b1565b602082019050919050565b60006020820190508181036000830152613916816138da565b9050919050565b7f5244543a423a5a45524f5f534841524553000000000000000000000000000000600082015250565b6000613953601183612845565b915061395e8261391d565b602082019050919050565b6000602082019050818103600083015261398281613946565b9050919050565b7f5244543a423a5a45524f5f415353455453000000000000000000000000000000600082015250565b60006139bf601183612845565b91506139ca82613989565b602082019050919050565b600060208201905081810360008301526139ee816139b2565b9050919050565b7f5244543a423a5452414e53464552000000000000000000000000000000000000600082015250565b6000613a2b600e83612845565b9150613a36826139f5565b602082019050919050565b60006020820190508181036000830152613a5a81613a1e565b9050919050565b6000606082019050613a766000830186612adc565b613a836020830185612adc565b613a906040830184612810565b949350505050565b6000604082019050613aad6000830185612adc565b613aba6020830184612810565b9392505050565b600081519050919050565b6000613ad782613ac1565b613ae18185612ff1565b9350613af1818560208601612856565b80840191505092915050565b6000613b098284613acc565b915081905092915050565b613b1d816129e8565b8114613b2857600080fd5b50565b600081519050613b3a81613b14565b92915050565b600060208284031215613b5657613b556128ec565b5b6000613b6484828501613b2b565b9150509291505056fea2646970667358221220caa94a3d51fab043bdb461b7eb1ff3e53d98050b13260c3c13fa95ed9202de1e64736f6c63430008110033608060405234801561001057600080fd5b50610f38806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638e09bed7116100715780638e09bed7146101b15780639ca4677f146101e1578063ccf2e8ae14610211578063dacaa22214610241578063e2ae7a6814610271578063fc179d67146102a1576100b4565b806305813efa146100b957806305eee8e7146100e957806314ab180d1461010557806351cf23b11461013557806371d2b543146101515780637fe2558114610181575b600080fd5b6100d360048036038101906100ce91906109d2565b6102d1565b6040516100e09190610a21565b60405180910390f35b61010360048036038101906100fe9190610aab565b61035b565b005b61011f600480360381019061011a91906109d2565b6103dc565b60405161012c9190610a21565b60405180910390f35b61014f600480360381019061014a9190610b61565b610464565b005b61016b600480360381019061016691906109d2565b6104e8565b6040516101789190610a21565b60405180910390f35b61019b60048036038101906101969190610b61565b610570565b6040516101a89190610bcf565b60405180910390f35b6101cb60048036038101906101c69190610bea565b6105f9565b6040516101d89190610a21565b60405180910390f35b6101fb60048036038101906101f69190610bea565b610682565b6040516102089190610a21565b60405180910390f35b61022b600480360381019061022691906109d2565b61070b565b6040516102389190610a21565b60405180910390f35b61025b60048036038101906102569190610c3d565b610795565b6040516102689190610a21565b60405180910390f35b61028b60048036038101906102869190610c3d565b610821565b6040516102989190610a21565b60405180910390f35b6102bb60048036038101906102b69190610ca4565b6108ad565b6040516102c89190610bcf565b60405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff1663ba0876528330306040518463ffffffff1660e01b815260040161031093929190610d1a565b6020604051808303816000875af115801561032f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103539190610d66565b905092915050565b8773ffffffffffffffffffffffffffffffffffffffff1663d505accf888888888888886040518863ffffffff1660e01b81526004016103a09796959493929190610db1565b600060405180830381600087803b1580156103ba57600080fd5b505af11580156103ce573d6000803e3d6000fd5b505050505050505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff166394bf804d83306040518363ffffffff1660e01b8152600401610419929190610e20565b6020604051808303816000875af1158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610d66565b905092915050565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b815260040161049f929190610e49565b6020604051808303816000875af11580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e29190610e9e565b50505050565b60008273ffffffffffffffffffffffffffffffffffffffff16636e553f6583306040518363ffffffff1660e01b8152600401610525929190610e20565b6020604051808303816000875af1158015610544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105689190610d66565b905092915050565b60008373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016105ad929190610e49565b6020604051808303816000875af11580156105cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f09190610e9e565b90509392505050565b60008373ffffffffffffffffffffffffffffffffffffffff16636e553f6584846040518363ffffffff1660e01b8152600401610636929190610e20565b6020604051808303816000875af1158015610655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106799190610d66565b90509392505050565b60008373ffffffffffffffffffffffffffffffffffffffff166394bf804d84846040518363ffffffff1660e01b81526004016106bf929190610e20565b6020604051808303816000875af11580156106de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107029190610d66565b90509392505050565b60008273ffffffffffffffffffffffffffffffffffffffff1663b460af948330306040518463ffffffff1660e01b815260040161074a93929190610d1a565b6020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d9190610d66565b905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff1663ba0876528585856040518463ffffffff1660e01b81526004016107d493929190610d1a565b6020604051808303816000875af11580156107f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108179190610d66565b9050949350505050565b60008473ffffffffffffffffffffffffffffffffffffffff1663b460af948585856040518463ffffffff1660e01b815260040161086093929190610d1a565b6020604051808303816000875af115801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190610d66565b9050949350505050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b81526004016108ec93929190610ecb565b6020604051808303816000875af115801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190610e9e565b9050949350505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109698261093e565b9050919050565b6109798161095e565b811461098457600080fd5b50565b60008135905061099681610970565b92915050565b6000819050919050565b6109af8161099c565b81146109ba57600080fd5b50565b6000813590506109cc816109a6565b92915050565b600080604083850312156109e9576109e8610939565b5b60006109f785828601610987565b9250506020610a08858286016109bd565b9150509250929050565b610a1b8161099c565b82525050565b6000602082019050610a366000830184610a12565b92915050565b600060ff82169050919050565b610a5281610a3c565b8114610a5d57600080fd5b50565b600081359050610a6f81610a49565b92915050565b6000819050919050565b610a8881610a75565b8114610a9357600080fd5b50565b600081359050610aa581610a7f565b92915050565b600080600080600080600080610100898b031215610acc57610acb610939565b5b6000610ada8b828c01610987565b9850506020610aeb8b828c01610987565b9750506040610afc8b828c01610987565b9650506060610b0d8b828c016109bd565b9550506080610b1e8b828c016109bd565b94505060a0610b2f8b828c01610a60565b93505060c0610b408b828c01610a96565b92505060e0610b518b828c01610a96565b9150509295985092959890939650565b600080600060608486031215610b7a57610b79610939565b5b6000610b8886828701610987565b9350506020610b9986828701610987565b9250506040610baa868287016109bd565b9150509250925092565b60008115159050919050565b610bc981610bb4565b82525050565b6000602082019050610be46000830184610bc0565b92915050565b600080600060608486031215610c0357610c02610939565b5b6000610c1186828701610987565b9350506020610c22868287016109bd565b9250506040610c3386828701610987565b9150509250925092565b60008060008060808587031215610c5757610c56610939565b5b6000610c6587828801610987565b9450506020610c76878288016109bd565b9350506040610c8787828801610987565b9250506060610c9887828801610987565b91505092959194509250565b60008060008060808587031215610cbe57610cbd610939565b5b6000610ccc87828801610987565b9450506020610cdd87828801610987565b9350506040610cee87828801610987565b9250506060610cff878288016109bd565b91505092959194509250565b610d148161095e565b82525050565b6000606082019050610d2f6000830186610a12565b610d3c6020830185610d0b565b610d496040830184610d0b565b949350505050565b600081519050610d60816109a6565b92915050565b600060208284031215610d7c57610d7b610939565b5b6000610d8a84828501610d51565b91505092915050565b610d9c81610a3c565b82525050565b610dab81610a75565b82525050565b600060e082019050610dc6600083018a610d0b565b610dd36020830189610d0b565b610de06040830188610a12565b610ded6060830187610a12565b610dfa6080830186610d93565b610e0760a0830185610da2565b610e1460c0830184610da2565b98975050505050505050565b6000604082019050610e356000830185610a12565b610e426020830184610d0b565b9392505050565b6000604082019050610e5e6000830185610d0b565b610e6b6020830184610a12565b9392505050565b610e7b81610bb4565b8114610e8657600080fd5b50565b600081519050610e9881610e72565b92915050565b600060208284031215610eb457610eb3610939565b5b6000610ec284828501610e89565b91505092915050565b6000606082019050610ee06000830186610d0b565b610eed6020830185610d0b565b610efa6040830184610a12565b94935050505056fea2646970667358221220d3d3e1cb99a5c8a5d40b28695811728c869f654acaea2c02ddc999eddf9a5b7a64736f6c63430008110033a2646970667358221220c9c04aad05da9468db584d58da4ccbc4c835b7441c5a3c57b7d084cab9ae6d9364736f6c63430008110033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80630a9254e41462000063578063108201c2146200006f57806378e2cab4146200008f578063ba414fa614620000af578063fa7626d414620000d1575b600080fd5b6200006d620000f3565b005b6200008d600480360381019062000087919062000d06565b6200031b565b005b620000ad6004803603810190620000a7919062000d06565b620006df565b005b620000b962000aa3565b604051620000c8919062000d6a565b60405180910390f35b620000db62000ab6565b604051620000ea919062000d6a565b60405180910390f35b6012604051620001039062000c9c565b6200010f919062000e92565b604051809103906000f0801580156200012c573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555030600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166c0c9f2c9cd04674edea40000000604051620001ad9062000caa565b620001bb9392919062001001565b604051809103906000f080158015620001d8573d6000803e3d6000fd5b50600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620002279062000cb8565b604051809103906000f08015801562000244573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5d6bf02629896806040518263ffffffff1660e01b8152600401620002e59190620010ab565b600060405180830381600087803b1580156200030057600080fd5b505af115801562000315573d6000803e3d6000fd5b50505050565b620003368160016c01431e0fae6d7217caa000000062000ac7565b9150620003468160018462000ac7565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401620003c9929190620010d9565b600060405180830381600087803b158015620003e457600080fd5b505af1158015620003f9573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cf23b1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401620004a29392919062001106565b600060405180830381600087803b158015620004bd57600080fd5b505af1158015620004d2573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314ab180d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040162000557929190620010d9565b6020604051808303816000875af115801562000577573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200059d91906200115a565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632cee10fb836040518263ffffffff1660e01b8152600401620005fb91906200118c565b600060405180830381600087803b1580156200061657600080fd5b505af11580156200062b573d6000803e3d6000fd5b50505050620006db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a2d13a836040518263ffffffff1660e01b81526004016200069091906200118c565b602060405180830381865afa158015620006ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006d491906200115a565b8362000bbf565b5050565b620006fa8160016c01431e0fae6d7217caa000000062000ac7565b91506200070a8160018462000ac7565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016200078d929190620010d9565b600060405180830381600087803b158015620007a857600080fd5b505af1158015620007bd573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cf23b1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401620008669392919062001106565b600060405180830381600087803b1580156200088157600080fd5b505af115801562000896573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314ab180d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016200091b929190620010d9565b6020604051808303816000875af11580156200093b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200096191906200115a565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632cee10fb836040518263ffffffff1660e01b8152600401620009bf91906200118c565b600060405180830381600087803b158015620009da57600080fd5b505af1158015620009ef573d6000803e3d6000fd5b5050505062000a9f600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c6e6f592846040518263ffffffff1660e01b815260040162000a5491906200118c565b602060405180830381865afa15801562000a72573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a9891906200115a565b8262000bbf565b5050565b600060019054906101000a900460ff1681565b60008054906101000a900460ff1681565b60008282101562000b0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000b0690620011f9565b60405180910390fd5b81830362000b205782905062000bb8565b82841015801562000b315750818411155b1562000b405783905062000bb8565b60008314801562000b7057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82145b1562000b7f5783905062000bb8565b826001848462000b9091906200124a565b62000b9c919062001285565b8562000ba99190620012ef565b62000bb5919062001285565b90505b9392505050565b80821462000c7b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000bf6906200139d565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162000c2f91906200140f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000c68919062001491565b60405180910390a162000c7a62000c7f565b5b5050565b6001600060016101000a81548160ff021916908315150217905550565b611d4c80620014c483390190565b6144df806200321083390190565b610f5880620076ef83390190565b600080fd5b6000819050919050565b62000ce08162000ccb565b811462000cec57600080fd5b50565b60008135905062000d008162000cd5565b92915050565b6000806040838503121562000d205762000d1f62000cc6565b5b600062000d308582860162000cef565b925050602062000d438582860162000cef565b9150509250929050565b60008115159050919050565b62000d648162000d4d565b82525050565b600060208201905062000d81600083018462000d59565b92915050565b600082825260208201905092915050565b7f4d6f636b546f6b656e0000000000000000000000000000000000000000000000600082015250565b600062000dd060098362000d87565b915062000ddd8262000d98565b602082019050919050565b7f4d54000000000000000000000000000000000000000000000000000000000000600082015250565b600062000e2060028362000d87565b915062000e2d8262000de8565b602082019050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600062000e7a62000e7462000e6e8462000e38565b62000e4f565b62000e42565b9050919050565b62000e8c8162000e59565b82525050565b6000606082019050818103600083015262000ead8162000dc1565b9050818103602083015262000ec28162000e11565b905062000ed3604083018462000e81565b92915050565b7f526576656e756520446973747269627574696f6e20546f6b656e000000000000600082015250565b600062000f11601a8362000d87565b915062000f1e8262000ed9565b602082019050919050565b7f5244540000000000000000000000000000000000000000000000000000000000600082015250565b600062000f6160038362000d87565b915062000f6e8262000f29565b602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000fa68262000f79565b9050919050565b62000fb88162000f99565b82525050565b6000819050919050565b600062000fe962000fe362000fdd8462000fbe565b62000e4f565b62000ccb565b9050919050565b62000ffb8162000fc8565b82525050565b600060a08201905081810360008301526200101c8162000f02565b90508181036020830152620010318162000f52565b905062001042604083018662000fad565b62001051606083018562000fad565b62001060608083018462000ff0565b949350505050565b6000819050919050565b6000620010936200108d620010878462001068565b62000e4f565b62000ccb565b9050919050565b620010a58162001072565b82525050565b6000602082019050620010c260008301846200109a565b92915050565b620010d38162000ccb565b82525050565b6000604082019050620010f0600083018562000fad565b620010ff6020830184620010c8565b9392505050565b60006060820190506200111d600083018662000fad565b6200112c602083018562000fad565b6200113b6040830184620010c8565b949350505050565b600081519050620011548162000cd5565b92915050565b60006020828403121562001173576200117262000cc6565b5b6000620011838482850162001143565b91505092915050565b6000602082019050620011a36000830184620010c8565b92915050565b7f4d41585f4c4553535f5448414e5f4d494e000000000000000000000000000000600082015250565b6000620011e160118362000d87565b9150620011ee82620011a9565b602082019050919050565b600060208201905081810360008301526200121481620011d2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620012578262000ccb565b9150620012648362000ccb565b92508282039050818111156200127f576200127e6200121b565b5b92915050565b6000620012928262000ccb565b91506200129f8362000ccb565b9250828201905080821115620012ba57620012b96200121b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620012fc8262000ccb565b9150620013098362000ccb565b9250826200131c576200131b620012c0565b5b828206905092915050565b7f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60008201527f745d000000000000000000000000000000000000000000000000000000000000602082015250565b60006200138560228362000d87565b9150620013928262001327565b604082019050919050565b60006020820190508181036000830152620013b88162001376565b9050919050565b7f2020457870656374656400000000000000000000000000000000000000000000600082015250565b6000620013f7600a8362000d87565b91506200140482620013bf565b602082019050919050565b600060408201905081810360008301526200142a81620013e8565b90506200143b6020830184620010c8565b92915050565b7f2020202041637475616c00000000000000000000000000000000000000000000600082015250565b600062001479600a8362000d87565b9150620014868262001441565b602082019050919050565b60006040820190508181036000830152620014ac816200146a565b9050620014bd6020830184620010c8565b9291505056fe60a06040523480156200001157600080fd5b5060405162001d4c38038062001d4c833981810160405281019062000037919062000249565b82828282600090816200004b91906200052e565b5081600190816200005d91906200052e565b508060ff1660808160ff168152505050505050505062000615565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e18262000096565b810181811067ffffffffffffffff82111715620001035762000102620000a7565b5b80604052505050565b60006200011862000078565b9050620001268282620000d6565b919050565b600067ffffffffffffffff821115620001495762000148620000a7565b5b620001548262000096565b9050602081019050919050565b60005b838110156200018157808201518184015260208101905062000164565b60008484015250505050565b6000620001a46200019e846200012b565b6200010c565b905082815260208101848484011115620001c357620001c262000091565b5b620001d084828562000161565b509392505050565b600082601f830112620001f057620001ef6200008c565b5b8151620002028482602086016200018d565b91505092915050565b600060ff82169050919050565b62000223816200020b565b81146200022f57600080fd5b50565b600081519050620002438162000218565b92915050565b60008060006060848603121562000265576200026462000082565b5b600084015167ffffffffffffffff81111562000286576200028562000087565b5b6200029486828701620001d8565b935050602084015167ffffffffffffffff811115620002b857620002b762000087565b5b620002c686828701620001d8565b9250506040620002d98682870162000232565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200033657607f821691505b6020821081036200034c576200034b620002ee565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003b67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000377565b620003c2868362000377565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200040f620004096200040384620003da565b620003e4565b620003da565b9050919050565b6000819050919050565b6200042b83620003ee565b620004436200043a8262000416565b84845462000384565b825550505050565b600090565b6200045a6200044b565b6200046781848462000420565b505050565b5b818110156200048f576200048360008262000450565b6001810190506200046d565b5050565b601f821115620004de57620004a88162000352565b620004b38462000367565b81016020851015620004c3578190505b620004db620004d28562000367565b8301826200046c565b50505b505050565b600082821c905092915050565b60006200050360001984600802620004e3565b1980831691505092915050565b60006200051e8383620004f0565b9150826002028217905092915050565b6200053982620002e3565b67ffffffffffffffff811115620005555762000554620000a7565b5b6200056182546200031d565b6200056e82828562000493565b600060209050601f831160018114620005a6576000841562000591578287015190505b6200059d858262000510565b8655506200060d565b601f198416620005b68662000352565b60005b82811015620005e057848901518255600182019150602085019450602081019050620005b9565b86831015620006005784890151620005fc601f891682620004f0565b8355505b6001600288020188555050505b505050505050565b60805161171b62000631600039600061048f015261171b6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806340c10f19116100a25780639dc29fac116100715780639dc29fac146102d0578063a457c2d7146102ec578063a9059cbb1461031c578063d505accf1461034c578063dd62ed3e146103685761010b565b806340c10f191461023657806370a08231146102525780637ecebe001461028257806395d89b41146102b25761010b565b806330adf81f116100de57806330adf81f146101ac578063313ce567146101ca5780633644e515146101e857806339509351146102065761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b610118610398565b6040516101259190610eb9565b60405180910390f35b61014860048036038101906101439190610f74565b610426565b6040516101559190610fcf565b60405180910390f35b61016661043d565b6040516101739190610ff9565b60405180910390f35b61019660048036038101906101919190611014565b610443565b6040516101a39190610fcf565b60405180910390f35b6101b4610466565b6040516101c19190611080565b60405180910390f35b6101d261048d565b6040516101df91906110b7565b60405180910390f35b6101f06104b1565b6040516101fd9190611080565b60405180910390f35b610220600480360381019061021b9190610f74565b610559565b60405161022d9190610fcf565b60405180910390f35b610250600480360381019061024b9190610f74565b6105f7565b005b61026c600480360381019061026791906110d2565b610605565b6040516102799190610ff9565b60405180910390f35b61029c600480360381019061029791906110d2565b61061d565b6040516102a99190610ff9565b60405180910390f35b6102ba610635565b6040516102c79190610eb9565b60405180910390f35b6102ea60048036038101906102e59190610f74565b6106c3565b005b61030660048036038101906103019190610f74565b6106d1565b6040516103139190610fcf565b60405180910390f35b61033660048036038101906103319190610f74565b6106e8565b6040516103439190610fcf565b60405180910390f35b61036660048036038101906103619190611157565b6106ff565b005b610382600480360381019061037d91906111f9565b6109a9565b60405161038f9190610ff9565b60405180910390f35b600080546103a590611268565b80601f01602080910402602001604051908101604052809291908181526020018280546103d190611268565b801561041e5780601f106103f35761010080835404028352916020019161041e565b820191906000526020600020905b81548152906001019060200180831161040157829003601f168201915b505050505081565b60006104333384846109ce565b6001905092915050565b60025481565b6000610450843384610ab7565b61045b848484610b7c565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516104e3919061133c565b60405180910390206040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525080519060200120463060405160200161053e959493929190611362565b60405160208183030381529060405280519060200120905090565b60006105ed338484600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105e891906113e4565b6109ce565b6001905092915050565b6106018282610c89565b5050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461064290611268565b80601f016020809104026020016040519081016040528092919081815260200182805461066e90611268565b80156106bb5780601f10610690576101008083540402835291602001916106bb565b820191906000526020600020905b81548152906001019060200180831161069e57829003601f168201915b505050505081565b6106cd8282610d59565b5050565b60006106de338484610ab7565b6001905092915050565b60006106f5338484610b7c565b6001905092915050565b42841015610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990611464565b60405180910390fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08160001c111580156107865750601b8360ff1614806107855750601c8360ff16145b5b6107c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bc906114d0565b60405180910390fd5b60006107cf6104b1565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a60405160200161085a969594939291906114f0565b604051602081830303815290604052805190602001206040516020016108819291906115c9565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516108be9493929190611600565b6020604051602081039080840390855afa1580156108e0573d6000803e3d6000fd5b5050506020604051035190508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480156109545750600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a90611691565b60405180910390fd5b50506109a08787876109ce565b50505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055604051610aaa9190610ff9565b60405180910390a3505050565b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b7657610b7584848484610b7091906116b1565b6109ce565b5b50505050565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bcb91906116b1565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c7c9190610ff9565b60405180910390a3505050565b8060026000828254610c9b91906113e4565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d4d9190610ff9565b60405180910390a35050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610da891906116b1565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e1d9190610ff9565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e63578082015181840152602081019050610e48565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e8b82610e29565b610e958185610e34565b9350610ea5818560208601610e45565b610eae81610e6f565b840191505092915050565b60006020820190508181036000830152610ed38184610e80565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0b82610ee0565b9050919050565b610f1b81610f00565b8114610f2657600080fd5b50565b600081359050610f3881610f12565b92915050565b6000819050919050565b610f5181610f3e565b8114610f5c57600080fd5b50565b600081359050610f6e81610f48565b92915050565b60008060408385031215610f8b57610f8a610edb565b5b6000610f9985828601610f29565b9250506020610faa85828601610f5f565b9150509250929050565b60008115159050919050565b610fc981610fb4565b82525050565b6000602082019050610fe46000830184610fc0565b92915050565b610ff381610f3e565b82525050565b600060208201905061100e6000830184610fea565b92915050565b60008060006060848603121561102d5761102c610edb565b5b600061103b86828701610f29565b935050602061104c86828701610f29565b925050604061105d86828701610f5f565b9150509250925092565b6000819050919050565b61107a81611067565b82525050565b60006020820190506110956000830184611071565b92915050565b600060ff82169050919050565b6110b18161109b565b82525050565b60006020820190506110cc60008301846110a8565b92915050565b6000602082840312156110e8576110e7610edb565b5b60006110f684828501610f29565b91505092915050565b6111088161109b565b811461111357600080fd5b50565b600081359050611125816110ff565b92915050565b61113481611067565b811461113f57600080fd5b50565b6000813590506111518161112b565b92915050565b600080600080600080600060e0888a03121561117657611175610edb565b5b60006111848a828b01610f29565b97505060206111958a828b01610f29565b96505060406111a68a828b01610f5f565b95505060606111b78a828b01610f5f565b94505060806111c88a828b01611116565b93505060a06111d98a828b01611142565b92505060c06111ea8a828b01611142565b91505092959891949750929550565b600080604083850312156112105761120f610edb565b5b600061121e85828601610f29565b925050602061122f85828601610f29565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061128057607f821691505b60208210810361129357611292611239565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546112c681611268565b6112d08186611299565b945060018216600081146112eb576001811461130057611333565b60ff1983168652811515820286019350611333565b611309856112a4565b60005b8381101561132b5781548189015260018201915060208101905061130c565b838801955050505b50505092915050565b600061134882846112b9565b915081905092915050565b61135c81610f00565b82525050565b600060a0820190506113776000830188611071565b6113846020830187611071565b6113916040830186611071565b61139e6060830185610fea565b6113ab6080830184611353565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113ef82610f3e565b91506113fa83610f3e565b9250828201905080821115611412576114116113b5565b5b92915050565b7f45524332303a503a455850495245440000000000000000000000000000000000600082015250565b600061144e600f83610e34565b915061145982611418565b602082019050919050565b6000602082019050818103600083015261147d81611441565b9050919050565b7f45524332303a503a4d414c4c4541424c45000000000000000000000000000000600082015250565b60006114ba601183610e34565b91506114c582611484565b602082019050919050565b600060208201905081810360008301526114e9816114ad565b9050919050565b600060c0820190506115056000830189611071565b6115126020830188611353565b61151f6040830187611353565b61152c6060830186610fea565b6115396080830185610fea565b61154660a0830184610fea565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611592600283611551565b915061159d8261155c565b600282019050919050565b6000819050919050565b6115c36115be82611067565b6115a8565b82525050565b60006115d482611585565b91506115e082856115b2565b6020820191506115f082846115b2565b6020820191508190509392505050565b60006080820190506116156000830187611071565b61162260208301866110a8565b61162f6040830185611071565b61163c6060830184611071565b95945050505050565b7f45524332303a503a494e56414c49445f5349474e415455524500000000000000600082015250565b600061167b601983610e34565b915061168682611645565b602082019050919050565b600060208201905081810360008301526116aa8161166e565b9050919050565b60006116bc82610f3e565b91506116c783610f3e565b92508282039050818111156116df576116de6113b5565b5b9291505056fea264697066735822122085b6dbe4c01157f4a3c111dfe3c8ab60a041796876f1eb739372dbb79890049064736f6c6343000811003360c06040526001600d553480156200001657600080fd5b50604051620044df380380620044df83398181016040528101906200003c919062000427565b848484848484848373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200008f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b591906200052b565b8260009081620000c691906200079e565b508160019081620000d891906200079e565b508060ff1660808160ff1681525050505050600073ffffffffffffffffffffffffffffffffffffffff1683600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905573ffffffffffffffffffffffffffffffffffffffff16036200019b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019290620008e6565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060a081815250505050505050505050505062000908565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200025d8262000212565b810181811067ffffffffffffffff821117156200027f576200027e62000223565b5b80604052505050565b600062000294620001f4565b9050620002a2828262000252565b919050565b600067ffffffffffffffff821115620002c557620002c462000223565b5b620002d08262000212565b9050602081019050919050565b60005b83811015620002fd578082015181840152602081019050620002e0565b60008484015250505050565b6000620003206200031a84620002a7565b62000288565b9050828152602081018484840111156200033f576200033e6200020d565b5b6200034c848285620002dd565b509392505050565b600082601f8301126200036c576200036b62000208565b5b81516200037e84826020860162000309565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003b48262000387565b9050919050565b620003c681620003a7565b8114620003d257600080fd5b50565b600081519050620003e681620003bb565b92915050565b6000819050919050565b6200040181620003ec565b81146200040d57600080fd5b50565b6000815190506200042181620003f6565b92915050565b600080600080600060a08688031215620004465762000445620001fe565b5b600086015167ffffffffffffffff81111562000467576200046662000203565b5b620004758882890162000354565b955050602086015167ffffffffffffffff81111562000499576200049862000203565b5b620004a78882890162000354565b9450506040620004ba88828901620003d5565b9350506060620004cd88828901620003d5565b9250506080620004e08882890162000410565b9150509295509295909350565b600060ff82169050919050565b6200050581620004ed565b81146200051157600080fd5b50565b6000815190506200052581620004fa565b92915050565b600060208284031215620005445762000543620001fe565b5b6000620005548482850162000514565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005b057607f821691505b602082108103620005c657620005c562000568565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005f1565b6200063c8683620005f1565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200067f620006796200067384620003ec565b62000654565b620003ec565b9050919050565b6000819050919050565b6200069b836200065e565b620006b3620006aa8262000686565b848454620005fe565b825550505050565b600090565b620006ca620006bb565b620006d781848462000690565b505050565b5b81811015620006ff57620006f3600082620006c0565b600181019050620006dd565b5050565b601f8211156200074e576200071881620005cc565b6200072384620005e1565b8101602085101562000733578190505b6200074b6200074285620005e1565b830182620006dc565b50505b505050565b600082821c905092915050565b6000620007736000198460080262000753565b1980831691505092915050565b60006200078e838362000760565b9150826002028217905092915050565b620007a9826200055d565b67ffffffffffffffff811115620007c557620007c462000223565b5b620007d1825462000597565b620007de82828562000703565b600060209050601f83116001811462000816576000841562000801578287015190505b6200080d858262000780565b8655506200087d565b601f1984166200082686620005cc565b60005b82811015620008505784890151825560018201915060208501945060208101905062000829565b868310156200087057848901516200086c601f89168262000760565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f5244543a433a4f574e45525f5a45524f5f414444524553530000000000000000600082015250565b6000620008ce60188362000885565b9150620008db8262000896565b602082019050919050565b600060208201905081810360008301526200090181620008bf565b9050919050565b60805160a051613ba36200093c600039600081816109dc015281816116ae0152611ad201526000610bc00152613ba36000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c806379ba50971161015c578063c42069ec116100ce578063d505accf11610087578063d505accf1461088a578063d905777e146108a6578063dd62ed3e146108d6578063e13aa99014610906578063e30c397814610937578063ef8b30f7146109555761027f565b8063c42069ec146107a2578063c63d75b6146107be578063c6e6f592146107ee578063ce96cb771461081e578063d0b06f5d1461084e578063d3b5dc3b1461086c5761027f565b806395d89b411161012057806395d89b4114610694578063a457c2d7146106b2578063a9059cbb146106e2578063b3d7f6b914610712578063b460af9414610742578063ba087652146107725761027f565b806379ba5097146105dc5780637ecebe00146105e65780638da5cb5b146106165780639159b2061461063457806394bf804d146106645761027f565b80633644e515116101f5578063402d267d116101b9578063402d267d146104bc5780634cdad506146104ec57806350921b231461051c57806360dd37d91461054c5780636e553f651461057c57806370a08231146105ac5761027f565b80633644e5151461041457806338d52e0f1461043257806339509351146104505780633c2f7773146104805780633c9ae2ba1461049e5761027f565b806311f240ac1161024757806311f240ac1461035057806318160ddd1461036e57806323b872dd1461038c5780632cee10fb146103bc57806330adf81f146103d8578063313ce567146103f65761027f565b806301e1d1141461028457806306fdde03146102a257806307a2d13a146102c0578063095ea7b3146102f05780630a28a47714610320575b600080fd5b61028c610985565b604051610299919061281f565b60405180910390f35b6102aa610a25565b6040516102b791906128ca565b60405180910390f35b6102da60048036038101906102d5919061291d565b610ab3565b6040516102e7919061281f565b60405180910390f35b61030a600480360381019061030591906129a8565b610af0565b6040516103179190612a03565b60405180910390f35b61033a6004803603810190610335919061291d565b610b07565b604051610347919061281f565b60405180910390f35b610358610b42565b604051610365919061281f565b60405180910390f35b610376610b48565b604051610383919061281f565b60405180910390f35b6103a660048036038101906103a19190612a1e565b610b4e565b6040516103b39190612a03565b60405180910390f35b6103d660048036038101906103d1919061291d565b610b71565b005b6103e0610b97565b6040516103ed9190612a8a565b60405180910390f35b6103fe610bbe565b60405161040b9190612ac1565b60405180910390f35b61041c610be2565b6040516104299190612a8a565b60405180910390f35b61043a610c8a565b6040516104479190612aeb565b60405180910390f35b61046a600480360381019061046591906129a8565b610cb0565b6040516104779190612a03565b60405180910390f35b610488610d4e565b604051610495919061281f565b60405180910390f35b6104a6610d54565b6040516104b3919061281f565b60405180910390f35b6104d660048036038101906104d19190612b06565b610d5a565b6040516104e3919061281f565b60405180910390f35b6105066004803603810190610501919061291d565b610d84565b604051610513919061281f565b60405180910390f35b61053660048036038101906105319190612b8b565b610d96565b604051610543919061281f565b60405180910390f35b61056660048036038101906105619190612c18565b610ea7565b604051610573919061281f565b60405180910390f35b61059660048036038101906105919190612cba565b610ffc565b6040516105a3919061281f565b60405180910390f35b6105c660048036038101906105c19190612b06565b611070565b6040516105d3919061281f565b60405180910390f35b6105e4611088565b005b61060060048036038101906105fb9190612b06565b611219565b60405161060d919061281f565b60405180910390f35b61061e611231565b60405161062b9190612aeb565b60405180910390f35b61064e60048036038101906106499190612b06565b611257565b60405161065b919061281f565b60405180910390f35b61067e60048036038101906106799190612cba565b6112a8565b60405161068b919061281f565b60405180910390f35b61069c61131c565b6040516106a991906128ca565b60405180910390f35b6106cc60048036038101906106c791906129a8565b6113aa565b6040516106d99190612a03565b60405180910390f35b6106fc60048036038101906106f791906129a8565b6113c1565b6040516107099190612a03565b60405180910390f35b61072c6004803603810190610727919061291d565b6113d8565b604051610739919061281f565b60405180910390f35b61075c60048036038101906107579190612cfa565b611413565b604051610769919061281f565b60405180910390f35b61078c60048036038101906107879190612cfa565b611489565b604051610799919061281f565b60405180910390f35b6107bc60048036038101906107b79190612b06565b6114ff565b005b6107d860048036038101906107d39190612b06565b61162d565b6040516107e5919061281f565b60405180910390f35b6108086004803603810190610803919061291d565b611657565b604051610815919061281f565b60405180910390f35b61083860048036038101906108339190612b06565b611694565b604051610845919061281f565b60405180910390f35b6108566116a6565b604051610863919061281f565b60405180910390f35b6108746116ac565b604051610881919061281f565b60405180910390f35b6108a4600480360381019061089f9190612d4d565b6116d0565b005b6108c060048036038101906108bb9190612b06565b61197a565b6040516108cd919061281f565b60405180910390f35b6108f060048036038101906108eb9190612def565b6119c3565b6040516108fd919061281f565b60405180910390f35b610920600480360381019061091b919061291d565b6119e8565b60405161092e929190612e2f565b60405180910390f35b61093f611c58565b60405161094c9190612aeb565b60405180910390f35b61096f600480360381019061096a919061291d565b611c7e565b60405161097c919061281f565b60405180910390f35b600080600a549050600081036109a057600954915050610a22565b6000600c5490506000600b54905060008242116109c85781426109c39190612e87565b6109d5565b81836109d49190612e87565b5b90506009547f00000000000000000000000000000000000000000000000000000000000000008286610a079190612ebb565b610a119190612f2c565b610a1b9190612f5d565b9450505050505b90565b60008054610a3290612fc0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5e90612fc0565b8015610aab5780601f10610a8057610100808354040283529160200191610aab565b820191906000526020600020905b815481529060010190602001808311610a8e57829003601f168201915b505050505081565b600080600254905060008114610ae65780610acc610985565b84610ad79190612ebb565b610ae19190612f2c565b610ae8565b825b915050919050565b6000610afd338484611c90565b6001905092915050565b600080600254905060008114610b3857610b338184610b269190612ebb565b610b2e610985565b611d79565b610b3a565b825b915050919050565b60095481565b60025481565b6000610b5b843384611db8565b610b66848484611e7d565b600190509392505050565b80600981905550600142610b859190612e87565b600c81905550610b93611f8a565b5050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610c149190613094565b60405180910390206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001610c6f9594939291906130ab565b60405160208183030381529060405280519060200120905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d44338484600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d3f9190612f5d565b611c90565b6001905092915050565b600c5481565b600a5481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b6000610d8f82610ab3565b9050919050565b60006001600d5414610ddd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd49061314a565b60405180910390fd5b6002600d81905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf33308a898989896040518863ffffffff1660e01b8152600401610e4c979695949392919061316a565b600060405180830381600087803b158015610e6657600080fd5b505af1158015610e7a573d6000803e3d6000fd5b50505050610e95610e8a88611c7e565b915081888833611faf565b6001600d819055509695505050505050565b60006001600d5414610eee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee59061314a565b60405180910390fd5b6002600d8190555085610f00896113d8565b9150811115610f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3b90613225565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf333089898989896040518863ffffffff1660e01b8152600401610fab979695949392919061316a565b600060405180830381600087803b158015610fc557600080fd5b505af1158015610fd9573d6000803e3d6000fd5b50505050610fe988828933611faf565b6001600d81905550979650505050505050565b60006001600d5414611043576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103a9061314a565b60405180910390fd5b6002600d8190555061106261105784611c7e565b915081848433611faf565b6001600d8190555092915050565b60036020528060005260406000206000915090505481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110f90613291565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f357bdeb5828fa83945f38a88510ce5cd7d628dafb346d767efbc693149fdd97c60405160405180910390a333600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60056020528060005260406000206000915090505481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006112a1600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab3565b9050919050565b60006001600d54146112ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e69061314a565b60405180910390fd5b6002600d8190555061130e83611304856113d8565b9250828433611faf565b6001600d8190555092915050565b6001805461132990612fc0565b80601f016020809104026020016040519081016040528092919081815260200182805461135590612fc0565b80156113a25780601f10611377576101008083540402835291602001916113a2565b820191906000526020600020905b81548152906001019060200180831161138557829003601f168201915b505050505081565b60006113b7338484611db8565b6001905092915050565b60006113ce338484611e7d565b6001905092915050565b600080600254905060008114611409576114046113f3610985565b846113fe9190612ebb565b82611d79565b61140b565b825b915050919050565b60006001600d541461145a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114519061314a565b60405180910390fd5b6002600d8190555061147a61146e85610b07565b915081858585336121eb565b6001600d819055509392505050565b60006001600d54146114d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c79061314a565b60405180910390fd5b6002600d819055506114f0846114e586610d84565b9250828585336121eb565b6001600d819055509392505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461158f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611586906132fd565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa86864fa6b65f969d5ac8391ddaac6a0eba3f41386cbf6e78c3e4d6c59eb115f60405160405180910390a350565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b60008060025490506000811461168a5761166f610985565b818461167b9190612ebb565b6116859190612f2c565b61168c565b825b915050919050565b600061169f82611257565b9050919050565b600b5481565b7f000000000000000000000000000000000000000000000000000000000000000081565b42841015611713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170a90613369565b60405180910390fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08160001c111580156117575750601b8360ff1614806117565750601c8360ff16145b5b611796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178d906133d5565b60405180910390fd5b60006117a0610be2565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a60405160200161182b969594939291906133f5565b604051602081830303815290604052805190602001206040516020016118529291906134ce565b60405160208183030381529060405280519060200120905060006001828686866040516000815260200160405260405161188f9493929190613505565b6020604051602081039080840390855afa1580156118b1573d6000803e3d6000fd5b5050506020604051035190508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480156119255750600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b611964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195b90613596565b60405180910390fd5b5050611971878787611c90565b50505050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600080600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7290613602565b60405180910390fd5b600060025403611ac0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab79061366e565b60405180910390fd5b611ac8610985565b60098190559050827f000000000000000000000000000000000000000000000000000000000000000082600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b4d9190612aeb565b602060405180830381865afa158015611b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8e91906136a3565b611b989190612e87565b611ba29190612ebb565b611bac9190612f2c565b600a81905591508242600b819055611bc49190612f5d565b600c819055507f68b521a89bf844ff03e484d89fd64ce292a698ec522170f0dad7ecd11c2dc8fa8183604051611bfb929190612e2f565b60405180910390a13373ffffffffffffffffffffffffffffffffffffffff167f8c84e3b4df93f5b7c8d4ab6647708f5b14cacc124e22908187e30695ec54bab3600c54604051611c4b919061281f565b60405180910390a2915091565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611c8982611657565b9050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055604051611d6c919061281f565b60405180910390a3505050565b6000808284611d8891906136d0565b11611d94576000611d97565b60015b60ff168284611da69190612f2c565b611db09190612f5d565b905092915050565b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611e7757611e7684848484611e719190612e87565b611c90565b5b50505050565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ecc9190612e87565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f7d919061281f565b60405180910390a3505050565b6000600c5442600b81905511611fa257600a54611fa5565b60005b600a819055905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361201e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120159061374d565b60405180910390fd5b60008403612061576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612058906137b9565b60405180910390fd5b600083036120a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209b90613825565b60405180910390fd5b6120ae828561247d565b6000836120b9610985565b6120c39190612f5d565b6009819055905060006120d4611f8a565b90508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78789604051612135929190612e2f565b60405180910390a37f68b521a89bf844ff03e484d89fd64ce292a698ec522170f0dad7ecd11c2dc8fa828260405161216e929190612e2f565b60405180910390a16121a4600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684308861254d565b6121e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121da90613891565b60405180910390fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361225a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612251906138fd565b60405180910390fd5b6000850361229d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229490613969565b60405180910390fd5b600084036122e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d7906139d5565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461231f5761231e828287611db8565b5b61232982866125dc565b600084612334610985565b61233e9190612e87565b60098190559050600061234f611f8a565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db898b6040516123c7929190612e2f565b60405180910390a47f68b521a89bf844ff03e484d89fd64ce292a698ec522170f0dad7ecd11c2dc8fa8282604051612400929190612e2f565b60405180910390a1612435600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686886126ac565b612474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246b90613a41565b60405180910390fd5b50505050505050565b806002600082825461248f9190612f5d565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612541919061281f565b60405180910390a35050565b60006125d2856323b872dd60e01b86868660405160240161257093929190613a61565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612738565b9050949350505050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461262b9190612e87565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516126a0919061281f565b60405180910390a35050565b600061272f8463a9059cbb60e01b85856040516024016126cd929190613a98565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612738565b90509392505050565b6000808373ffffffffffffffffffffffffffffffffffffffff163b036127615760009050612800565b60608373ffffffffffffffffffffffffffffffffffffffff16836040516127889190613afd565b6000604051808303816000865af19150503d80600081146127c5576040519150601f19603f3d011682016040523d82523d6000602084013e6127ca565b606091505b5080925081935050508180156127fc57506000815114806127fb5750808060200190518101906127fa9190613b40565b5b5b9150505b92915050565b6000819050919050565b61281981612806565b82525050565b60006020820190506128346000830184612810565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612874578082015181840152602081019050612859565b60008484015250505050565b6000601f19601f8301169050919050565b600061289c8261283a565b6128a68185612845565b93506128b6818560208601612856565b6128bf81612880565b840191505092915050565b600060208201905081810360008301526128e48184612891565b905092915050565b600080fd5b6128fa81612806565b811461290557600080fd5b50565b600081359050612917816128f1565b92915050565b600060208284031215612933576129326128ec565b5b600061294184828501612908565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129758261294a565b9050919050565b6129858161296a565b811461299057600080fd5b50565b6000813590506129a28161297c565b92915050565b600080604083850312156129bf576129be6128ec565b5b60006129cd85828601612993565b92505060206129de85828601612908565b9150509250929050565b60008115159050919050565b6129fd816129e8565b82525050565b6000602082019050612a1860008301846129f4565b92915050565b600080600060608486031215612a3757612a366128ec565b5b6000612a4586828701612993565b9350506020612a5686828701612993565b9250506040612a6786828701612908565b9150509250925092565b6000819050919050565b612a8481612a71565b82525050565b6000602082019050612a9f6000830184612a7b565b92915050565b600060ff82169050919050565b612abb81612aa5565b82525050565b6000602082019050612ad66000830184612ab2565b92915050565b612ae58161296a565b82525050565b6000602082019050612b006000830184612adc565b92915050565b600060208284031215612b1c57612b1b6128ec565b5b6000612b2a84828501612993565b91505092915050565b612b3c81612aa5565b8114612b4757600080fd5b50565b600081359050612b5981612b33565b92915050565b612b6881612a71565b8114612b7357600080fd5b50565b600081359050612b8581612b5f565b92915050565b60008060008060008060c08789031215612ba857612ba76128ec565b5b6000612bb689828a01612908565b9650506020612bc789828a01612993565b9550506040612bd889828a01612908565b9450506060612be989828a01612b4a565b9350506080612bfa89828a01612b76565b92505060a0612c0b89828a01612b76565b9150509295509295509295565b600080600080600080600060e0888a031215612c3757612c366128ec565b5b6000612c458a828b01612908565b9750506020612c568a828b01612993565b9650506040612c678a828b01612908565b9550506060612c788a828b01612908565b9450506080612c898a828b01612b4a565b93505060a0612c9a8a828b01612b76565b92505060c0612cab8a828b01612b76565b91505092959891949750929550565b60008060408385031215612cd157612cd06128ec565b5b6000612cdf85828601612908565b9250506020612cf085828601612993565b9150509250929050565b600080600060608486031215612d1357612d126128ec565b5b6000612d2186828701612908565b9350506020612d3286828701612993565b9250506040612d4386828701612993565b9150509250925092565b600080600080600080600060e0888a031215612d6c57612d6b6128ec565b5b6000612d7a8a828b01612993565b9750506020612d8b8a828b01612993565b9650506040612d9c8a828b01612908565b9550506060612dad8a828b01612908565b9450506080612dbe8a828b01612b4a565b93505060a0612dcf8a828b01612b76565b92505060c0612de08a828b01612b76565b91505092959891949750929550565b60008060408385031215612e0657612e056128ec565b5b6000612e1485828601612993565b9250506020612e2585828601612993565b9150509250929050565b6000604082019050612e446000830185612810565b612e516020830184612810565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e9282612806565b9150612e9d83612806565b9250828203905081811115612eb557612eb4612e58565b5b92915050565b6000612ec682612806565b9150612ed183612806565b9250828202612edf81612806565b91508282048414831517612ef657612ef5612e58565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612f3782612806565b9150612f4283612806565b925082612f5257612f51612efd565b5b828204905092915050565b6000612f6882612806565b9150612f7383612806565b9250828201905080821115612f8b57612f8a612e58565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612fd857607f821691505b602082108103612feb57612fea612f91565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461301e81612fc0565b6130288186612ff1565b9450600182166000811461304357600181146130585761308b565b60ff198316865281151582028601935061308b565b61306185612ffc565b60005b8381101561308357815481890152600182019150602081019050613064565b838801955050505b50505092915050565b60006130a08284613011565b915081905092915050565b600060a0820190506130c06000830188612a7b565b6130cd6020830187612a7b565b6130da6040830186612a7b565b6130e76060830185612810565b6130f46080830184612adc565b9695505050505050565b7f5244543a4c4f434b454400000000000000000000000000000000000000000000600082015250565b6000613134600a83612845565b915061313f826130fe565b602082019050919050565b6000602082019050818103600083015261316381613127565b9050919050565b600060e08201905061317f600083018a612adc565b61318c6020830189612adc565b6131996040830188612810565b6131a66060830187612810565b6131b36080830186612ab2565b6131c060a0830185612a7b565b6131cd60c0830184612a7b565b98975050505050505050565b7f5244543a4d57503a494e53554646494349454e545f5045524d49540000000000600082015250565b600061320f601b83612845565b915061321a826131d9565b602082019050919050565b6000602082019050818103600083015261323e81613202565b9050919050565b7f5244543a414f3a4e4f545f504f00000000000000000000000000000000000000600082015250565b600061327b600d83612845565b915061328682613245565b602082019050919050565b600060208201905081810360008301526132aa8161326e565b9050919050565b7f5244543a53504f3a4e4f545f4f574e4552000000000000000000000000000000600082015250565b60006132e7601183612845565b91506132f2826132b1565b602082019050919050565b60006020820190508181036000830152613316816132da565b9050919050565b7f45524332303a503a455850495245440000000000000000000000000000000000600082015250565b6000613353600f83612845565b915061335e8261331d565b602082019050919050565b6000602082019050818103600083015261338281613346565b9050919050565b7f45524332303a503a4d414c4c4541424c45000000000000000000000000000000600082015250565b60006133bf601183612845565b91506133ca82613389565b602082019050919050565b600060208201905081810360008301526133ee816133b2565b9050919050565b600060c08201905061340a6000830189612a7b565b6134176020830188612adc565b6134246040830187612adc565b6134316060830186612810565b61343e6080830185612810565b61344b60a0830184612810565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000613497600283613456565b91506134a282613461565b600282019050919050565b6000819050919050565b6134c86134c382612a71565b6134ad565b82525050565b60006134d98261348a565b91506134e582856134b7565b6020820191506134f582846134b7565b6020820191508190509392505050565b600060808201905061351a6000830187612a7b565b6135276020830186612ab2565b6135346040830185612a7b565b6135416060830184612a7b565b95945050505050565b7f45524332303a503a494e56414c49445f5349474e415455524500000000000000600082015250565b6000613580601983612845565b915061358b8261354a565b602082019050919050565b600060208201905081810360008301526135af81613573565b9050919050565b7f5244543a5556533a4e4f545f4f574e4552000000000000000000000000000000600082015250565b60006135ec601183612845565b91506135f7826135b6565b602082019050919050565b6000602082019050818103600083015261361b816135df565b9050919050565b7f5244543a5556533a5a45524f5f535550504c5900000000000000000000000000600082015250565b6000613658601383612845565b915061366382613622565b602082019050919050565b600060208201905081810360008301526136878161364b565b9050919050565b60008151905061369d816128f1565b92915050565b6000602082840312156136b9576136b86128ec565b5b60006136c78482850161368e565b91505092915050565b60006136db82612806565b91506136e683612806565b9250826136f6576136f5612efd565b5b828206905092915050565b7f5244543a4d3a5a45524f5f524543454956455200000000000000000000000000600082015250565b6000613737601383612845565b915061374282613701565b602082019050919050565b600060208201905081810360008301526137668161372a565b9050919050565b7f5244543a4d3a5a45524f5f534841524553000000000000000000000000000000600082015250565b60006137a3601183612845565b91506137ae8261376d565b602082019050919050565b600060208201905081810360008301526137d281613796565b9050919050565b7f5244543a4d3a5a45524f5f415353455453000000000000000000000000000000600082015250565b600061380f601183612845565b915061381a826137d9565b602082019050919050565b6000602082019050818103600083015261383e81613802565b9050919050565b7f5244543a4d3a5452414e534645525f46524f4d00000000000000000000000000600082015250565b600061387b601383612845565b915061388682613845565b602082019050919050565b600060208201905081810360008301526138aa8161386e565b9050919050565b7f5244543a423a5a45524f5f524543454956455200000000000000000000000000600082015250565b60006138e7601383612845565b91506138f2826138b1565b602082019050919050565b60006020820190508181036000830152613916816138da565b9050919050565b7f5244543a423a5a45524f5f534841524553000000000000000000000000000000600082015250565b6000613953601183612845565b915061395e8261391d565b602082019050919050565b6000602082019050818103600083015261398281613946565b9050919050565b7f5244543a423a5a45524f5f415353455453000000000000000000000000000000600082015250565b60006139bf601183612845565b91506139ca82613989565b602082019050919050565b600060208201905081810360008301526139ee816139b2565b9050919050565b7f5244543a423a5452414e53464552000000000000000000000000000000000000600082015250565b6000613a2b600e83612845565b9150613a36826139f5565b602082019050919050565b60006020820190508181036000830152613a5a81613a1e565b9050919050565b6000606082019050613a766000830186612adc565b613a836020830185612adc565b613a906040830184612810565b949350505050565b6000604082019050613aad6000830185612adc565b613aba6020830184612810565b9392505050565b600081519050919050565b6000613ad782613ac1565b613ae18185612ff1565b9350613af1818560208601612856565b80840191505092915050565b6000613b098284613acc565b915081905092915050565b613b1d816129e8565b8114613b2857600080fd5b50565b600081519050613b3a81613b14565b92915050565b600060208284031215613b5657613b556128ec565b5b6000613b6484828501613b2b565b9150509291505056fea2646970667358221220caa94a3d51fab043bdb461b7eb1ff3e53d98050b13260c3c13fa95ed9202de1e64736f6c63430008110033608060405234801561001057600080fd5b50610f38806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638e09bed7116100715780638e09bed7146101b15780639ca4677f146101e1578063ccf2e8ae14610211578063dacaa22214610241578063e2ae7a6814610271578063fc179d67146102a1576100b4565b806305813efa146100b957806305eee8e7146100e957806314ab180d1461010557806351cf23b11461013557806371d2b543146101515780637fe2558114610181575b600080fd5b6100d360048036038101906100ce91906109d2565b6102d1565b6040516100e09190610a21565b60405180910390f35b61010360048036038101906100fe9190610aab565b61035b565b005b61011f600480360381019061011a91906109d2565b6103dc565b60405161012c9190610a21565b60405180910390f35b61014f600480360381019061014a9190610b61565b610464565b005b61016b600480360381019061016691906109d2565b6104e8565b6040516101789190610a21565b60405180910390f35b61019b60048036038101906101969190610b61565b610570565b6040516101a89190610bcf565b60405180910390f35b6101cb60048036038101906101c69190610bea565b6105f9565b6040516101d89190610a21565b60405180910390f35b6101fb60048036038101906101f69190610bea565b610682565b6040516102089190610a21565b60405180910390f35b61022b600480360381019061022691906109d2565b61070b565b6040516102389190610a21565b60405180910390f35b61025b60048036038101906102569190610c3d565b610795565b6040516102689190610a21565b60405180910390f35b61028b60048036038101906102869190610c3d565b610821565b6040516102989190610a21565b60405180910390f35b6102bb60048036038101906102b69190610ca4565b6108ad565b6040516102c89190610bcf565b60405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff1663ba0876528330306040518463ffffffff1660e01b815260040161031093929190610d1a565b6020604051808303816000875af115801561032f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103539190610d66565b905092915050565b8773ffffffffffffffffffffffffffffffffffffffff1663d505accf888888888888886040518863ffffffff1660e01b81526004016103a09796959493929190610db1565b600060405180830381600087803b1580156103ba57600080fd5b505af11580156103ce573d6000803e3d6000fd5b505050505050505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff166394bf804d83306040518363ffffffff1660e01b8152600401610419929190610e20565b6020604051808303816000875af1158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610d66565b905092915050565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b815260040161049f929190610e49565b6020604051808303816000875af11580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e29190610e9e565b50505050565b60008273ffffffffffffffffffffffffffffffffffffffff16636e553f6583306040518363ffffffff1660e01b8152600401610525929190610e20565b6020604051808303816000875af1158015610544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105689190610d66565b905092915050565b60008373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016105ad929190610e49565b6020604051808303816000875af11580156105cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f09190610e9e565b90509392505050565b60008373ffffffffffffffffffffffffffffffffffffffff16636e553f6584846040518363ffffffff1660e01b8152600401610636929190610e20565b6020604051808303816000875af1158015610655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106799190610d66565b90509392505050565b60008373ffffffffffffffffffffffffffffffffffffffff166394bf804d84846040518363ffffffff1660e01b81526004016106bf929190610e20565b6020604051808303816000875af11580156106de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107029190610d66565b90509392505050565b60008273ffffffffffffffffffffffffffffffffffffffff1663b460af948330306040518463ffffffff1660e01b815260040161074a93929190610d1a565b6020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d9190610d66565b905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff1663ba0876528585856040518463ffffffff1660e01b81526004016107d493929190610d1a565b6020604051808303816000875af11580156107f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108179190610d66565b9050949350505050565b60008473ffffffffffffffffffffffffffffffffffffffff1663b460af948585856040518463ffffffff1660e01b815260040161086093929190610d1a565b6020604051808303816000875af115801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190610d66565b9050949350505050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b81526004016108ec93929190610ecb565b6020604051808303816000875af115801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190610e9e565b9050949350505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109698261093e565b9050919050565b6109798161095e565b811461098457600080fd5b50565b60008135905061099681610970565b92915050565b6000819050919050565b6109af8161099c565b81146109ba57600080fd5b50565b6000813590506109cc816109a6565b92915050565b600080604083850312156109e9576109e8610939565b5b60006109f785828601610987565b9250506020610a08858286016109bd565b9150509250929050565b610a1b8161099c565b82525050565b6000602082019050610a366000830184610a12565b92915050565b600060ff82169050919050565b610a5281610a3c565b8114610a5d57600080fd5b50565b600081359050610a6f81610a49565b92915050565b6000819050919050565b610a8881610a75565b8114610a9357600080fd5b50565b600081359050610aa581610a7f565b92915050565b600080600080600080600080610100898b031215610acc57610acb610939565b5b6000610ada8b828c01610987565b9850506020610aeb8b828c01610987565b9750506040610afc8b828c01610987565b9650506060610b0d8b828c016109bd565b9550506080610b1e8b828c016109bd565b94505060a0610b2f8b828c01610a60565b93505060c0610b408b828c01610a96565b92505060e0610b518b828c01610a96565b9150509295985092959890939650565b600080600060608486031215610b7a57610b79610939565b5b6000610b8886828701610987565b9350506020610b9986828701610987565b9250506040610baa868287016109bd565b9150509250925092565b60008115159050919050565b610bc981610bb4565b82525050565b6000602082019050610be46000830184610bc0565b92915050565b600080600060608486031215610c0357610c02610939565b5b6000610c1186828701610987565b9350506020610c22868287016109bd565b9250506040610c3386828701610987565b9150509250925092565b60008060008060808587031215610c5757610c56610939565b5b6000610c6587828801610987565b9450506020610c76878288016109bd565b9350506040610c8787828801610987565b9250506060610c9887828801610987565b91505092959194509250565b60008060008060808587031215610cbe57610cbd610939565b5b6000610ccc87828801610987565b9450506020610cdd87828801610987565b9350506040610cee87828801610987565b9250506060610cff878288016109bd565b91505092959194509250565b610d148161095e565b82525050565b6000606082019050610d2f6000830186610a12565b610d3c6020830185610d0b565b610d496040830184610d0b565b949350505050565b600081519050610d60816109a6565b92915050565b600060208284031215610d7c57610d7b610939565b5b6000610d8a84828501610d51565b91505092915050565b610d9c81610a3c565b82525050565b610dab81610a75565b82525050565b600060e082019050610dc6600083018a610d0b565b610dd36020830189610d0b565b610de06040830188610a12565b610ded6060830187610a12565b610dfa6080830186610d93565b610e0760a0830185610da2565b610e1460c0830184610da2565b98975050505050505050565b6000604082019050610e356000830185610a12565b610e426020830184610d0b565b9392505050565b6000604082019050610e5e6000830185610d0b565b610e6b6020830184610a12565b9392505050565b610e7b81610bb4565b8114610e8657600080fd5b50565b600081519050610e9881610e72565b92915050565b600060208284031215610eb457610eb3610939565b5b6000610ec284828501610e89565b91505092915050565b6000606082019050610ee06000830186610d0b565b610eed6020830185610d0b565b610efa6040830184610a12565b94935050505056fea2646970667358221220d3d3e1cb99a5c8a5d40b28695811728c869f654acaea2c02ddc999eddf9a5b7a64736f6c63430008110033a2646970667358221220c9c04aad05da9468db584d58da4ccbc4c835b7441c5a3c57b7d084cab9ae6d9364736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14829:133",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:133",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:133",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:133"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:133"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:133",
                "type": ""
              }
            ],
            "src": "7:75:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:133",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:133",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:133"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:133",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:133",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:133"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:133",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:133"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:133"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:133",
                "type": ""
              }
            ],
            "src": "334:77:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:133",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:133",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:133",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:133",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:133"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:133"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:133"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:133"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:133"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:133"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:133"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:133"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:133"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:133"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:133",
                "type": ""
              }
            ],
            "src": "417:122:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:133"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:133"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:133"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:133"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:133",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:133",
                "type": ""
              }
            ],
            "src": "545:139:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "773:391:133",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "819:83:133",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "821:77:133"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "821:79:133"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "821:79:133"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "794:7:133"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "803:9:133"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "790:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "790:23:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "815:2:133",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "786:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:32:133"
                  },
                  "nodeType": "YulIf",
                  "src": "783:119:133"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "912:117:133",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "927:15:133",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "941:1:133",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "931:6:133",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "956:63:133",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "991:9:133"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1002:6:133"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "987:3:133"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "987:22:133"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1011:7:133"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "966:20:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "966:53:133"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "956:6:133"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1039:118:133",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1054:16:133",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1068:2:133",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1058:6:133",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1084:63:133",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1119:9:133"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1130:6:133"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1115:3:133"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1115:22:133"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1139:7:133"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1094:20:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1094:53:133"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1084:6:133"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "735:9:133",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "746:7:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "758:6:133",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "766:6:133",
                "type": ""
              }
            ],
            "src": "690:474:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1212:48:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1222:32:133",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1247:5:133"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1240:6:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1240:13:133"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1233:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1233:21:133"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1222:7:133"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1194:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1204:7:133",
                "type": ""
              }
            ],
            "src": "1170:90:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1325:50:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1342:3:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1362:5:133"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1347:14:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1347:21:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1335:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1335:34:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1335:34:133"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1313:5:133",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1320:3:133",
                "type": ""
              }
            ],
            "src": "1266:109:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1473:118:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1483:26:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1495:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1506:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1491:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1491:18:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1483:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1557:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1570:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1581:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1566:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1566:17:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1519:37:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1519:65:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1519:65:133"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1445:9:133",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1457:6:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1468:4:133",
                "type": ""
              }
            ],
            "src": "1381:210:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1693:73:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1710:3:133"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1715:6:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1703:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1703:19:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1703:19:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1731:29:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1750:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1755:4:133",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1746:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1746:14:133"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1731:11:133"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1665:3:133",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1670:6:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1681:11:133",
                "type": ""
              }
            ],
            "src": "1597:169:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1878:53:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1900:6:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1908:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1896:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1896:14:133"
                      },
                      {
                        "hexValue": "4d6f636b546f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1912:11:133",
                        "type": "",
                        "value": "MockToken"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1889:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1889:35:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1889:35:133"
                }
              ]
            },
            "name": "store_literal_in_memory_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1870:6:133",
                "type": ""
              }
            ],
            "src": "1772:159:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2083:219:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2093:73:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2159:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2164:1:133",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2100:58:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:66:133"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2093:3:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2264:3:133"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e",
                      "nodeType": "YulIdentifier",
                      "src": "2175:88:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2175:93:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2175:93:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2277:19:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2288:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2293:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2284:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2284:12:133"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2277:3:133"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2071:3:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2079:3:133",
                "type": ""
              }
            ],
            "src": "1937:365:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2414:46:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2436:6:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2444:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2432:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2432:14:133"
                      },
                      {
                        "hexValue": "4d54",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2448:4:133",
                        "type": "",
                        "value": "MT"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2425:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2425:28:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2425:28:133"
                }
              ]
            },
            "name": "store_literal_in_memory_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2406:6:133",
                "type": ""
              }
            ],
            "src": "2308:152:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2612:219:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2622:73:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2688:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2693:1:133",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2629:58:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2629:66:133"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2622:3:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2793:3:133"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d",
                      "nodeType": "YulIdentifier",
                      "src": "2704:88:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2704:93:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2704:93:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2806:19:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2817:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2822:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2813:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2813:12:133"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2806:3:133"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2600:3:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2608:3:133",
                "type": ""
              }
            ],
            "src": "2466:365:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2891:32:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2901:16:133",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2912:5:133"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2901:7:133"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_18_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2873:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2883:7:133",
                "type": ""
              }
            ],
            "src": "2837:86:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2972:43:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2982:27:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2997:5:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3004:4:133",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2993:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:16:133"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2982:7:133"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2954:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2964:7:133",
                "type": ""
              }
            ],
            "src": "2929:86:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3053:28:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3063:12:133",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3070:5:133"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3063:3:133"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3039:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3049:3:133",
                "type": ""
              }
            ],
            "src": "3021:60:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3154:89:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3164:73:133",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3229:5:133"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_18_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "3202:26:133"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3202:33:133"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "3193:8:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3193:43:133"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "3177:15:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3177:60:133"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3164:9:133"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_18_by_1_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3134:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3144:9:133",
                "type": ""
              }
            ],
            "src": "3087:156:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3321:73:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3338:3:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3381:5:133"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_18_by_1_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3343:37:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3343:44:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3331:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3331:57:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3331:57:133"
                }
              ]
            },
            "name": "abi_encode_t_rational_18_by_1_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3309:5:133",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3316:3:133",
                "type": ""
              }
            ],
            "src": "3249:145:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3707:543:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3717:26:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3729:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3740:2:133",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3725:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3725:18:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3717:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3764:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3775:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3760:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3760:17:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3783:4:133"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3789:9:133"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3779:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3779:20:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3753:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3753:47:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3753:47:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3809:139:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3943:4:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3817:124:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3817:131:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3809:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3969:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3980:2:133",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3965:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3965:18:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3989:4:133"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3995:9:133"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3985:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3985:20:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3958:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3958:48:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3958:48:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4015:139:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4149:4:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4023:124:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4023:131:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4015:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4215:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4228:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4239:2:133",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4224:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4224:18:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_18_by_1_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4164:50:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4164:79:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4164:79:133"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e_t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d_t_rational_18_by_1__to_t_string_memory_ptr_t_string_memory_ptr_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3679:9:133",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3691:6:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3702:4:133",
                "type": ""
              }
            ],
            "src": "3400:850:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4362:70:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4384:6:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4392:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4380:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4380:14:133"
                      },
                      {
                        "hexValue": "526576656e756520446973747269627574696f6e20546f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4396:28:133",
                        "type": "",
                        "value": "Revenue Distribution Token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4373:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4373:52:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4373:52:133"
                }
              ]
            },
            "name": "store_literal_in_memory_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4354:6:133",
                "type": ""
              }
            ],
            "src": "4256:176:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4584:220:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4594:74:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4660:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4665:2:133",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4601:58:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4601:67:133"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4594:3:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4766:3:133"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c",
                      "nodeType": "YulIdentifier",
                      "src": "4677:88:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4677:93:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4677:93:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4779:19:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4790:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4795:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4786:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4786:12:133"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4779:3:133"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4572:3:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4580:3:133",
                "type": ""
              }
            ],
            "src": "4438:366:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4916:47:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4938:6:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4946:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4934:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4934:14:133"
                      },
                      {
                        "hexValue": "524454",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4950:5:133",
                        "type": "",
                        "value": "RDT"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4927:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4927:29:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4927:29:133"
                }
              ]
            },
            "name": "store_literal_in_memory_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4908:6:133",
                "type": ""
              }
            ],
            "src": "4810:153:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5115:219:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5125:73:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5191:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5196:1:133",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5132:58:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5132:66:133"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5125:3:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5296:3:133"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452",
                      "nodeType": "YulIdentifier",
                      "src": "5207:88:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5207:93:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5207:93:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5309:19:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5320:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5325:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5316:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5316:12:133"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5309:3:133"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5103:3:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5111:3:133",
                "type": ""
              }
            ],
            "src": "4969:365:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5385:81:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5395:65:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5410:5:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5417:42:133",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5406:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5406:54:133"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5395:7:133"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5367:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5377:7:133",
                "type": ""
              }
            ],
            "src": "5340:126:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5517:51:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5527:35:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5556:5:133"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5538:17:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5538:24:133"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5527:7:133"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5499:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5509:7:133",
                "type": ""
              }
            ],
            "src": "5472:96:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5639:53:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5656:3:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5679:5:133"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5661:17:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5661:24:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5649:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5649:37:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5649:37:133"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5627:5:133",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5634:3:133",
                "type": ""
              }
            ],
            "src": "5574:118:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5781:32:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5791:16:133",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5802:5:133"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5791:7:133"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_1000000000000000000000000000000_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5763:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5773:7:133",
                "type": ""
              }
            ],
            "src": "5698:115:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5917:120:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5927:104:133",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6023:5:133"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_1000000000000000000000000000000_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "5967:55:133"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5967:62:133"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "5958:8:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5958:72:133"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5940:17:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5940:91:133"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5927:9:133"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_1000000000000000000000000000000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5897:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5907:9:133",
                "type": ""
              }
            ],
            "src": "5819:218:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6146:104:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6163:3:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6237:5:133"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_1000000000000000000000000000000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6168:68:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6168:75:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6156:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6156:88:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6156:88:133"
                }
              ]
            },
            "name": "abi_encode_t_rational_1000000000000000000000000000000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6134:5:133",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6141:3:133",
                "type": ""
              }
            ],
            "src": "6043:207:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6650:740:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6660:27:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6672:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6683:3:133",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6668:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6668:19:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6660:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6708:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6719:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6704:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6704:17:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6727:4:133"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6733:9:133"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6723:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6723:20:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6697:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6697:47:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6697:47:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6753:139:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6887:4:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6761:124:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6761:131:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6753:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6913:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6924:2:133",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6909:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6909:18:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6933:4:133"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6939:9:133"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6929:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6929:20:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6902:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6902:48:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6902:48:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6959:139:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7093:4:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6967:124:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6967:131:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6959:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7152:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7165:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7176:2:133",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7161:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7161:18:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7108:43:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7108:72:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7108:72:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7234:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7247:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7258:2:133",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7243:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7243:18:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7190:43:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7190:72:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7190:72:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7354:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7367:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7378:3:133",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7363:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7363:19:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_1000000000000000000000000000000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7272:81:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7272:111:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7272:111:133"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c_t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452_t_address_t_address_t_rational_1000000000000000000000000000000_by_1__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6606:9:133",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6618:6:133",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6626:6:133",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6634:6:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6645:4:133",
                "type": ""
              }
            ],
            "src": "6256:1134:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7456:32:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7466:16:133",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7477:5:133"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7466:7:133"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_10000000_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7438:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7448:7:133",
                "type": ""
              }
            ],
            "src": "7396:92:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7569:97:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7579:81:133",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7652:5:133"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_10000000_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "7619:32:133"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7619:39:133"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "7610:8:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7610:49:133"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7592:17:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7592:68:133"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7579:9:133"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_10000000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7549:5:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7559:9:133",
                "type": ""
              }
            ],
            "src": "7494:172:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7752:81:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7769:3:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7820:5:133"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_10000000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7774:45:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7774:52:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7762:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7762:65:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7762:65:133"
                }
              ]
            },
            "name": "abi_encode_t_rational_10000000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7740:5:133",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7747:3:133",
                "type": ""
              }
            ],
            "src": "7672:161:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7952:139:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7962:26:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7974:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7985:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7970:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7970:18:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7962:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8057:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8070:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8081:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8066:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8066:17:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_10000000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7998:58:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7998:86:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7998:86:133"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_10000000_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7924:9:133",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7936:6:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7947:4:133",
                "type": ""
              }
            ],
            "src": "7839:252:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8162:53:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8179:3:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8202:5:133"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8184:17:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8184:24:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8172:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8172:37:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8172:37:133"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8150:5:133",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8157:3:133",
                "type": ""
              }
            ],
            "src": "8097:118:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8347:206:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8357:26:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8369:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8380:2:133",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8365:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8365:18:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8357:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8437:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8450:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8461:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8446:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8446:17:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8393:43:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8393:71:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8393:71:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8518:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8531:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8542:2:133",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8527:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8527:18:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8474:43:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8474:72:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8474:72:133"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8311:9:133",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8323:6:133",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8331:6:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8342:4:133",
                "type": ""
              }
            ],
            "src": "8221:332:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8713:288:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8723:26:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8735:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8746:2:133",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8731:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8731:18:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8723:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8803:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8816:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8827:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8812:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8812:17:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8759:43:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8759:71:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8759:71:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8884:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8897:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8908:2:133",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8893:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8893:18:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8840:43:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8840:72:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8840:72:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8966:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8979:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8990:2:133",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8975:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8975:18:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8922:43:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8922:72:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8922:72:133"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8669:9:133",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8681:6:133",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8689:6:133",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8697:6:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8708:4:133",
                "type": ""
              }
            ],
            "src": "8559:442:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9070:80:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9080:22:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9095:6:133"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9089:5:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9089:13:133"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9080:5:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9138:5:133"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9111:26:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9111:33:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9111:33:133"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9048:6:133",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9056:3:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9064:5:133",
                "type": ""
              }
            ],
            "src": "9007:143:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9233:274:133",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9279:83:133",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9281:77:133"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9281:79:133"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9281:79:133"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9254:7:133"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9263:9:133"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9250:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9250:23:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9275:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9246:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9246:32:133"
                  },
                  "nodeType": "YulIf",
                  "src": "9243:119:133"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9372:128:133",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9387:15:133",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9401:1:133",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9391:6:133",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9416:74:133",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9462:9:133"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9473:6:133"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9458:3:133"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9458:22:133"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9482:7:133"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9426:31:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9426:64:133"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9416:6:133"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9203:9:133",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9214:7:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9226:6:133",
                "type": ""
              }
            ],
            "src": "9156:351:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9611:124:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9621:26:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9633:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9644:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9629:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9629:18:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9621:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9701:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9714:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9725:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9710:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9710:17:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9657:43:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9657:71:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9657:71:133"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9583:9:133",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9595:6:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9606:4:133",
                "type": ""
              }
            ],
            "src": "9513:222:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9847:61:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9869:6:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9877:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9865:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9865:14:133"
                      },
                      {
                        "hexValue": "4d41585f4c4553535f5448414e5f4d494e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9881:19:133",
                        "type": "",
                        "value": "MAX_LESS_THAN_MIN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9858:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9858:43:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9858:43:133"
                }
              ]
            },
            "name": "store_literal_in_memory_64e750450bb175d6b36029565a76cfdd9f3db1674ca2e6227613cb2e709a5ba5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9839:6:133",
                "type": ""
              }
            ],
            "src": "9741:167:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10060:220:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10070:74:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10136:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10141:2:133",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10077:58:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10077:67:133"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10070:3:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10242:3:133"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_64e750450bb175d6b36029565a76cfdd9f3db1674ca2e6227613cb2e709a5ba5",
                      "nodeType": "YulIdentifier",
                      "src": "10153:88:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10153:93:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10153:93:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10255:19:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10266:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10271:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10262:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10262:12:133"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10255:3:133"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_64e750450bb175d6b36029565a76cfdd9f3db1674ca2e6227613cb2e709a5ba5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10048:3:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10056:3:133",
                "type": ""
              }
            ],
            "src": "9914:366:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10457:248:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10467:26:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10479:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10490:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10475:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10475:18:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10467:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10514:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10525:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10510:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10510:17:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10533:4:133"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10539:9:133"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10529:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10529:20:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10503:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10503:47:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10503:47:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10559:139:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10693:4:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_64e750450bb175d6b36029565a76cfdd9f3db1674ca2e6227613cb2e709a5ba5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10567:124:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10567:131:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10559:4:133"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_64e750450bb175d6b36029565a76cfdd9f3db1674ca2e6227613cb2e709a5ba5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10437:9:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10452:4:133",
                "type": ""
              }
            ],
            "src": "10286:419:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10739:152:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10756:1:133",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10759:77:133",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10749:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10749:88:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10749:88:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10853:1:133",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10856:4:133",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10846:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10846:15:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10846:15:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10877:1:133",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10880:4:133",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10870:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10870:15:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10870:15:133"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10711:180:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10942:149:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10952:25:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10975:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10957:17:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10957:20:133"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10952:1:133"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10986:25:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11009:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10991:17:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10991:20:133"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10986:1:133"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11020:17:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11032:1:133"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11035:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11028:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11028:9:133"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11020:4:133"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11062:22:133",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11064:16:133"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11064:18:133"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11064:18:133"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "11053:4:133"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11059:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11050:2:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11050:11:133"
                  },
                  "nodeType": "YulIf",
                  "src": "11047:37:133"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10928:1:133",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10931:1:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10937:4:133",
                "type": ""
              }
            ],
            "src": "10897:194:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11141:147:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11151:25:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11174:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11156:17:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11156:20:133"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11151:1:133"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11185:25:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11208:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11190:17:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11190:20:133"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11185:1:133"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11219:16:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11230:1:133"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11233:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11226:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11226:9:133"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11219:3:133"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11259:22:133",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11261:16:133"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11261:18:133"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11261:18:133"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11251:1:133"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "11254:3:133"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11248:2:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11248:10:133"
                  },
                  "nodeType": "YulIf",
                  "src": "11245:36:133"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11128:1:133",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11131:1:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11137:3:133",
                "type": ""
              }
            ],
            "src": "11097:191:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11322:152:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11339:1:133",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11342:77:133",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11332:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11332:88:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11332:88:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11436:1:133",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11439:4:133",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11429:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11429:15:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11429:15:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11460:1:133",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11463:4:133",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11453:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11453:15:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11453:15:133"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "11294:180:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11514:142:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11524:25:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11547:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11529:17:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11529:20:133"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11524:1:133"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11558:25:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11581:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11563:17:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11563:20:133"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11558:1:133"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11605:22:133",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "11607:16:133"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11607:18:133"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11607:18:133"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11602:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11595:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11595:9:133"
                  },
                  "nodeType": "YulIf",
                  "src": "11592:35:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11636:14:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11645:1:133"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11648:1:133"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "11641:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11641:9:133"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11636:1:133"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11503:1:133",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11506:1:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "11512:1:133",
                "type": ""
              }
            ],
            "src": "11480:176:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11768:115:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11790:6:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11798:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11786:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11786:14:133"
                      },
                      {
                        "hexValue": "4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11802:34:133",
                        "type": "",
                        "value": "Error: a == b not satisfied [uin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11779:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11779:58:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11779:58:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11858:6:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11866:2:133",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11854:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11854:15:133"
                      },
                      {
                        "hexValue": "745d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11871:4:133",
                        "type": "",
                        "value": "t]"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11847:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11847:29:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11847:29:133"
                }
              ]
            },
            "name": "store_literal_in_memory_3bb05d3ba160a011999668447ff4a7cdd52bf87aeb1d7b9b284ef23b37a2b183",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11760:6:133",
                "type": ""
              }
            ],
            "src": "11662:221:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12035:220:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12045:74:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12111:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12116:2:133",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12052:58:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12052:67:133"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12045:3:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12217:3:133"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3bb05d3ba160a011999668447ff4a7cdd52bf87aeb1d7b9b284ef23b37a2b183",
                      "nodeType": "YulIdentifier",
                      "src": "12128:88:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12128:93:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12128:93:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12230:19:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12241:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12246:2:133",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12237:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12237:12:133"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12230:3:133"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3bb05d3ba160a011999668447ff4a7cdd52bf87aeb1d7b9b284ef23b37a2b183_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12023:3:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12031:3:133",
                "type": ""
              }
            ],
            "src": "11889:366:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12432:248:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12442:26:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12454:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12465:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12450:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12450:18:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12442:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12489:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12500:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12485:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12485:17:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12508:4:133"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12514:9:133"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12504:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12504:20:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12478:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12478:47:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12478:47:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12534:139:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12668:4:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3bb05d3ba160a011999668447ff4a7cdd52bf87aeb1d7b9b284ef23b37a2b183_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12542:124:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12542:131:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12534:4:133"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3bb05d3ba160a011999668447ff4a7cdd52bf87aeb1d7b9b284ef23b37a2b183__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12412:9:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12427:4:133",
                "type": ""
              }
            ],
            "src": "12261:419:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12792:54:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12814:6:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12822:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12810:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12810:14:133"
                      },
                      {
                        "hexValue": "20204578706563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12826:12:133",
                        "type": "",
                        "value": "  Expected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12803:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12803:36:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12803:36:133"
                }
              ]
            },
            "name": "store_literal_in_memory_42fa07d7c51ce5de92a0fc65dbf7e7800814fd01c258dc50e84d5be59184bf0b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12784:6:133",
                "type": ""
              }
            ],
            "src": "12686:160:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12998:220:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13008:74:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13074:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13079:2:133",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13015:58:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13015:67:133"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13008:3:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13180:3:133"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_42fa07d7c51ce5de92a0fc65dbf7e7800814fd01c258dc50e84d5be59184bf0b",
                      "nodeType": "YulIdentifier",
                      "src": "13091:88:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13091:93:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13091:93:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13193:19:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13204:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13209:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13200:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13200:12:133"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13193:3:133"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_42fa07d7c51ce5de92a0fc65dbf7e7800814fd01c258dc50e84d5be59184bf0b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12986:3:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12994:3:133",
                "type": ""
              }
            ],
            "src": "12852:366:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13423:330:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13433:26:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13445:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13456:2:133",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13441:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13441:18:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13433:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13480:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13491:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13476:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13476:17:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13499:4:133"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13505:9:133"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13495:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13495:20:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13469:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13469:47:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13469:47:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13525:139:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13659:4:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_42fa07d7c51ce5de92a0fc65dbf7e7800814fd01c258dc50e84d5be59184bf0b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13533:124:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13533:131:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13525:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13718:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13731:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13742:2:133",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13727:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13727:18:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13674:43:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13674:72:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13674:72:133"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_42fa07d7c51ce5de92a0fc65dbf7e7800814fd01c258dc50e84d5be59184bf0b_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13395:9:133",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13407:6:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13418:4:133",
                "type": ""
              }
            ],
            "src": "13224:529:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13865:54:133",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13887:6:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13895:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13883:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13883:14:133"
                      },
                      {
                        "hexValue": "2020202041637475616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13899:12:133",
                        "type": "",
                        "value": "    Actual"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13876:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13876:36:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13876:36:133"
                }
              ]
            },
            "name": "store_literal_in_memory_d7896f3f645b3ba89da46bf231a5df16e525e587a84bc9b284dfb39958fb219b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13857:6:133",
                "type": ""
              }
            ],
            "src": "13759:160:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14071:220:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14081:74:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14147:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14152:2:133",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14088:58:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14088:67:133"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14081:3:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14253:3:133"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d7896f3f645b3ba89da46bf231a5df16e525e587a84bc9b284dfb39958fb219b",
                      "nodeType": "YulIdentifier",
                      "src": "14164:88:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14164:93:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14164:93:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14266:19:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14277:3:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14282:2:133",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14273:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14273:12:133"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14266:3:133"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d7896f3f645b3ba89da46bf231a5df16e525e587a84bc9b284dfb39958fb219b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14059:3:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14067:3:133",
                "type": ""
              }
            ],
            "src": "13925:366:133"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14496:330:133",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14506:26:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14518:9:133"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14529:2:133",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14514:3:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14514:18:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14506:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14553:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14564:1:133",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14549:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14549:17:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14572:4:133"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14578:9:133"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14568:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14568:20:133"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14542:6:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14542:47:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14542:47:133"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14598:139:133",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14732:4:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d7896f3f645b3ba89da46bf231a5df16e525e587a84bc9b284dfb39958fb219b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14606:124:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14606:131:133"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14598:4:133"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14791:6:133"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14804:9:133"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14815:2:133",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14800:3:133"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14800:18:133"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14747:43:133"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14747:72:133"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14747:72:133"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d7896f3f645b3ba89da46bf231a5df16e525e587a84bc9b284dfb39958fb219b_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14468:9:133",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14480:6:133",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14491:4:133",
                "type": ""
              }
            ],
            "src": "14297:529:133"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e(memPtr) {\n\n        mstore(add(memPtr, 0), \"MockToken\")\n\n    }\n\n    function abi_encode_t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e(pos)\n        end := add(pos, 32)\n    }\n\n    function store_literal_in_memory_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"MT\")\n\n    }\n\n    function abi_encode_t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d(pos)\n        end := add(pos, 32)\n    }\n\n    function cleanup_t_rational_18_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_18_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_18_by_1(value)))\n    }\n\n    function abi_encode_t_rational_18_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_18_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e_t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d_t_rational_18_by_1__to_t_string_memory_ptr_t_string_memory_ptr_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e_to_t_string_memory_ptr_fromStack( tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_rational_18_by_1_to_t_uint8_fromStack(value0,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Revenue Distribution Token\")\n\n    }\n\n    function abi_encode_t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c(pos)\n        end := add(pos, 32)\n    }\n\n    function store_literal_in_memory_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452(memPtr) {\n\n        mstore(add(memPtr, 0), \"RDT\")\n\n    }\n\n    function abi_encode_t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452(pos)\n        end := add(pos, 32)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_rational_1000000000000000000000000000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1000000000000000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1000000000000000000000000000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1000000000000000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000000000000000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c_t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452_t_address_t_address_t_rational_1000000000000000000000000000000_by_1__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c_to_t_string_memory_ptr_fromStack( tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 96))\n\n        abi_encode_t_rational_1000000000000000000000000000000_by_1_to_t_uint256_fromStack(value2,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_rational_10000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_10000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_10000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_10000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_10000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_10000000_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_10000000_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_64e750450bb175d6b36029565a76cfdd9f3db1674ca2e6227613cb2e709a5ba5(memPtr) {\n\n        mstore(add(memPtr, 0), \"MAX_LESS_THAN_MIN\")\n\n    }\n\n    function abi_encode_t_stringliteral_64e750450bb175d6b36029565a76cfdd9f3db1674ca2e6227613cb2e709a5ba5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_64e750450bb175d6b36029565a76cfdd9f3db1674ca2e6227613cb2e709a5ba5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64e750450bb175d6b36029565a76cfdd9f3db1674ca2e6227613cb2e709a5ba5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64e750450bb175d6b36029565a76cfdd9f3db1674ca2e6227613cb2e709a5ba5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function store_literal_in_memory_3bb05d3ba160a011999668447ff4a7cdd52bf87aeb1d7b9b284ef23b37a2b183(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: a == b not satisfied [uin\")\n\n        mstore(add(memPtr, 32), \"t]\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bb05d3ba160a011999668447ff4a7cdd52bf87aeb1d7b9b284ef23b37a2b183_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_3bb05d3ba160a011999668447ff4a7cdd52bf87aeb1d7b9b284ef23b37a2b183(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bb05d3ba160a011999668447ff4a7cdd52bf87aeb1d7b9b284ef23b37a2b183__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bb05d3ba160a011999668447ff4a7cdd52bf87aeb1d7b9b284ef23b37a2b183_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_42fa07d7c51ce5de92a0fc65dbf7e7800814fd01c258dc50e84d5be59184bf0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"  Expected\")\n\n    }\n\n    function abi_encode_t_stringliteral_42fa07d7c51ce5de92a0fc65dbf7e7800814fd01c258dc50e84d5be59184bf0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_42fa07d7c51ce5de92a0fc65dbf7e7800814fd01c258dc50e84d5be59184bf0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_42fa07d7c51ce5de92a0fc65dbf7e7800814fd01c258dc50e84d5be59184bf0b_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_42fa07d7c51ce5de92a0fc65dbf7e7800814fd01c258dc50e84d5be59184bf0b_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_d7896f3f645b3ba89da46bf231a5df16e525e587a84bc9b284dfb39958fb219b(memPtr) {\n\n        mstore(add(memPtr, 0), \"    Actual\")\n\n    }\n\n    function abi_encode_t_stringliteral_d7896f3f645b3ba89da46bf231a5df16e525e587a84bc9b284dfb39958fb219b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_d7896f3f645b3ba89da46bf231a5df16e525e587a84bc9b284dfb39958fb219b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d7896f3f645b3ba89da46bf231a5df16e525e587a84bc9b284dfb39958fb219b_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d7896f3f645b3ba89da46bf231a5df16e525e587a84bc9b284dfb39958fb219b_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 133,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "473:1567:13:-:0;;;1596:4:118;1574:26;;;;;;;;;;;;;;;;;;;;325:42:121;314:54;;;;;;;;;;;;;;;;;;;;473:1567:13;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "473:1567:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;586:313;;;:::i;:::-;;1474:563;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;905;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1606:18:118;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1574:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;586:313:13;671:2;638:36;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;628:5;;:46;;;;;;;;;;;;;;;;;;751:4;766:5;;;;;;;;;;;774:4;694:85;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;684:7;;:95;;;;;;;;;;;;;;;;;;799:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;789:6;;:22;;;;;;;;;;;;;;;;;;821:2;;;;;;;;;;;:7;;;829:10;821:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;586:313::o;1474:563::-;1579:38;1596:11;1609:1;1612:4;1579:16;:38::i;:::-;1564:53;;1642:46;1659:11;1672:1;1675:12;1642:16;:46::i;:::-;1627:61;;1732:5;;;;;;;;;;;:10;;;1751:6;;;;;;;;;;;1760:11;1732:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1783:6;;;;;;;;;;;:20;;;1812:5;;;;;;;;;;;1828:7;;;;;;;;;;;1838:11;1783:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1860:6;;;;;;;;;;;:19;;;1888:7;;;;;;;;;;;1898:11;1860:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1921:7;;;;;;;;;;;:24;;;1946:12;1921:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:60;1979:7;;;;;;;;;;;:23;;;2003:11;1979:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2017:12;1970:8;:60::i;:::-;1474:563;;:::o;905:::-;1010:38;1027:11;1040:1;1043:4;1010:16;:38::i;:::-;995:53;;1073:46;1090:11;1103:1;1106:12;1073:16;:46::i;:::-;1058:61;;1163:5;;;;;;;;;;;:10;;;1182:6;;;;;;;;;;;1191:11;1163:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:6;;;;;;;;;;;:20;;;1243:5;;;;;;;;;;;1259:7;;;;;;;;;;;1269:11;1214:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1291:6;;;;;;;;;;;:19;;;1319:7;;;;;;;;;;;1329:11;1291:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1352:7;;;;;;;;;;;:24;;;1377:12;1352:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1401:60;1410:7;;;;;;;;;;;:23;;;1434:12;1410:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1449:11;1401:8;:60::i;:::-;905:563;;:::o;1606:18:118:-;;;;;;;;;;;;;:::o;1574:26::-;;;;;;;;;;;;:::o;3103:605:121:-;3219:14;3260:3;3253;:10;;3245:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;3307:3;3300;:10;3296:26;;3319:3;3312:10;;;;3296:26;3390:3;3385:1;:8;;:20;;;;;3402:3;3397:1;:8;;3385:20;3381:34;;;3414:1;3407:8;;;;3381:34;3491:1;3484:3;:8;:36;;;;;3503:17;3496:3;:24;3484:36;3480:50;;;3529:1;3522:8;;;;3480:50;3621:3;3615:1;3608:3;3602;:9;;;;:::i;:::-;3601:15;;;;:::i;:::-;3596:1;:21;;;;:::i;:::-;3595:29;;;;:::i;:::-;3588:36;;3103:605;;;;;;:::o;3994:262:118:-;4056:1;4051;:6;4047:203;;4078:41;;;;;;:::i;:::-;;;;;;;;4138:31;4167:1;4138:31;;;;;;:::i;:::-;;;;;;;;4188;4217:1;4188:31;;;;;;:::i;:::-;;;;;;;;4233:6;:4;:6::i;:::-;4047:203;3994:262;;:::o;1819:55::-;1863:4;1854:6;;:13;;;;;;;;;;;;;;;;;;1819:55::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;88:117:133:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:90::-;1204:7;1247:5;1240:13;1233:21;1222:32;;1170:90;;;:::o;1266:109::-;1347:21;1362:5;1347:21;:::i;:::-;1342:3;1335:34;1266:109;;:::o;1381:210::-;1468:4;1506:2;1495:9;1491:18;1483:26;;1519:65;1581:1;1570:9;1566:17;1557:6;1519:65;:::i;:::-;1381:210;;;;:::o;1597:169::-;1681:11;1715:6;1710:3;1703:19;1755:4;1750:3;1746:14;1731:29;;1597:169;;;;:::o;1772:159::-;1912:11;1908:1;1900:6;1896:14;1889:35;1772:159;:::o;1937:365::-;2079:3;2100:66;2164:1;2159:3;2100:66;:::i;:::-;2093:73;;2175:93;2264:3;2175:93;:::i;:::-;2293:2;2288:3;2284:12;2277:19;;1937:365;;;:::o;2308:152::-;2448:4;2444:1;2436:6;2432:14;2425:28;2308:152;:::o;2466:365::-;2608:3;2629:66;2693:1;2688:3;2629:66;:::i;:::-;2622:73;;2704:93;2793:3;2704:93;:::i;:::-;2822:2;2817:3;2813:12;2806:19;;2466:365;;;:::o;2837:86::-;2883:7;2912:5;2901:16;;2837:86;;;:::o;2929:::-;2964:7;3004:4;2997:5;2993:16;2982:27;;2929:86;;;:::o;3021:60::-;3049:3;3070:5;3063:12;;3021:60;;;:::o;3087:156::-;3144:9;3177:60;3193:43;3202:33;3229:5;3202:33;:::i;:::-;3193:43;:::i;:::-;3177:60;:::i;:::-;3164:73;;3087:156;;;:::o;3249:145::-;3343:44;3381:5;3343:44;:::i;:::-;3338:3;3331:57;3249:145;;:::o;3400:850::-;3702:4;3740:2;3729:9;3725:18;3717:26;;3789:9;3783:4;3779:20;3775:1;3764:9;3760:17;3753:47;3817:131;3943:4;3817:131;:::i;:::-;3809:139;;3995:9;3989:4;3985:20;3980:2;3969:9;3965:18;3958:48;4023:131;4149:4;4023:131;:::i;:::-;4015:139;;4164:79;4239:2;4228:9;4224:18;4215:6;4164:79;:::i;:::-;3400:850;;;;:::o;4256:176::-;4396:28;4392:1;4384:6;4380:14;4373:52;4256:176;:::o;4438:366::-;4580:3;4601:67;4665:2;4660:3;4601:67;:::i;:::-;4594:74;;4677:93;4766:3;4677:93;:::i;:::-;4795:2;4790:3;4786:12;4779:19;;4438:366;;;:::o;4810:153::-;4950:5;4946:1;4938:6;4934:14;4927:29;4810:153;:::o;4969:365::-;5111:3;5132:66;5196:1;5191:3;5132:66;:::i;:::-;5125:73;;5207:93;5296:3;5207:93;:::i;:::-;5325:2;5320:3;5316:12;5309:19;;4969:365;;;:::o;5340:126::-;5377:7;5417:42;5410:5;5406:54;5395:65;;5340:126;;;:::o;5472:96::-;5509:7;5538:24;5556:5;5538:24;:::i;:::-;5527:35;;5472:96;;;:::o;5574:118::-;5661:24;5679:5;5661:24;:::i;:::-;5656:3;5649:37;5574:118;;:::o;5698:115::-;5773:7;5802:5;5791:16;;5698:115;;;:::o;5819:218::-;5907:9;5940:91;5958:72;5967:62;6023:5;5967:62;:::i;:::-;5958:72;:::i;:::-;5940:91;:::i;:::-;5927:104;;5819:218;;;:::o;6043:207::-;6168:75;6237:5;6168:75;:::i;:::-;6163:3;6156:88;6043:207;;:::o;6256:1134::-;6645:4;6683:3;6672:9;6668:19;6660:27;;6733:9;6727:4;6723:20;6719:1;6708:9;6704:17;6697:47;6761:131;6887:4;6761:131;:::i;:::-;6753:139;;6939:9;6933:4;6929:20;6924:2;6913:9;6909:18;6902:48;6967:131;7093:4;6967:131;:::i;:::-;6959:139;;7108:72;7176:2;7165:9;7161:18;7152:6;7108:72;:::i;:::-;7190;7258:2;7247:9;7243:18;7234:6;7190:72;:::i;:::-;7272:111;7378:3;7367:9;7363:19;7354:6;7272:111;:::i;:::-;6256:1134;;;;;;:::o;7396:92::-;7448:7;7477:5;7466:16;;7396:92;;;:::o;7494:172::-;7559:9;7592:68;7610:49;7619:39;7652:5;7619:39;:::i;:::-;7610:49;:::i;:::-;7592:68;:::i;:::-;7579:81;;7494:172;;;:::o;7672:161::-;7774:52;7820:5;7774:52;:::i;:::-;7769:3;7762:65;7672:161;;:::o;7839:252::-;7947:4;7985:2;7974:9;7970:18;7962:26;;7998:86;8081:1;8070:9;8066:17;8057:6;7998:86;:::i;:::-;7839:252;;;;:::o;8097:118::-;8184:24;8202:5;8184:24;:::i;:::-;8179:3;8172:37;8097:118;;:::o;8221:332::-;8342:4;8380:2;8369:9;8365:18;8357:26;;8393:71;8461:1;8450:9;8446:17;8437:6;8393:71;:::i;:::-;8474:72;8542:2;8531:9;8527:18;8518:6;8474:72;:::i;:::-;8221:332;;;;;:::o;8559:442::-;8708:4;8746:2;8735:9;8731:18;8723:26;;8759:71;8827:1;8816:9;8812:17;8803:6;8759:71;:::i;:::-;8840:72;8908:2;8897:9;8893:18;8884:6;8840:72;:::i;:::-;8922;8990:2;8979:9;8975:18;8966:6;8922:72;:::i;:::-;8559:442;;;;;;:::o;9007:143::-;9064:5;9095:6;9089:13;9080:22;;9111:33;9138:5;9111:33;:::i;:::-;9007:143;;;;:::o;9156:351::-;9226:6;9275:2;9263:9;9254:7;9250:23;9246:32;9243:119;;;9281:79;;:::i;:::-;9243:119;9401:1;9426:64;9482:7;9473:6;9462:9;9458:22;9426:64;:::i;:::-;9416:74;;9372:128;9156:351;;;;:::o;9513:222::-;9606:4;9644:2;9633:9;9629:18;9621:26;;9657:71;9725:1;9714:9;9710:17;9701:6;9657:71;:::i;:::-;9513:222;;;;:::o;9741:167::-;9881:19;9877:1;9869:6;9865:14;9858:43;9741:167;:::o;9914:366::-;10056:3;10077:67;10141:2;10136:3;10077:67;:::i;:::-;10070:74;;10153:93;10242:3;10153:93;:::i;:::-;10271:2;10266:3;10262:12;10255:19;;9914:366;;;:::o;10286:419::-;10452:4;10490:2;10479:9;10475:18;10467:26;;10539:9;10533:4;10529:20;10525:1;10514:9;10510:17;10503:47;10567:131;10693:4;10567:131;:::i;:::-;10559:139;;10286:419;;;:::o;10711:180::-;10759:77;10756:1;10749:88;10856:4;10853:1;10846:15;10880:4;10877:1;10870:15;10897:194;10937:4;10957:20;10975:1;10957:20;:::i;:::-;10952:25;;10991:20;11009:1;10991:20;:::i;:::-;10986:25;;11035:1;11032;11028:9;11020:17;;11059:1;11053:4;11050:11;11047:37;;;11064:18;;:::i;:::-;11047:37;10897:194;;;;:::o;11097:191::-;11137:3;11156:20;11174:1;11156:20;:::i;:::-;11151:25;;11190:20;11208:1;11190:20;:::i;:::-;11185:25;;11233:1;11230;11226:9;11219:16;;11254:3;11251:1;11248:10;11245:36;;;11261:18;;:::i;:::-;11245:36;11097:191;;;;:::o;11294:180::-;11342:77;11339:1;11332:88;11439:4;11436:1;11429:15;11463:4;11460:1;11453:15;11480:176;11512:1;11529:20;11547:1;11529:20;:::i;:::-;11524:25;;11563:20;11581:1;11563:20;:::i;:::-;11558:25;;11602:1;11592:35;;11607:18;;:::i;:::-;11592:35;11648:1;11645;11641:9;11636:14;;11480:176;;;;:::o;11662:221::-;11802:34;11798:1;11790:6;11786:14;11779:58;11871:4;11866:2;11858:6;11854:15;11847:29;11662:221;:::o;11889:366::-;12031:3;12052:67;12116:2;12111:3;12052:67;:::i;:::-;12045:74;;12128:93;12217:3;12128:93;:::i;:::-;12246:2;12241:3;12237:12;12230:19;;11889:366;;;:::o;12261:419::-;12427:4;12465:2;12454:9;12450:18;12442:26;;12514:9;12508:4;12504:20;12500:1;12489:9;12485:17;12478:47;12542:131;12668:4;12542:131;:::i;:::-;12534:139;;12261:419;;;:::o;12686:160::-;12826:12;12822:1;12814:6;12810:14;12803:36;12686:160;:::o;12852:366::-;12994:3;13015:67;13079:2;13074:3;13015:67;:::i;:::-;13008:74;;13091:93;13180:3;13091:93;:::i;:::-;13209:2;13204:3;13200:12;13193:19;;12852:366;;;:::o;13224:529::-;13418:4;13456:2;13445:9;13441:18;13433:26;;13505:9;13499:4;13495:20;13491:1;13480:9;13476:17;13469:47;13533:131;13659:4;13533:131;:::i;:::-;13525:139;;13674:72;13742:2;13731:9;13727:18;13718:6;13674:72;:::i;:::-;13224:529;;;;:::o;13759:160::-;13899:12;13895:1;13887:6;13883:14;13876:36;13759:160;:::o;13925:366::-;14067:3;14088:67;14152:2;14147:3;14088:67;:::i;:::-;14081:74;;14164:93;14253:3;14164:93;:::i;:::-;14282:2;14277:3;14273:12;14266:19;;13925:366;;;:::o;14297:529::-;14491:4;14529:2;14518:9;14514:18;14506:26;;14578:9;14572:4;14568:20;14564:1;14553:9;14549:17;14542:47;14606:131;14732:4;14606:131;:::i;:::-;14598:139;;14747:72;14815:2;14804:9;14800:18;14791:6;14747:72;:::i;:::-;14297:529;;;;:::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.4.22 <0.9.0;\n\n\nimport { TestUtils } from \"../../modules/contract-test-utils/contracts/test.sol\";\nimport { MockERC20 } from \"../../modules/erc20/contracts/test/mocks/MockERC20.sol\";\n\nimport { MockRDT } from \"./mocks/MockRDT.sol\";\nimport { Owner }   from \"./accounts/Owner.sol\";\nimport { Staker }  from \"./accounts/Staker.sol\";\n\nimport { RevenueDistributionToken as RDT } from \"../RevenueDistributionToken.sol\";\n\ncontract ConvertViewTests is TestUtils {\n\n    MockERC20 asset;\n    MockRDT   rdToken;\n    Staker    staker;\n\n    function setUp() public virtual {\n        asset   = new MockERC20(\"MockToken\", \"MT\", 18);\n        rdToken = new MockRDT(\"Revenue Distribution Token\", \"RDT\", address(this), address(asset), 1e30);\n        staker  = new Staker();\n        vm.warp(10_000_000);  // Warp to non-zero timestamp for __setTotalAssets\n    }\n\n    function test_convertToShares(uint256 totalAssets_, uint256 mintAmount_) public {\n        totalAssets_ = constrictToRange(mintAmount_, 1, 1e29);\n        mintAmount_  = constrictToRange(mintAmount_, 1, totalAssets_);  // So totalAssets > totalSupply\n\n        asset.mint(address(staker), mintAmount_);\n\n        staker.erc20_approve(address(asset), address(rdToken), mintAmount_);\n        staker.rdToken_mint(address(rdToken), mintAmount_);\n\n        rdToken.__setTotalAssets(totalAssets_);\n\n        assertEq(rdToken.convertToShares(totalAssets_), mintAmount_);\n    }\n\n    function test_convertToAssets(uint256 totalAssets_, uint256 mintAmount_) public {\n        totalAssets_ = constrictToRange(mintAmount_, 1, 1e29);\n        mintAmount_  = constrictToRange(mintAmount_, 1, totalAssets_);  // So totalAssets > totalSupply\n\n        asset.mint(address(staker), mintAmount_);\n\n        staker.erc20_approve(address(asset), address(rdToken), mintAmount_);\n        staker.rdToken_mint(address(rdToken), mintAmount_);\n\n        rdToken.__setTotalAssets(totalAssets_);\n\n        assertEq(rdToken.convertToAssets(mintAmount_), totalAssets_);\n    }\n\n}\n\ncontract MaxViewTests is TestUtils {\n\n    MockERC20 asset;\n    MockRDT   rdToken;\n    Staker    staker;\n\n    function setUp() public virtual {\n        asset   = new MockERC20(\"MockToken\", \"MT\", 18);\n        rdToken = new MockRDT(\"Revenue Distribution Token\", \"RDT\", address(this), address(asset), 1e30);\n        staker  = new Staker();\n        vm.warp(10_000_000);  // Warp to non-zero timestamp for __setTotalAssets\n    }\n\n    function test_maxDeposit(address receiver_) public {\n        assertEq(rdToken.maxDeposit(receiver_), type(uint256).max);\n    }\n\n    function test_maxMint(address receiver_) public {\n        assertEq(rdToken.maxMint(receiver_), type(uint256).max);\n    }\n\n    function test_maxRedeem(uint256 totalAssets_, uint256 mintAmount_) public {\n        totalAssets_ = constrictToRange(mintAmount_, 1, 1e29);\n        mintAmount_  = constrictToRange(mintAmount_, 1, totalAssets_);  // So totalAssets > totalSupply\n\n        asset.mint(address(staker), mintAmount_);\n\n        staker.erc20_approve(address(asset), address(rdToken), mintAmount_);\n        staker.rdToken_mint(address(rdToken), mintAmount_);\n\n        rdToken.__setTotalAssets(totalAssets_);\n\n        assertEq(rdToken.maxRedeem(address(staker)), mintAmount_);\n    }\n\n    function test_maxWithdraw(uint256 totalAssets_, uint256 mintAmount_) public {\n        totalAssets_ = constrictToRange(mintAmount_, 1, 1e29);\n        mintAmount_  = constrictToRange(mintAmount_, 1, totalAssets_);  // So totalAssets > totalSupply\n\n        asset.mint(address(staker), mintAmount_);\n\n        staker.erc20_approve(address(asset), address(rdToken), mintAmount_);\n        staker.rdToken_mint(address(rdToken), mintAmount_);\n\n        rdToken.__setTotalAssets(totalAssets_);\n\n        assertEq(rdToken.maxWithdraw(address(staker)), totalAssets_);\n    }\n\n}\n\ncontract PreviewViewTests is TestUtils {\n\n    MockERC20 asset;\n    MockRDT   rdToken;\n    Staker    staker;\n\n    function setUp() public virtual {\n        asset   = new MockERC20(\"MockToken\", \"MT\", 18);\n        rdToken = new MockRDT(\"Revenue Distribution Token\", \"RDT\", address(this), address(asset), 1e30);\n        staker  = new Staker();\n        vm.warp(10_000_000);  // Warp to non-zero timestamp for __setTotalAssets\n    }\n\n    function test_previewDeposit(uint256 totalAssets_, uint256 mintAmount_) public {\n        totalAssets_ = constrictToRange(mintAmount_, 1, 1e29);\n        mintAmount_  = constrictToRange(mintAmount_, 1, totalAssets_);  // So totalAssets > totalSupply\n\n        asset.mint(address(staker), mintAmount_);\n\n        staker.erc20_approve(address(asset), address(rdToken), mintAmount_);\n        staker.rdToken_mint(address(rdToken), mintAmount_);\n\n        rdToken.__setTotalAssets(totalAssets_);\n\n        assertEq(rdToken.previewDeposit(totalAssets_), mintAmount_);\n    }\n\n    function test_previewMint(uint256 totalAssets_, uint256 mintAmount_) public {\n        totalAssets_ = constrictToRange(mintAmount_, 1, 1e29);\n        mintAmount_  = constrictToRange(mintAmount_, 1, totalAssets_);  // So totalAssets > totalSupply\n\n        asset.mint(address(staker), mintAmount_);\n\n        staker.erc20_approve(address(asset), address(rdToken), mintAmount_);\n        staker.rdToken_mint(address(rdToken), mintAmount_);\n\n        rdToken.__setTotalAssets(totalAssets_);\n\n        assertEq(rdToken.previewMint(mintAmount_), totalAssets_);\n    }\n\n}\n\n// TODO: test totalAssets\n",
  "sourcePath": "/Users/mdoshi/wyta/contracts/test/RDTGetters.t.sol",
  "ast": {
    "absolutePath": "project:/contracts/test/RDTGetters.t.sol",
    "exportedSymbols": {
      "ConvertViewTests": [
        1992
      ],
      "MaxViewTests": [
        2235
      ],
      "MockERC20": [
        37164
      ],
      "MockRDT": [
        23025
      ],
      "Owner": [
        22010
      ],
      "PreviewViewTests": [
        2436
      ],
      "RDT": [
        953
      ],
      "Staker": [
        22351
      ],
      "TestUtils": [
        33937
      ]
    },
    "id": 2437,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1779,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:32:13"
      },
      {
        "absolutePath": "project:/modules/contract-test-utils/contracts/test.sol",
        "file": "../../modules/contract-test-utils/contracts/test.sol",
        "id": 1781,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 34133,
        "src": "77:81:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1780,
              "name": "TestUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33937,
              "src": "86:9:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/modules/erc20/contracts/test/mocks/MockERC20.sol",
        "file": "../../modules/erc20/contracts/test/mocks/MockERC20.sol",
        "id": 1783,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 37165,
        "src": "159:83:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1782,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37164,
              "src": "168:9:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/test/mocks/MockRDT.sol",
        "file": "./mocks/MockRDT.sol",
        "id": 1785,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 23026,
        "src": "244:46:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1784,
              "name": "MockRDT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23025,
              "src": "253:7:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/test/accounts/Owner.sol",
        "file": "./accounts/Owner.sol",
        "id": 1787,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 22145,
        "src": "291:47:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1786,
              "name": "Owner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22010,
              "src": "300:5:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/test/accounts/Staker.sol",
        "file": "./accounts/Staker.sol",
        "id": 1789,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 22701,
        "src": "339:48:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1788,
              "name": "Staker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22351,
              "src": "348:6:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RevenueDistributionToken.sol",
        "file": "../RevenueDistributionToken.sol",
        "id": 1791,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2437,
        "sourceUnit": 954,
        "src": "389:82:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1790,
              "name": "RevenueDistributionToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 953,
              "src": "398:24:13",
              "typeDescriptions": {}
            },
            "local": "RDT",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1792,
              "name": "TestUtils",
              "nameLocations": [
                "502:9:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33937,
              "src": "502:9:13"
            },
            "id": 1793,
            "nodeType": "InheritanceSpecifier",
            "src": "502:9:13"
          }
        ],
        "canonicalName": "ConvertViewTests",
        "contractDependencies": [
          22351,
          23025,
          37164
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1992,
        "linearizedBaseContracts": [
          1992,
          33937,
          25044
        ],
        "name": "ConvertViewTests",
        "nameLocation": "482:16:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1796,
            "mutability": "mutable",
            "name": "asset",
            "nameLocation": "529:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 1992,
            "src": "519:15:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$37164",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 1795,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1794,
                "name": "MockERC20",
                "nameLocations": [
                  "519:9:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37164,
                "src": "519:9:13"
              },
              "referencedDeclaration": 37164,
              "src": "519:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$37164",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1799,
            "mutability": "mutable",
            "name": "rdToken",
            "nameLocation": "550:7:13",
            "nodeType": "VariableDeclaration",
            "scope": 1992,
            "src": "540:17:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockRDT_$23025",
              "typeString": "contract MockRDT"
            },
            "typeName": {
              "id": 1798,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1797,
                "name": "MockRDT",
                "nameLocations": [
                  "540:7:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23025,
                "src": "540:7:13"
              },
              "referencedDeclaration": 23025,
              "src": "540:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockRDT_$23025",
                "typeString": "contract MockRDT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1802,
            "mutability": "mutable",
            "name": "staker",
            "nameLocation": "573:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 1992,
            "src": "563:16:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Staker_$22351",
              "typeString": "contract Staker"
            },
            "typeName": {
              "id": 1801,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1800,
                "name": "Staker",
                "nameLocations": [
                  "563:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22351,
                "src": "563:6:13"
              },
              "referencedDeclaration": 22351,
              "src": "563:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staker_$22351",
                "typeString": "contract Staker"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1846,
              "nodeType": "Block",
              "src": "618:281:13",
              "statements": [
                {
                  "expression": {
                    "id": 1813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1805,
                      "name": "asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1796,
                      "src": "628:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$37164",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4d6f636b546f6b656e",
                          "id": 1809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "652:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e",
                            "typeString": "literal_string \"MockToken\""
                          },
                          "value": "MockToken"
                        },
                        {
                          "hexValue": "4d54",
                          "id": 1810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "665:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d",
                            "typeString": "literal_string \"MT\""
                          },
                          "value": "MT"
                        },
                        {
                          "hexValue": "3138",
                          "id": 1811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "671:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e",
                            "typeString": "literal_string \"MockToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d",
                            "typeString": "literal_string \"MT\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 1808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "638:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$37164_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 1807,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1806,
                            "name": "MockERC20",
                            "nameLocations": [
                              "642:9:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 37164,
                            "src": "642:9:13"
                          },
                          "referencedDeclaration": 37164,
                          "src": "642:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$37164",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 1812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "638:36:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$37164",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "628:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$37164",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 1814,
                  "nodeType": "ExpressionStatement",
                  "src": "628:46:13"
                },
                {
                  "expression": {
                    "id": 1831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1815,
                      "name": "rdToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1799,
                      "src": "684:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockRDT_$23025",
                        "typeString": "contract MockRDT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "526576656e756520446973747269627574696f6e20546f6b656e",
                          "id": 1819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "706:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c",
                            "typeString": "literal_string \"Revenue Distribution Token\""
                          },
                          "value": "Revenue Distribution Token"
                        },
                        {
                          "hexValue": "524454",
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "736:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452",
                            "typeString": "literal_string \"RDT\""
                          },
                          "value": "RDT"
                        },
                        {
                          "arguments": [
                            {
                              "id": 1823,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "751:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConvertViewTests_$1992",
                                "typeString": "contract ConvertViewTests"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ConvertViewTests_$1992",
                                "typeString": "contract ConvertViewTests"
                              }
                            ],
                            "id": 1822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "743:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1821,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "743:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "743:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 1827,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1796,
                              "src": "766:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$37164",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$37164",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 1826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "758:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1825,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "758:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "758:14:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31653330",
                          "id": 1829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "774:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000000000000"
                          },
                          "value": "1e30"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c",
                            "typeString": "literal_string \"Revenue Distribution Token\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452",
                            "typeString": "literal_string \"RDT\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000000000000"
                          }
                        ],
                        "id": 1818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "694:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_MockRDT_$23025_$",
                          "typeString": "function (string memory,string memory,address,address,uint256) returns (contract MockRDT)"
                        },
                        "typeName": {
                          "id": 1817,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1816,
                            "name": "MockRDT",
                            "nameLocations": [
                              "698:7:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23025,
                            "src": "698:7:13"
                          },
                          "referencedDeclaration": 23025,
                          "src": "698:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockRDT_$23025",
                            "typeString": "contract MockRDT"
                          }
                        }
                      },
                      "id": 1830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "694:85:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockRDT_$23025",
                        "typeString": "contract MockRDT"
                      }
                    },
                    "src": "684:95:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockRDT_$23025",
                      "typeString": "contract MockRDT"
                    }
                  },
                  "id": 1832,
                  "nodeType": "ExpressionStatement",
                  "src": "684:95:13"
                },
                {
                  "expression": {
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1833,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1802,
                      "src": "789:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Staker_$22351",
                        "typeString": "contract Staker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "799:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Staker_$22351_$",
                          "typeString": "function () returns (contract Staker)"
                        },
                        "typeName": {
                          "id": 1835,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1834,
                            "name": "Staker",
                            "nameLocations": [
                              "803:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 22351,
                            "src": "803:6:13"
                          },
                          "referencedDeclaration": 22351,
                          "src": "803:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Staker_$22351",
                            "typeString": "contract Staker"
                          }
                        }
                      },
                      "id": 1837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "799:12:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Staker_$22351",
                        "typeString": "contract Staker"
                      }
                    },
                    "src": "789:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Staker_$22351",
                      "typeString": "contract Staker"
                    }
                  },
                  "id": 1839,
                  "nodeType": "ExpressionStatement",
                  "src": "789:22:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31305f3030305f303030",
                        "id": 1843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "829:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000_by_1",
                          "typeString": "int_const 10000000"
                        },
                        "value": "10_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000_by_1",
                          "typeString": "int_const 10000000"
                        }
                      ],
                      "expression": {
                        "id": 1840,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33420,
                        "src": "821:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$25333",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 1842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "824:4:13",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25059,
                      "src": "821:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "821:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1845,
                  "nodeType": "ExpressionStatement",
                  "src": "821:19:13"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 1847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "595:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:2:13"
            },
            "returnParameters": {
              "id": 1804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:0:13"
            },
            "scope": 1992,
            "src": "586:313:13",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1918,
              "nodeType": "Block",
              "src": "985:483:13",
              "statements": [
                {
                  "expression": {
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1854,
                      "name": "totalAssets_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1849,
                      "src": "995:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1856,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1851,
                          "src": "1027:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1040:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31653239",
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1043:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          },
                          "value": "1e29"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          }
                        ],
                        "id": 1855,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "1010:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1010:38:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "995:53:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1861,
                  "nodeType": "ExpressionStatement",
                  "src": "995:53:13"
                },
                {
                  "expression": {
                    "id": 1868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1862,
                      "name": "mintAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "1058:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1864,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1851,
                          "src": "1090:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 1865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1103:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1866,
                          "name": "totalAssets_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "1106:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1863,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "1073:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1073:46:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1058:61:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1869,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:61:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1875,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "1182:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          ],
                          "id": 1874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1174:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1873,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1174:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1174:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1877,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1851,
                        "src": "1191:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1870,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1796,
                        "src": "1163:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$37164",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 1872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1169:4:13",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37150,
                      "src": "1163:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:40:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1879,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:40:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1885,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1796,
                            "src": "1243:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1235:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1883,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1235:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1235:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1889,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1799,
                            "src": "1259:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1251:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1887,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1251:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1251:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1891,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1851,
                        "src": "1269:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1880,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1802,
                        "src": "1214:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 1882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1221:13:13",
                      "memberName": "erc20_approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37039,
                      "src": "1214:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:67:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1893,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:67:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1899,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1799,
                            "src": "1319:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 1898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1311:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1897,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1311:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1311:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1901,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1851,
                        "src": "1329:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1894,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1802,
                        "src": "1291:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 1896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1298:12:13",
                      "memberName": "rdToken_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22224,
                      "src": "1291:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 1902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:50:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1903,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:50:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1907,
                        "name": "totalAssets_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1849,
                        "src": "1377:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1904,
                        "name": "rdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1799,
                        "src": "1352:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockRDT_$23025",
                          "typeString": "contract MockRDT"
                        }
                      },
                      "id": 1906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1360:16:13",
                      "memberName": "__setTotalAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23024,
                      "src": "1352:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1352:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1909,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:38:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1913,
                            "name": "totalAssets_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1849,
                            "src": "1434:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1911,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1799,
                            "src": "1410:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          },
                          "id": 1912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1418:15:13",
                          "memberName": "convertToShares",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 723,
                          "src": "1410:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 1914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1410:37:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1915,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1851,
                        "src": "1449:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1910,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23578,
                        23603,
                        23633,
                        23658,
                        23717,
                        23742,
                        23772,
                        23797,
                        24897,
                        24932
                      ],
                      "referencedDeclaration": 23772,
                      "src": "1401:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1401:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1917,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:60:13"
                }
              ]
            },
            "functionSelector": "78e2cab4",
            "id": 1919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_convertToShares",
            "nameLocation": "914:20:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1849,
                  "mutability": "mutable",
                  "name": "totalAssets_",
                  "nameLocation": "943:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "935:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "mintAmount_",
                  "nameLocation": "965:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "957:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "934:43:13"
            },
            "returnParameters": {
              "id": 1853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:0:13"
            },
            "scope": 1992,
            "src": "905:563:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1990,
              "nodeType": "Block",
              "src": "1554:483:13",
              "statements": [
                {
                  "expression": {
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1926,
                      "name": "totalAssets_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1921,
                      "src": "1564:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1928,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1923,
                          "src": "1596:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1609:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31653239",
                          "id": 1930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1612:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          },
                          "value": "1e29"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          }
                        ],
                        "id": 1927,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "1579:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1579:38:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1564:53:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1933,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:53:13"
                },
                {
                  "expression": {
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1934,
                      "name": "mintAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1923,
                      "src": "1627:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1936,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1923,
                          "src": "1659:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 1937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1672:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1938,
                          "name": "totalAssets_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1921,
                          "src": "1675:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1935,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "1642:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1642:46:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1627:61:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1941,
                  "nodeType": "ExpressionStatement",
                  "src": "1627:61:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1947,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1802,
                            "src": "1751:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          ],
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1743:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1945,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1743:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1743:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1949,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1923,
                        "src": "1760:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1942,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1796,
                        "src": "1732:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$37164",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 1944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1738:4:13",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37150,
                      "src": "1732:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1732:40:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1951,
                  "nodeType": "ExpressionStatement",
                  "src": "1732:40:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1957,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1796,
                            "src": "1812:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 1956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1804:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1955,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1804:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1804:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1961,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1799,
                            "src": "1828:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 1960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1820:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1959,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1820:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1820:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1963,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1923,
                        "src": "1838:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1952,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1802,
                        "src": "1783:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 1954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1790:13:13",
                      "memberName": "erc20_approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37039,
                      "src": "1783:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1783:67:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1965,
                  "nodeType": "ExpressionStatement",
                  "src": "1783:67:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1971,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1799,
                            "src": "1888:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 1970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1880:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1969,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1880:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1880:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1973,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1923,
                        "src": "1898:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1966,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1802,
                        "src": "1860:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1867:12:13",
                      "memberName": "rdToken_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22224,
                      "src": "1860:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1860:50:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1975,
                  "nodeType": "ExpressionStatement",
                  "src": "1860:50:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1979,
                        "name": "totalAssets_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "1946:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1976,
                        "name": "rdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1799,
                        "src": "1921:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockRDT_$23025",
                          "typeString": "contract MockRDT"
                        }
                      },
                      "id": 1978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1929:16:13",
                      "memberName": "__setTotalAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23024,
                      "src": "1921:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1981,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:38:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1985,
                            "name": "mintAmount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1923,
                            "src": "2003:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1983,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1799,
                            "src": "1979:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          },
                          "id": 1984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1987:15:13",
                          "memberName": "convertToAssets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 695,
                          "src": "1979:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1979:36:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1987,
                        "name": "totalAssets_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "2017:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1982,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23578,
                        23603,
                        23633,
                        23658,
                        23717,
                        23742,
                        23772,
                        23797,
                        24897,
                        24932
                      ],
                      "referencedDeclaration": 23772,
                      "src": "1970:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:60:13"
                }
              ]
            },
            "functionSelector": "108201c2",
            "id": 1991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_convertToAssets",
            "nameLocation": "1483:20:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1921,
                  "mutability": "mutable",
                  "name": "totalAssets_",
                  "nameLocation": "1512:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "1504:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1504:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1923,
                  "mutability": "mutable",
                  "name": "mintAmount_",
                  "nameLocation": "1534:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "1526:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1503:43:13"
            },
            "returnParameters": {
              "id": 1925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1554:0:13"
            },
            "scope": 1992,
            "src": "1474:563:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2437,
        "src": "473:1567:13",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1993,
              "name": "TestUtils",
              "nameLocations": [
                "2067:9:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33937,
              "src": "2067:9:13"
            },
            "id": 1994,
            "nodeType": "InheritanceSpecifier",
            "src": "2067:9:13"
          }
        ],
        "canonicalName": "MaxViewTests",
        "contractDependencies": [
          22351,
          23025,
          37164
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2235,
        "linearizedBaseContracts": [
          2235,
          33937,
          25044
        ],
        "name": "MaxViewTests",
        "nameLocation": "2051:12:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1997,
            "mutability": "mutable",
            "name": "asset",
            "nameLocation": "2094:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 2235,
            "src": "2084:15:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$37164",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 1996,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1995,
                "name": "MockERC20",
                "nameLocations": [
                  "2084:9:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37164,
                "src": "2084:9:13"
              },
              "referencedDeclaration": 37164,
              "src": "2084:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$37164",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2000,
            "mutability": "mutable",
            "name": "rdToken",
            "nameLocation": "2115:7:13",
            "nodeType": "VariableDeclaration",
            "scope": 2235,
            "src": "2105:17:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockRDT_$23025",
              "typeString": "contract MockRDT"
            },
            "typeName": {
              "id": 1999,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1998,
                "name": "MockRDT",
                "nameLocations": [
                  "2105:7:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23025,
                "src": "2105:7:13"
              },
              "referencedDeclaration": 23025,
              "src": "2105:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockRDT_$23025",
                "typeString": "contract MockRDT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2003,
            "mutability": "mutable",
            "name": "staker",
            "nameLocation": "2138:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 2235,
            "src": "2128:16:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Staker_$22351",
              "typeString": "contract Staker"
            },
            "typeName": {
              "id": 2002,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2001,
                "name": "Staker",
                "nameLocations": [
                  "2128:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22351,
                "src": "2128:6:13"
              },
              "referencedDeclaration": 22351,
              "src": "2128:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staker_$22351",
                "typeString": "contract Staker"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2047,
              "nodeType": "Block",
              "src": "2183:281:13",
              "statements": [
                {
                  "expression": {
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2006,
                      "name": "asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1997,
                      "src": "2193:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$37164",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4d6f636b546f6b656e",
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2217:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e",
                            "typeString": "literal_string \"MockToken\""
                          },
                          "value": "MockToken"
                        },
                        {
                          "hexValue": "4d54",
                          "id": 2011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2230:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d",
                            "typeString": "literal_string \"MT\""
                          },
                          "value": "MT"
                        },
                        {
                          "hexValue": "3138",
                          "id": 2012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2236:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e",
                            "typeString": "literal_string \"MockToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d",
                            "typeString": "literal_string \"MT\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 2009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2203:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$37164_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 2008,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2007,
                            "name": "MockERC20",
                            "nameLocations": [
                              "2207:9:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 37164,
                            "src": "2207:9:13"
                          },
                          "referencedDeclaration": 37164,
                          "src": "2207:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$37164",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2203:36:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$37164",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "2193:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$37164",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 2015,
                  "nodeType": "ExpressionStatement",
                  "src": "2193:46:13"
                },
                {
                  "expression": {
                    "id": 2032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2016,
                      "name": "rdToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2000,
                      "src": "2249:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockRDT_$23025",
                        "typeString": "contract MockRDT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "526576656e756520446973747269627574696f6e20546f6b656e",
                          "id": 2020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2271:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c",
                            "typeString": "literal_string \"Revenue Distribution Token\""
                          },
                          "value": "Revenue Distribution Token"
                        },
                        {
                          "hexValue": "524454",
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2301:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452",
                            "typeString": "literal_string \"RDT\""
                          },
                          "value": "RDT"
                        },
                        {
                          "arguments": [
                            {
                              "id": 2024,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2316:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MaxViewTests_$2235",
                                "typeString": "contract MaxViewTests"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MaxViewTests_$2235",
                                "typeString": "contract MaxViewTests"
                              }
                            ],
                            "id": 2023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2308:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2022,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2308:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2308:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2028,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1997,
                              "src": "2331:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$37164",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$37164",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 2027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2323:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2026,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2323:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2323:14:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31653330",
                          "id": 2030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2339:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000000000000"
                          },
                          "value": "1e30"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c",
                            "typeString": "literal_string \"Revenue Distribution Token\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452",
                            "typeString": "literal_string \"RDT\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000000000000"
                          }
                        ],
                        "id": 2019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2259:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_MockRDT_$23025_$",
                          "typeString": "function (string memory,string memory,address,address,uint256) returns (contract MockRDT)"
                        },
                        "typeName": {
                          "id": 2018,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2017,
                            "name": "MockRDT",
                            "nameLocations": [
                              "2263:7:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23025,
                            "src": "2263:7:13"
                          },
                          "referencedDeclaration": 23025,
                          "src": "2263:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockRDT_$23025",
                            "typeString": "contract MockRDT"
                          }
                        }
                      },
                      "id": 2031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2259:85:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockRDT_$23025",
                        "typeString": "contract MockRDT"
                      }
                    },
                    "src": "2249:95:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockRDT_$23025",
                      "typeString": "contract MockRDT"
                    }
                  },
                  "id": 2033,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:95:13"
                },
                {
                  "expression": {
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2034,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2003,
                      "src": "2354:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Staker_$22351",
                        "typeString": "contract Staker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2364:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Staker_$22351_$",
                          "typeString": "function () returns (contract Staker)"
                        },
                        "typeName": {
                          "id": 2036,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2035,
                            "name": "Staker",
                            "nameLocations": [
                              "2368:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 22351,
                            "src": "2368:6:13"
                          },
                          "referencedDeclaration": 22351,
                          "src": "2368:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Staker_$22351",
                            "typeString": "contract Staker"
                          }
                        }
                      },
                      "id": 2038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2364:12:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Staker_$22351",
                        "typeString": "contract Staker"
                      }
                    },
                    "src": "2354:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Staker_$22351",
                      "typeString": "contract Staker"
                    }
                  },
                  "id": 2040,
                  "nodeType": "ExpressionStatement",
                  "src": "2354:22:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31305f3030305f303030",
                        "id": 2044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2394:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000_by_1",
                          "typeString": "int_const 10000000"
                        },
                        "value": "10_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000_by_1",
                          "typeString": "int_const 10000000"
                        }
                      ],
                      "expression": {
                        "id": 2041,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33420,
                        "src": "2386:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$25333",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2389:4:13",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25059,
                      "src": "2386:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2386:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2046,
                  "nodeType": "ExpressionStatement",
                  "src": "2386:19:13"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 2048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2160:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2165:2:13"
            },
            "returnParameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2183:0:13"
            },
            "scope": 2235,
            "src": "2151:313:13",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2065,
              "nodeType": "Block",
              "src": "2521:75:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2056,
                            "name": "receiver_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "2559:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2054,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "2540:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          },
                          "id": 2055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2548:10:13",
                          "memberName": "maxDeposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 742,
                          "src": "2540:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) pure external returns (uint256)"
                          }
                        },
                        "id": 2057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2540:29:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2576:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2059,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2576:7:13",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 2058,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2571:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2571:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 2062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2585:3:13",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2571:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2053,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23578,
                        23603,
                        23633,
                        23658,
                        23717,
                        23742,
                        23772,
                        23797,
                        24897,
                        24932
                      ],
                      "referencedDeclaration": 23772,
                      "src": "2531:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2531:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2064,
                  "nodeType": "ExpressionStatement",
                  "src": "2531:58:13"
                }
              ]
            },
            "functionSelector": "da90f866",
            "id": 2066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_maxDeposit",
            "nameLocation": "2479:15:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2050,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "2503:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2066,
                  "src": "2495:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2494:19:13"
            },
            "returnParameters": {
              "id": 2052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2521:0:13"
            },
            "scope": 2235,
            "src": "2470:126:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2083,
              "nodeType": "Block",
              "src": "2650:72:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2074,
                            "name": "receiver_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2068,
                            "src": "2685:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2072,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "2669:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          },
                          "id": 2073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2677:7:13",
                          "memberName": "maxMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 761,
                          "src": "2669:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) pure external returns (uint256)"
                          }
                        },
                        "id": 2075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2669:26:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2702:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2077,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2702:7:13",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 2076,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2697:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2697:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2711:3:13",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2697:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2071,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23578,
                        23603,
                        23633,
                        23658,
                        23717,
                        23742,
                        23772,
                        23797,
                        24897,
                        24932
                      ],
                      "referencedDeclaration": 23772,
                      "src": "2660:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2660:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2082,
                  "nodeType": "ExpressionStatement",
                  "src": "2660:55:13"
                }
              ]
            },
            "functionSelector": "40900224",
            "id": 2084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_maxMint",
            "nameLocation": "2611:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2068,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "2632:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2084,
                  "src": "2624:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2624:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2623:19:13"
            },
            "returnParameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2650:0:13"
            },
            "scope": 2235,
            "src": "2602:120:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2158,
              "nodeType": "Block",
              "src": "2802:480:13",
              "statements": [
                {
                  "expression": {
                    "id": 2097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2091,
                      "name": "totalAssets_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2086,
                      "src": "2812:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2093,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2088,
                          "src": "2844:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 2094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2857:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31653239",
                          "id": 2095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2860:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          },
                          "value": "1e29"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          }
                        ],
                        "id": 2092,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "2827:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2827:38:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2812:53:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2098,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:53:13"
                },
                {
                  "expression": {
                    "id": 2105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2099,
                      "name": "mintAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2088,
                      "src": "2875:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2101,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2088,
                          "src": "2907:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 2102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2920:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 2103,
                          "name": "totalAssets_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2086,
                          "src": "2923:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2100,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "2890:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2890:46:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2875:61:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2106,
                  "nodeType": "ExpressionStatement",
                  "src": "2875:61:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2112,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2003,
                            "src": "2999:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          ],
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2991:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2991:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2991:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2114,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2088,
                        "src": "3008:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2107,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1997,
                        "src": "2980:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$37164",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2986:4:13",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37150,
                      "src": "2980:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2980:40:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2116,
                  "nodeType": "ExpressionStatement",
                  "src": "2980:40:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2122,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1997,
                            "src": "3060:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 2121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3052:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3052:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3052:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2126,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "3076:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 2125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3068:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3068:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3068:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2128,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2088,
                        "src": "3086:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2117,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2003,
                        "src": "3031:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 2119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3038:13:13",
                      "memberName": "erc20_approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37039,
                      "src": "3031:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3031:67:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "3031:67:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2136,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "3136:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3128:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2134,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3128:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3128:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2138,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2088,
                        "src": "3146:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2131,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2003,
                        "src": "3108:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 2133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3115:12:13",
                      "memberName": "rdToken_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22224,
                      "src": "3108:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 2139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3108:50:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2140,
                  "nodeType": "ExpressionStatement",
                  "src": "3108:50:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2144,
                        "name": "totalAssets_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2086,
                        "src": "3194:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2141,
                        "name": "rdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2000,
                        "src": "3169:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockRDT_$23025",
                          "typeString": "contract MockRDT"
                        }
                      },
                      "id": 2143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3177:16:13",
                      "memberName": "__setTotalAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23024,
                      "src": "3169:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3169:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2146,
                  "nodeType": "ExpressionStatement",
                  "src": "3169:38:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2152,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2003,
                                "src": "3253:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Staker_$22351",
                                  "typeString": "contract Staker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Staker_$22351",
                                  "typeString": "contract Staker"
                                }
                              ],
                              "id": 2151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3245:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2150,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3245:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3245:15:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2148,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "3227:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          },
                          "id": 2149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3235:9:13",
                          "memberName": "maxRedeem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 776,
                          "src": "3227:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3227:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2155,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2088,
                        "src": "3263:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2147,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23578,
                        23603,
                        23633,
                        23658,
                        23717,
                        23742,
                        23772,
                        23797,
                        24897,
                        24932
                      ],
                      "referencedDeclaration": 23772,
                      "src": "3218:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3218:57:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2157,
                  "nodeType": "ExpressionStatement",
                  "src": "3218:57:13"
                }
              ]
            },
            "functionSelector": "7e1582b0",
            "id": 2159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_maxRedeem",
            "nameLocation": "2737:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "totalAssets_",
                  "nameLocation": "2760:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2159,
                  "src": "2752:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "mintAmount_",
                  "nameLocation": "2782:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2159,
                  "src": "2774:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2751:43:13"
            },
            "returnParameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2802:0:13"
            },
            "scope": 2235,
            "src": "2728:554:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2233,
              "nodeType": "Block",
              "src": "3364:483:13",
              "statements": [
                {
                  "expression": {
                    "id": 2172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2166,
                      "name": "totalAssets_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2161,
                      "src": "3374:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2168,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2163,
                          "src": "3406:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 2169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3419:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31653239",
                          "id": 2170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3422:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          },
                          "value": "1e29"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          }
                        ],
                        "id": 2167,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "3389:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3389:38:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3374:53:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2173,
                  "nodeType": "ExpressionStatement",
                  "src": "3374:53:13"
                },
                {
                  "expression": {
                    "id": 2180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2174,
                      "name": "mintAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2163,
                      "src": "3437:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2176,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2163,
                          "src": "3469:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3482:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 2178,
                          "name": "totalAssets_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2161,
                          "src": "3485:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2175,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "3452:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3452:46:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3437:61:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2181,
                  "nodeType": "ExpressionStatement",
                  "src": "3437:61:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2187,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2003,
                            "src": "3561:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          ],
                          "id": 2186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3553:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2185,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3553:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3553:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2189,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2163,
                        "src": "3570:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2182,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1997,
                        "src": "3542:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$37164",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3548:4:13",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37150,
                      "src": "3542:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3542:40:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2191,
                  "nodeType": "ExpressionStatement",
                  "src": "3542:40:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2197,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1997,
                            "src": "3622:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 2196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3614:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3614:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3614:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2201,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "3638:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3630:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2199,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3630:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3630:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2203,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2163,
                        "src": "3648:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2192,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2003,
                        "src": "3593:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 2194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3600:13:13",
                      "memberName": "erc20_approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37039,
                      "src": "3593:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3593:67:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2205,
                  "nodeType": "ExpressionStatement",
                  "src": "3593:67:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2211,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "3698:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 2210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3690:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2209,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3690:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3690:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2213,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2163,
                        "src": "3708:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2206,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2003,
                        "src": "3670:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 2208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3677:12:13",
                      "memberName": "rdToken_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22224,
                      "src": "3670:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 2214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3670:50:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2215,
                  "nodeType": "ExpressionStatement",
                  "src": "3670:50:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2219,
                        "name": "totalAssets_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2161,
                        "src": "3756:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2216,
                        "name": "rdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2000,
                        "src": "3731:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockRDT_$23025",
                          "typeString": "contract MockRDT"
                        }
                      },
                      "id": 2218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3739:16:13",
                      "memberName": "__setTotalAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23024,
                      "src": "3731:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3731:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2221,
                  "nodeType": "ExpressionStatement",
                  "src": "3731:38:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2227,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2003,
                                "src": "3817:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Staker_$22351",
                                  "typeString": "contract Staker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Staker_$22351",
                                  "typeString": "contract Staker"
                                }
                              ],
                              "id": 2226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3809:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2225,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3809:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3809:15:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2223,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "3789:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          },
                          "id": 2224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3797:11:13",
                          "memberName": "maxWithdraw",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 791,
                          "src": "3789:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3789:36:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2230,
                        "name": "totalAssets_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2161,
                        "src": "3827:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2222,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23578,
                        23603,
                        23633,
                        23658,
                        23717,
                        23742,
                        23772,
                        23797,
                        24897,
                        24932
                      ],
                      "referencedDeclaration": 23772,
                      "src": "3780:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2232,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:60:13"
                }
              ]
            },
            "functionSelector": "33c2635a",
            "id": 2234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_maxWithdraw",
            "nameLocation": "3297:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2161,
                  "mutability": "mutable",
                  "name": "totalAssets_",
                  "nameLocation": "3322:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2234,
                  "src": "3314:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3314:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2163,
                  "mutability": "mutable",
                  "name": "mintAmount_",
                  "nameLocation": "3344:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2234,
                  "src": "3336:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3336:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3313:43:13"
            },
            "returnParameters": {
              "id": 2165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3364:0:13"
            },
            "scope": 2235,
            "src": "3288:559:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2437,
        "src": "2042:1808:13",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2236,
              "name": "TestUtils",
              "nameLocations": [
                "3881:9:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33937,
              "src": "3881:9:13"
            },
            "id": 2237,
            "nodeType": "InheritanceSpecifier",
            "src": "3881:9:13"
          }
        ],
        "canonicalName": "PreviewViewTests",
        "contractDependencies": [
          22351,
          23025,
          37164
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2436,
        "linearizedBaseContracts": [
          2436,
          33937,
          25044
        ],
        "name": "PreviewViewTests",
        "nameLocation": "3861:16:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2240,
            "mutability": "mutable",
            "name": "asset",
            "nameLocation": "3908:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 2436,
            "src": "3898:15:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$37164",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 2239,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2238,
                "name": "MockERC20",
                "nameLocations": [
                  "3898:9:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37164,
                "src": "3898:9:13"
              },
              "referencedDeclaration": 37164,
              "src": "3898:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$37164",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2243,
            "mutability": "mutable",
            "name": "rdToken",
            "nameLocation": "3929:7:13",
            "nodeType": "VariableDeclaration",
            "scope": 2436,
            "src": "3919:17:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockRDT_$23025",
              "typeString": "contract MockRDT"
            },
            "typeName": {
              "id": 2242,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2241,
                "name": "MockRDT",
                "nameLocations": [
                  "3919:7:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23025,
                "src": "3919:7:13"
              },
              "referencedDeclaration": 23025,
              "src": "3919:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockRDT_$23025",
                "typeString": "contract MockRDT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2246,
            "mutability": "mutable",
            "name": "staker",
            "nameLocation": "3952:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 2436,
            "src": "3942:16:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Staker_$22351",
              "typeString": "contract Staker"
            },
            "typeName": {
              "id": 2245,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2244,
                "name": "Staker",
                "nameLocations": [
                  "3942:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22351,
                "src": "3942:6:13"
              },
              "referencedDeclaration": 22351,
              "src": "3942:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staker_$22351",
                "typeString": "contract Staker"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2290,
              "nodeType": "Block",
              "src": "3997:281:13",
              "statements": [
                {
                  "expression": {
                    "id": 2257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2249,
                      "name": "asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2240,
                      "src": "4007:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$37164",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4d6f636b546f6b656e",
                          "id": 2253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4031:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e",
                            "typeString": "literal_string \"MockToken\""
                          },
                          "value": "MockToken"
                        },
                        {
                          "hexValue": "4d54",
                          "id": 2254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4044:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d",
                            "typeString": "literal_string \"MT\""
                          },
                          "value": "MT"
                        },
                        {
                          "hexValue": "3138",
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4050:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_59d91acf1a517d81ad15edcf2fd578e448883bcd506756a542295cb8c1c1be7e",
                            "typeString": "literal_string \"MockToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d",
                            "typeString": "literal_string \"MT\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 2252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4017:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$37164_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 2251,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2250,
                            "name": "MockERC20",
                            "nameLocations": [
                              "4021:9:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 37164,
                            "src": "4021:9:13"
                          },
                          "referencedDeclaration": 37164,
                          "src": "4021:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$37164",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 2256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4017:36:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$37164",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "4007:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$37164",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 2258,
                  "nodeType": "ExpressionStatement",
                  "src": "4007:46:13"
                },
                {
                  "expression": {
                    "id": 2275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2259,
                      "name": "rdToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2243,
                      "src": "4063:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockRDT_$23025",
                        "typeString": "contract MockRDT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "526576656e756520446973747269627574696f6e20546f6b656e",
                          "id": 2263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4085:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c",
                            "typeString": "literal_string \"Revenue Distribution Token\""
                          },
                          "value": "Revenue Distribution Token"
                        },
                        {
                          "hexValue": "524454",
                          "id": 2264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4115:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452",
                            "typeString": "literal_string \"RDT\""
                          },
                          "value": "RDT"
                        },
                        {
                          "arguments": [
                            {
                              "id": 2267,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "4130:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PreviewViewTests_$2436",
                                "typeString": "contract PreviewViewTests"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PreviewViewTests_$2436",
                                "typeString": "contract PreviewViewTests"
                              }
                            ],
                            "id": 2266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4122:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2265,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4122:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4122:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2271,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2240,
                              "src": "4145:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$37164",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$37164",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 2270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4137:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2269,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4137:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4137:14:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31653330",
                          "id": 2273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4153:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000000000000"
                          },
                          "value": "1e30"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_b15a9e23b01503c9bf7a0b14f52ea692df4512a338a216832917cc42e7ffed7c",
                            "typeString": "literal_string \"Revenue Distribution Token\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_2aa5dad9d77fb8d62ce056c3cedcc3e1fdf42367385b69d29d8268e8e5564452",
                            "typeString": "literal_string \"RDT\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000000000000"
                          }
                        ],
                        "id": 2262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4073:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_MockRDT_$23025_$",
                          "typeString": "function (string memory,string memory,address,address,uint256) returns (contract MockRDT)"
                        },
                        "typeName": {
                          "id": 2261,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2260,
                            "name": "MockRDT",
                            "nameLocations": [
                              "4077:7:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23025,
                            "src": "4077:7:13"
                          },
                          "referencedDeclaration": 23025,
                          "src": "4077:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockRDT_$23025",
                            "typeString": "contract MockRDT"
                          }
                        }
                      },
                      "id": 2274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4073:85:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockRDT_$23025",
                        "typeString": "contract MockRDT"
                      }
                    },
                    "src": "4063:95:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockRDT_$23025",
                      "typeString": "contract MockRDT"
                    }
                  },
                  "id": 2276,
                  "nodeType": "ExpressionStatement",
                  "src": "4063:95:13"
                },
                {
                  "expression": {
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2277,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2246,
                      "src": "4168:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Staker_$22351",
                        "typeString": "contract Staker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4178:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Staker_$22351_$",
                          "typeString": "function () returns (contract Staker)"
                        },
                        "typeName": {
                          "id": 2279,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2278,
                            "name": "Staker",
                            "nameLocations": [
                              "4182:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 22351,
                            "src": "4182:6:13"
                          },
                          "referencedDeclaration": 22351,
                          "src": "4182:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Staker_$22351",
                            "typeString": "contract Staker"
                          }
                        }
                      },
                      "id": 2281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4178:12:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Staker_$22351",
                        "typeString": "contract Staker"
                      }
                    },
                    "src": "4168:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Staker_$22351",
                      "typeString": "contract Staker"
                    }
                  },
                  "id": 2283,
                  "nodeType": "ExpressionStatement",
                  "src": "4168:22:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31305f3030305f303030",
                        "id": 2287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4208:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000_by_1",
                          "typeString": "int_const 10000000"
                        },
                        "value": "10_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000_by_1",
                          "typeString": "int_const 10000000"
                        }
                      ],
                      "expression": {
                        "id": 2284,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33420,
                        "src": "4200:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$25333",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4203:4:13",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25059,
                      "src": "4200:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4200:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2289,
                  "nodeType": "ExpressionStatement",
                  "src": "4200:19:13"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 2291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "3974:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3979:2:13"
            },
            "returnParameters": {
              "id": 2248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3997:0:13"
            },
            "scope": 2436,
            "src": "3965:313:13",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2362,
              "nodeType": "Block",
              "src": "4363:482:13",
              "statements": [
                {
                  "expression": {
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2298,
                      "name": "totalAssets_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2293,
                      "src": "4373:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2300,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2295,
                          "src": "4405:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 2301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4418:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31653239",
                          "id": 2302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4421:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          },
                          "value": "1e29"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          }
                        ],
                        "id": 2299,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "4388:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4388:38:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4373:53:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2305,
                  "nodeType": "ExpressionStatement",
                  "src": "4373:53:13"
                },
                {
                  "expression": {
                    "id": 2312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2306,
                      "name": "mintAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2295,
                      "src": "4436:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2308,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2295,
                          "src": "4468:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 2309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4481:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 2310,
                          "name": "totalAssets_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2293,
                          "src": "4484:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2307,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "4451:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4451:46:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4436:61:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2313,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:61:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2319,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2246,
                            "src": "4560:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          ],
                          "id": 2318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4552:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2317,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4552:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4552:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2321,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2295,
                        "src": "4569:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2314,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2240,
                        "src": "4541:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$37164",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4547:4:13",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37150,
                      "src": "4541:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4541:40:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2323,
                  "nodeType": "ExpressionStatement",
                  "src": "4541:40:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2329,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2240,
                            "src": "4621:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 2328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4613:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2327,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4613:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4613:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2333,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2243,
                            "src": "4637:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 2332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4629:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2331,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4629:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4629:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2335,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2295,
                        "src": "4647:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2324,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2246,
                        "src": "4592:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 2326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4599:13:13",
                      "memberName": "erc20_approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37039,
                      "src": "4592:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4592:67:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2337,
                  "nodeType": "ExpressionStatement",
                  "src": "4592:67:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2343,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2243,
                            "src": "4697:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 2342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4689:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2341,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4689:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4689:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2345,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2295,
                        "src": "4707:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2338,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2246,
                        "src": "4669:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 2340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4676:12:13",
                      "memberName": "rdToken_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22224,
                      "src": "4669:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 2346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4669:50:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2347,
                  "nodeType": "ExpressionStatement",
                  "src": "4669:50:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2351,
                        "name": "totalAssets_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2293,
                        "src": "4755:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2348,
                        "name": "rdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "4730:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockRDT_$23025",
                          "typeString": "contract MockRDT"
                        }
                      },
                      "id": 2350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4738:16:13",
                      "memberName": "__setTotalAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23024,
                      "src": "4730:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4730:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2353,
                  "nodeType": "ExpressionStatement",
                  "src": "4730:38:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2357,
                            "name": "totalAssets_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2293,
                            "src": "4811:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2355,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2243,
                            "src": "4788:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          },
                          "id": 2356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4796:14:13",
                          "memberName": "previewDeposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 806,
                          "src": "4788:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 2358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4788:36:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2359,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2295,
                        "src": "4826:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2354,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23578,
                        23603,
                        23633,
                        23658,
                        23717,
                        23742,
                        23772,
                        23797,
                        24897,
                        24932
                      ],
                      "referencedDeclaration": 23772,
                      "src": "4779:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4779:59:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2361,
                  "nodeType": "ExpressionStatement",
                  "src": "4779:59:13"
                }
              ]
            },
            "functionSelector": "1adde65a",
            "id": 2363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_previewDeposit",
            "nameLocation": "4293:19:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2293,
                  "mutability": "mutable",
                  "name": "totalAssets_",
                  "nameLocation": "4321:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "4313:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2295,
                  "mutability": "mutable",
                  "name": "mintAmount_",
                  "nameLocation": "4343:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "4335:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4335:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4312:43:13"
            },
            "returnParameters": {
              "id": 2297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4363:0:13"
            },
            "scope": 2436,
            "src": "4284:561:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2434,
              "nodeType": "Block",
              "src": "4927:479:13",
              "statements": [
                {
                  "expression": {
                    "id": 2376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2370,
                      "name": "totalAssets_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "4937:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2372,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2367,
                          "src": "4969:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 2373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4982:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31653239",
                          "id": 2374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4985:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          },
                          "value": "1e29"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000000"
                          }
                        ],
                        "id": 2371,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "4952:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4952:38:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4937:53:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2377,
                  "nodeType": "ExpressionStatement",
                  "src": "4937:53:13"
                },
                {
                  "expression": {
                    "id": 2384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2378,
                      "name": "mintAmount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2367,
                      "src": "5000:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2380,
                          "name": "mintAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2367,
                          "src": "5032:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 2381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5045:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 2382,
                          "name": "totalAssets_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2365,
                          "src": "5048:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2379,
                        "name": "constrictToRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33803,
                        "src": "5015:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5015:46:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5000:61:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2385,
                  "nodeType": "ExpressionStatement",
                  "src": "5000:61:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2391,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2246,
                            "src": "5124:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staker_$22351",
                              "typeString": "contract Staker"
                            }
                          ],
                          "id": 2390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5116:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2389,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5116:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5116:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2393,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2367,
                        "src": "5133:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2386,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2240,
                        "src": "5105:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$37164",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5111:4:13",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37150,
                      "src": "5105:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5105:40:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2395,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:40:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2401,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2240,
                            "src": "5185:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$37164",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 2400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5177:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2399,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5177:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5177:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2405,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2243,
                            "src": "5201:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 2404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5193:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5193:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5193:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2407,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2367,
                        "src": "5211:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2396,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2246,
                        "src": "5156:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 2398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5163:13:13",
                      "memberName": "erc20_approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37039,
                      "src": "5156:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5156:67:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2409,
                  "nodeType": "ExpressionStatement",
                  "src": "5156:67:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2415,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2243,
                            "src": "5261:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          ],
                          "id": 2414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5253:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2413,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5253:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5253:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2417,
                        "name": "mintAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2367,
                        "src": "5271:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2410,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2246,
                        "src": "5233:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staker_$22351",
                          "typeString": "contract Staker"
                        }
                      },
                      "id": 2412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5240:12:13",
                      "memberName": "rdToken_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22224,
                      "src": "5233:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 2418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5233:50:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2419,
                  "nodeType": "ExpressionStatement",
                  "src": "5233:50:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2423,
                        "name": "totalAssets_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "5319:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2420,
                        "name": "rdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "5294:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockRDT_$23025",
                          "typeString": "contract MockRDT"
                        }
                      },
                      "id": 2422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5302:16:13",
                      "memberName": "__setTotalAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23024,
                      "src": "5294:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5294:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2425,
                  "nodeType": "ExpressionStatement",
                  "src": "5294:38:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2429,
                            "name": "mintAmount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2367,
                            "src": "5372:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2427,
                            "name": "rdToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2243,
                            "src": "5352:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockRDT_$23025",
                              "typeString": "contract MockRDT"
                            }
                          },
                          "id": 2428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5360:11:13",
                          "memberName": "previewMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 834,
                          "src": "5352:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 2430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5352:32:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2431,
                        "name": "totalAssets_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "5386:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2426,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23578,
                        23603,
                        23633,
                        23658,
                        23717,
                        23742,
                        23772,
                        23797,
                        24897,
                        24932
                      ],
                      "referencedDeclaration": 23772,
                      "src": "5343:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5343:56:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2433,
                  "nodeType": "ExpressionStatement",
                  "src": "5343:56:13"
                }
              ]
            },
            "functionSelector": "45e47757",
            "id": 2435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_previewMint",
            "nameLocation": "4860:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2365,
                  "mutability": "mutable",
                  "name": "totalAssets_",
                  "nameLocation": "4885:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2435,
                  "src": "4877:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4877:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2367,
                  "mutability": "mutable",
                  "name": "mintAmount_",
                  "nameLocation": "4907:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2435,
                  "src": "4899:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4899:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4876:43:13"
            },
            "returnParameters": {
              "id": 2369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4927:0:13"
            },
            "scope": 2436,
            "src": "4851:555:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2437,
        "src": "3852:1557:13",
        "usedErrors": []
      }
    ],
    "src": "42:5395:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-01-15T01:59:51.777Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}